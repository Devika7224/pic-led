

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 31 09:44:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4580 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     _TRISC	set	3988
    47   000000                     _RC0	set	31760
    48   000000                     _TRISD	set	3989
    49   000000                     _PORTD	set	3971
    50                           
    51                           ; #config settings
    52                           
    53                           	psect	cinit
    54   000664                     __pcinit:
    55                           	callstack 0
    56   000664                     start_initialization:
    57                           	callstack 0
    58   000664                     __initialization:
    59                           	callstack 0
    60   000664                     end_of_initialization:
    61                           	callstack 0
    62   000664                     __end_of__initialization:
    63                           	callstack 0
    64   000664  0100               	movlb	0
    65   000666  EF01  F003         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68   000001                     __pcstackCOMRAM:
    69                           	callstack 0
    70   000001                     main@count:
    71                           	callstack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74   000001                     	ds	2
    75                           
    76 ;;
    77 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    78 ;;
    79 ;; *************** function _main *****************
    80 ;; Defined at:
    81 ;;		line 11 in file "onoff.c"
    82 ;; Parameters:    Size  Location     Type
    83 ;;		None
    84 ;; Auto vars:     Size  Location     Type
    85 ;;  count           2    0[COMRAM] int 
    86 ;; Return value:  Size  Location     Type
    87 ;;                  1    wreg      void 
    88 ;; Registers used:
    89 ;;		wreg, status,2, status,0
    90 ;; Tracked objects:
    91 ;;		On entry : 0/0
    92 ;;		On exit  : 0/0
    93 ;;		Unchanged: 0/0
    94 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    95 ;;      Params:         0       0       0       0       0       0       0
    96 ;;      Locals:         2       0       0       0       0       0       0
    97 ;;      Temps:          0       0       0       0       0       0       0
    98 ;;      Totals:         2       0       0       0       0       0       0
    99 ;;Total ram usage:        2 bytes
   100 ;; This function calls:
   101 ;;		Nothing
   102 ;; This function is called by:
   103 ;;		Startup code after reset
   104 ;; This function uses a non-reentrant model
   105 ;;
   106                           
   107                           	psect	text0
   108   000602                     __ptext0:
   109                           	callstack 0
   110   000602                     _main:
   111                           	callstack 31
   112   000602                     
   113                           ;onoff.c: 13:   TRISC= 0X01;
   114   000602  0E01               	movlw	1
   115   000604  6E94               	movwf	148,c	;volatile
   116                           
   117                           ;onoff.c: 14:   TRISD=0X00;
   118   000606  0E00               	movlw	0
   119   000608  6E95               	movwf	149,c	;volatile
   120                           
   121                           ;onoff.c: 15:   int count=0;
   122   00060A  0E00               	movlw	0
   123   00060C  6E02               	movwf	(main@count+1)^0,c
   124   00060E  0E00               	movlw	0
   125   000610  6E01               	movwf	main@count^0,c
   126   000612                     l700:
   127                           
   128                           ;onoff.c: 17:   {;onoff.c: 18:       if(RC0==1)
   129   000612  A082               	btfss	3970,0,c	;volatile
   130   000614  EF0E  F003         	goto	u11
   131   000618  EF10  F003         	goto	u10
   132   00061C                     u11:
   133   00061C  EF09  F003         	goto	l700
   134   000620                     u10:
   135   000620                     
   136                           ;onoff.c: 19:       {;onoff.c: 20:           if (count==0)
   137   000620  5001               	movf	main@count^0,w,c
   138   000622  1002               	iorwf	(main@count+1)^0,w,c
   139   000624  A4D8               	btfss	status,2,c
   140   000626  EF17  F003         	goto	u21
   141   00062A  EF19  F003         	goto	u20
   142   00062E                     u21:
   143   00062E  EF21  F003         	goto	l706
   144   000632                     u20:
   145   000632                     
   146                           ;onoff.c: 21:           {;onoff.c: 22:               PORTD=0X01;
   147   000632  0E01               	movlw	1
   148   000634  6E83               	movwf	131,c	;volatile
   149                           
   150                           ;onoff.c: 23:               count=1;
   151   000636  0E00               	movlw	0
   152   000638  6E02               	movwf	(main@count+1)^0,c
   153   00063A  0E01               	movlw	1
   154   00063C  6E01               	movwf	main@count^0,c
   155                           
   156                           ;onoff.c: 24:           }
   157   00063E  EF27  F003         	goto	l17
   158   000642                     l706:
   159                           
   160                           ;onoff.c: 26:           {;onoff.c: 27:               PORTD=0X00;
   161   000642  0E00               	movlw	0
   162   000644  6E83               	movwf	131,c	;volatile
   163                           
   164                           ;onoff.c: 28:               count=0;
   165   000646  0E00               	movlw	0
   166   000648  6E02               	movwf	(main@count+1)^0,c
   167   00064A  0E00               	movlw	0
   168   00064C  6E01               	movwf	main@count^0,c
   169   00064E                     l17:
   170   00064E  B082               	btfsc	3970,0,c	;volatile
   171   000650  EF2C  F003         	goto	u31
   172   000654  EF2E  F003         	goto	u30
   173   000658                     u31:
   174   000658  EF27  F003         	goto	l17
   175   00065C                     u30:
   176   00065C  EF09  F003         	goto	l700
   177   000660  EF00  F000         	goto	start
   178   000664                     __end_of_main:
   179                           	callstack 0
   180                           
   181                           	psect	smallconst
   182   000600                     __psmallconst:
   183                           	callstack 0
   184   000600  00                 	db	0
   185   000601  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           	psect	rparam
   188   000000                     tosu	equ	0xFFF
   189                           tosh	equ	0xFFE
   190                           tosl	equ	0xFFD
   191                           stkptr	equ	0xFFC
   192                           pclatu	equ	0xFFB
   193                           pclath	equ	0xFFA
   194                           pcl	equ	0xFF9
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           prodh	equ	0xFF4
   200                           prodl	equ	0xFF3
   201                           indf0	equ	0xFEF
   202                           postinc0	equ	0xFEE
   203                           postdec0	equ	0xFED
   204                           preinc0	equ	0xFEC
   205                           plusw0	equ	0xFEB
   206                           fsr0h	equ	0xFEA
   207                           fsr0l	equ	0xFE9
   208                           wreg	equ	0xFE8
   209                           indf1	equ	0xFE7
   210                           postinc1	equ	0xFE6
   211                           postdec1	equ	0xFE5
   212                           preinc1	equ	0xFE4
   213                           plusw1	equ	0xFE3
   214                           fsr1h	equ	0xFE2
   215                           fsr1l	equ	0xFE1
   216                           bsr	equ	0xFE0
   217                           indf2	equ	0xFDF
   218                           postinc2	equ	0xFDE
   219                           postdec2	equ	0xFDD
   220                           preinc2	equ	0xFDC
   221                           plusw2	equ	0xFDB
   222                           fsr2h	equ	0xFDA
   223                           fsr2l	equ	0xFD9
   224                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 31 09:44:17 2024

                     l17 064E                       u10 0620                       u11 061C  
                     u20 0632                       u21 062E                       u30 065C  
                     u31 0658                      l700 0612                      l702 0620  
                    l704 0632                      l706 0642                      l698 0602  
                    _RC0 7C10                     _main 0602                     start 0000  
           ___param_bank 0000                    ?_main 0001                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    status 0FD8  
        __initialization 0664             __end_of_main 0664                   ??_main 0001  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0664            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0664                  __ramtop 0600  
                __ptext0 0602     end_of_initialization 0664      start_initialization 0664  
            __smallconst 0600                main@count 0001                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000  
