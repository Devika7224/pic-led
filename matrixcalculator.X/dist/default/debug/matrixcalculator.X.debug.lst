

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 09 10:00:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RB7	set	31759
    52   000000                     _RB6	set	31758
    53   000000                     _RB5	set	31757
    54   000000                     _RB4	set	31756
    55   000000                     _PORTB	set	3969
    56   000000                     _TRISB	set	3987
    57   000000                     _ADCON1	set	4033
    58   000000                     _TRISD	set	3989
    59   000000                     _TRISC	set	3988
    60   000000                     _PORTD	set	3971
    61   000000                     _RC0	set	31760
    62                           
    63                           	psect	smallconst
    64   000600                     __psmallconst:
    65                           	callstack 0
    66   000600  00                 	db	0
    67   000601                     STR_10:
    68   000601  30                 	db	48	;'0'
    69   000602  00                 	db	0
    70   000603                     STR_7:
    71   000603  31                 	db	49	;'1'
    72   000604  00                 	db	0
    73   000605                     STR_8:
    74   000605  32                 	db	50	;'2'
    75   000606  00                 	db	0
    76   000607                     STR_9:
    77   000607  33                 	db	51	;'3'
    78   000608  00                 	db	0
    79   000609                     STR_4:
    80   000609  34                 	db	52	;'4'
    81   00060A  00                 	db	0
    82   00060B                     STR_5:
    83   00060B  35                 	db	53	;'5'
    84   00060C  00                 	db	0
    85   00060D                     STR_6:
    86   00060D  36                 	db	54	;'6'
    87   00060E  00                 	db	0
    88   00060F                     STR_1:
    89   00060F  37                 	db	55	;'7'
    90   000610  00                 	db	0
    91   000611                     STR_2:
    92   000611  38                 	db	56	;'8'
    93   000612  00                 	db	0
    94   000613                     STR_3:
    95   000613  39                 	db	57	;'9'
    96   000614  00                 	db	0
    97   000615  00                 	db	0	; dummy byte at the end
    98   000000                     
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   0009A8                     __pcinit:
   103                           	callstack 0
   104   0009A8                     start_initialization:
   105                           	callstack 0
   106   0009A8                     __initialization:
   107                           	callstack 0
   108   0009A8                     end_of_initialization:
   109                           	callstack 0
   110   0009A8                     __end_of__initialization:
   111                           	callstack 0
   112   0009A8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   113   0009AA  6EF8               	movwf	tblptru,c
   114   0009AC  0E06               	movlw	high __Lsmallconst
   115   0009AE  6EF7               	movwf	tblptrh,c
   116   0009B0  0100               	movlb	0
   117   0009B2  EF0B  F003         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	cstackCOMRAM
   120   000001                     __pcstackCOMRAM:
   121                           	callstack 0
   122   000001                     cmd@a:
   123                           	callstack 0
   124   000001                     data@a:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x0
   128   000001                     	ds	1
   129   000002                     cmd@i:
   130                           	callstack 0
   131   000002                     data@i:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x1
   135   000002                     	ds	2
   136   000004                     cmd@i_66:
   137                           	callstack 0
   138   000004                     data@i_70:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x3
   142   000004                     	ds	2
   143   000006                     display@p:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x5
   147   000006                     	ds	1
   148   000007                     main@count:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x6
   152   000007                     	ds	2
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 13 in file "calculatorlcd.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  count           2    6[COMRAM] int 
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   173 ;;      Params:         0       0       0       0       0       0       0
   174 ;;      Locals:         2       0       0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0
   176 ;;      Totals:         2       0       0       0       0       0       0
   177 ;;Total ram usage:        2 bytes
   178 ;; Hardware stack levels required when called: 2
   179 ;; This function calls:
   180 ;;		_cmd
   181 ;;		_display
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188   000616                     __ptext0:
   189                           	callstack 0
   190   000616                     _main:
   191                           	callstack 29
   192   000616                     
   193                           ;calculatorlcd.c: 15:     ADCON1=0X0F;
   194   000616  0E0F               	movlw	15
   195   000618  6EC1               	movwf	193,c	;volatile
   196                           
   197                           ;calculatorlcd.c: 16:     TRISB=0XF0;
   198   00061A  0EF0               	movlw	240
   199   00061C  6E93               	movwf	147,c	;volatile
   200                           
   201                           ;calculatorlcd.c: 17:     TRISC=0X00;
   202   00061E  0E00               	movlw	0
   203   000620  6E94               	movwf	148,c	;volatile
   204                           
   205                           ;calculatorlcd.c: 18:     TRISD=0X00;
   206   000622  0E00               	movlw	0
   207   000624  6E95               	movwf	149,c	;volatile
   208   000626                     
   209                           ;calculatorlcd.c: 19:     cmd(0x0F);
   210   000626  0E0F               	movlw	15
   211   000628  EC8E  F004         	call	_cmd
   212   00062C                     
   213                           ;calculatorlcd.c: 20:     cmd(0X0C);
   214   00062C  0E0C               	movlw	12
   215   00062E  EC8E  F004         	call	_cmd
   216   000632                     
   217                           ;calculatorlcd.c: 21:     int count=-1;
   218   000632  6807               	setf	main@count^0,c
   219   000634  6808               	setf	(main@count+1)^0,c
   220   000636                     l35:
   221                           
   222                           ;calculatorlcd.c: 23:     {;calculatorlcd.c: 24:     PORTB=0X0E;
   223   000636  0E0E               	movlw	14
   224   000638  6E81               	movwf	129,c	;volatile
   225   00063A                     
   226                           ;calculatorlcd.c: 25:     if(RB4==0)
   227   00063A  B881               	btfsc	3969,4,c	;volatile
   228   00063C  EF22  F003         	goto	u401
   229   000640  EF24  F003         	goto	u400
   230   000644                     u401:
   231   000644  EF31  F003         	goto	l36
   232   000648                     u400:
   233   000648                     
   234                           ;calculatorlcd.c: 26:        {;calculatorlcd.c: 29:            display("7");
   235   000648  0E0F               	movlw	low STR_1
   236   00064A  6E06               	movwf	display@p^0,c
   237   00064C  ECBE  F004         	call	_display	;wreg free
   238   000650                     l37:
   239   000650  A881               	btfss	3969,4,c	;volatile
   240   000652  EF2D  F003         	goto	u411
   241   000656  EF2F  F003         	goto	u410
   242   00065A                     u411:
   243   00065A  EF28  F003         	goto	l37
   244   00065E                     u410:
   245   00065E  EF67  F003         	goto	l965
   246   000662                     l36:
   247   000662  BA81               	btfsc	3969,5,c	;volatile
   248   000664  EF36  F003         	goto	u421
   249   000668  EF38  F003         	goto	u420
   250   00066C                     u421:
   251   00066C  EF45  F003         	goto	l41
   252   000670                     u420:
   253   000670                     
   254                           ;calculatorlcd.c: 33:        {;calculatorlcd.c: 36:            display("8");
   255   000670  0E11               	movlw	low STR_2
   256   000672  6E06               	movwf	display@p^0,c
   257   000674  ECBE  F004         	call	_display	;wreg free
   258   000678                     l42:
   259   000678  AA81               	btfss	3969,5,c	;volatile
   260   00067A  EF41  F003         	goto	u431
   261   00067E  EF43  F003         	goto	u430
   262   000682                     u431:
   263   000682  EF3C  F003         	goto	l42
   264   000686                     u430:
   265   000686  EF67  F003         	goto	l965
   266   00068A                     l41:
   267   00068A  BC81               	btfsc	3969,6,c	;volatile
   268   00068C  EF4A  F003         	goto	u441
   269   000690  EF4C  F003         	goto	u440
   270   000694                     u441:
   271   000694  EF59  F003         	goto	l46
   272   000698                     u440:
   273   000698                     
   274                           ;calculatorlcd.c: 40:        {;calculatorlcd.c: 43:             display("9");
   275   000698  0E13               	movlw	low STR_3
   276   00069A  6E06               	movwf	display@p^0,c
   277   00069C  ECBE  F004         	call	_display	;wreg free
   278   0006A0                     l47:
   279   0006A0  AC81               	btfss	3969,6,c	;volatile
   280   0006A2  EF55  F003         	goto	u451
   281   0006A6  EF57  F003         	goto	u450
   282   0006AA                     u451:
   283   0006AA  EF50  F003         	goto	l47
   284   0006AE                     u450:
   285   0006AE  EF67  F003         	goto	l965
   286   0006B2                     l46:
   287   0006B2  BE81               	btfsc	3969,7,c	;volatile
   288   0006B4  EF5E  F003         	goto	u461
   289   0006B8  EF60  F003         	goto	u460
   290   0006BC                     u461:
   291   0006BC  EF67  F003         	goto	l965
   292   0006C0                     u460:
   293   0006C0                     l52:
   294   0006C0  AE81               	btfss	3969,7,c	;volatile
   295   0006C2  EF65  F003         	goto	u471
   296   0006C6  EF67  F003         	goto	u470
   297   0006CA                     u471:
   298   0006CA  EF60  F003         	goto	l52
   299   0006CE                     u470:
   300   0006CE                     l965:
   301                           
   302                           ;calculatorlcd.c: 52:        PORTB=0X0D;
   303   0006CE  0E0D               	movlw	13
   304   0006D0  6E81               	movwf	129,c	;volatile
   305   0006D2                     
   306                           ;calculatorlcd.c: 54:        if(RB4==0)
   307   0006D2  B881               	btfsc	3969,4,c	;volatile
   308   0006D4  EF6E  F003         	goto	u481
   309   0006D8  EF70  F003         	goto	u480
   310   0006DC                     u481:
   311   0006DC  EF7D  F003         	goto	l55
   312   0006E0                     u480:
   313   0006E0                     
   314                           ;calculatorlcd.c: 55:        {;calculatorlcd.c: 57:            display("4");
   315   0006E0  0E09               	movlw	low STR_4
   316   0006E2  6E06               	movwf	display@p^0,c
   317   0006E4  ECBE  F004         	call	_display	;wreg free
   318   0006E8                     l56:
   319   0006E8  A881               	btfss	3969,4,c	;volatile
   320   0006EA  EF79  F003         	goto	u491
   321   0006EE  EF7B  F003         	goto	u490
   322   0006F2                     u491:
   323   0006F2  EF74  F003         	goto	l56
   324   0006F6                     u490:
   325   0006F6  EFB3  F003         	goto	l977
   326   0006FA                     l55:
   327   0006FA  BA81               	btfsc	3969,5,c	;volatile
   328   0006FC  EF82  F003         	goto	u501
   329   000700  EF84  F003         	goto	u500
   330   000704                     u501:
   331   000704  EF91  F003         	goto	l60
   332   000708                     u500:
   333   000708                     
   334                           ;calculatorlcd.c: 61:        {;calculatorlcd.c: 63:             display("5");
   335   000708  0E0B               	movlw	low STR_5
   336   00070A  6E06               	movwf	display@p^0,c
   337   00070C  ECBE  F004         	call	_display	;wreg free
   338   000710                     l61:
   339   000710  AA81               	btfss	3969,5,c	;volatile
   340   000712  EF8D  F003         	goto	u511
   341   000716  EF8F  F003         	goto	u510
   342   00071A                     u511:
   343   00071A  EF88  F003         	goto	l61
   344   00071E                     u510:
   345   00071E  EFB3  F003         	goto	l977
   346   000722                     l60:
   347   000722  BC81               	btfsc	3969,6,c	;volatile
   348   000724  EF96  F003         	goto	u521
   349   000728  EF98  F003         	goto	u520
   350   00072C                     u521:
   351   00072C  EFA5  F003         	goto	l65
   352   000730                     u520:
   353   000730                     
   354                           ;calculatorlcd.c: 67:        {;calculatorlcd.c: 69:             display("6");
   355   000730  0E0D               	movlw	low STR_6
   356   000732  6E06               	movwf	display@p^0,c
   357   000734  ECBE  F004         	call	_display	;wreg free
   358   000738                     l66:
   359   000738  AC81               	btfss	3969,6,c	;volatile
   360   00073A  EFA1  F003         	goto	u531
   361   00073E  EFA3  F003         	goto	u530
   362   000742                     u531:
   363   000742  EF9C  F003         	goto	l66
   364   000746                     u530:
   365   000746  EFB3  F003         	goto	l977
   366   00074A                     l65:
   367   00074A  BE81               	btfsc	3969,7,c	;volatile
   368   00074C  EFAA  F003         	goto	u541
   369   000750  EFAC  F003         	goto	u540
   370   000754                     u541:
   371   000754  EFB3  F003         	goto	l977
   372   000758                     u540:
   373   000758                     l71:
   374   000758  AE81               	btfss	3969,7,c	;volatile
   375   00075A  EFB1  F003         	goto	u551
   376   00075E  EFB3  F003         	goto	u550
   377   000762                     u551:
   378   000762  EFAC  F003         	goto	l71
   379   000766                     u550:
   380   000766                     l977:
   381                           
   382                           ;calculatorlcd.c: 79:        PORTB=0X0B;
   383   000766  0E0B               	movlw	11
   384   000768  6E81               	movwf	129,c	;volatile
   385   00076A                     
   386                           ;calculatorlcd.c: 81:        if(RB4==0)
   387   00076A  B881               	btfsc	3969,4,c	;volatile
   388   00076C  EFBA  F003         	goto	u561
   389   000770  EFBC  F003         	goto	u560
   390   000774                     u561:
   391   000774  EFC9  F003         	goto	l74
   392   000778                     u560:
   393   000778                     
   394                           ;calculatorlcd.c: 82:        {;calculatorlcd.c: 85:            display("1");
   395   000778  0E03               	movlw	low STR_7
   396   00077A  6E06               	movwf	display@p^0,c
   397   00077C  ECBE  F004         	call	_display	;wreg free
   398   000780                     l75:
   399   000780  A881               	btfss	3969,4,c	;volatile
   400   000782  EFC5  F003         	goto	u571
   401   000786  EFC7  F003         	goto	u570
   402   00078A                     u571:
   403   00078A  EFC0  F003         	goto	l75
   404   00078E                     u570:
   405   00078E  EFFF  F003         	goto	l989
   406   000792                     l74:
   407   000792  BA81               	btfsc	3969,5,c	;volatile
   408   000794  EFCE  F003         	goto	u581
   409   000798  EFD0  F003         	goto	u580
   410   00079C                     u581:
   411   00079C  EFDD  F003         	goto	l79
   412   0007A0                     u580:
   413   0007A0                     
   414                           ;calculatorlcd.c: 90:        {;calculatorlcd.c: 93:            display("2");
   415   0007A0  0E05               	movlw	low STR_8
   416   0007A2  6E06               	movwf	display@p^0,c
   417   0007A4  ECBE  F004         	call	_display	;wreg free
   418   0007A8                     l80:
   419   0007A8  AA81               	btfss	3969,5,c	;volatile
   420   0007AA  EFD9  F003         	goto	u591
   421   0007AE  EFDB  F003         	goto	u590
   422   0007B2                     u591:
   423   0007B2  EFD4  F003         	goto	l80
   424   0007B6                     u590:
   425   0007B6  EFFF  F003         	goto	l989
   426   0007BA                     l79:
   427   0007BA  BC81               	btfsc	3969,6,c	;volatile
   428   0007BC  EFE2  F003         	goto	u601
   429   0007C0  EFE4  F003         	goto	u600
   430   0007C4                     u601:
   431   0007C4  EFF1  F003         	goto	l84
   432   0007C8                     u600:
   433   0007C8                     
   434                           ;calculatorlcd.c: 97:        {;calculatorlcd.c: 100:            display("3");
   435   0007C8  0E07               	movlw	low STR_9
   436   0007CA  6E06               	movwf	display@p^0,c
   437   0007CC  ECBE  F004         	call	_display	;wreg free
   438   0007D0                     l85:
   439   0007D0  AC81               	btfss	3969,6,c	;volatile
   440   0007D2  EFED  F003         	goto	u611
   441   0007D6  EFEF  F003         	goto	u610
   442   0007DA                     u611:
   443   0007DA  EFE8  F003         	goto	l85
   444   0007DE                     u610:
   445   0007DE  EFFF  F003         	goto	l989
   446   0007E2                     l84:
   447   0007E2  BE81               	btfsc	3969,7,c	;volatile
   448   0007E4  EFF6  F003         	goto	u621
   449   0007E8  EFF8  F003         	goto	u620
   450   0007EC                     u621:
   451   0007EC  EFFF  F003         	goto	l989
   452   0007F0                     u620:
   453   0007F0                     l90:
   454   0007F0  AE81               	btfss	3969,7,c	;volatile
   455   0007F2  EFFD  F003         	goto	u631
   456   0007F6  EFFF  F003         	goto	u630
   457   0007FA                     u631:
   458   0007FA  EFF8  F003         	goto	l90
   459   0007FE                     u630:
   460   0007FE                     l989:
   461                           
   462                           ;calculatorlcd.c: 111:        PORTB=0X07;
   463   0007FE  0E07               	movlw	7
   464   000800  6E81               	movwf	129,c	;volatile
   465   000802                     
   466                           ;calculatorlcd.c: 113:        if(RB4==0)
   467   000802  B881               	btfsc	3969,4,c	;volatile
   468   000804  EF06  F004         	goto	u641
   469   000808  EF08  F004         	goto	u640
   470   00080C                     u641:
   471   00080C  EF25  F004         	goto	l93
   472   000810                     u640:
   473   000810                     
   474                           ;calculatorlcd.c: 114:        {;calculatorlcd.c: 116:            if(count==1)
   475   000810  0407               	decf	main@count^0,w,c
   476   000812  1008               	iorwf	(main@count+1)^0,w,c
   477   000814  A4D8               	btfss	status,2,c
   478   000816  EF0F  F004         	goto	u651
   479   00081A  EF11  F004         	goto	u650
   480   00081E                     u651:
   481   00081E  EF13  F004         	goto	l997
   482   000822                     u650:
   483   000822                     
   484                           ;calculatorlcd.c: 117:             {;calculatorlcd.c: 118:                 count=-1;
   485   000822  6807               	setf	main@count^0,c
   486   000824  6808               	setf	(main@count+1)^0,c
   487   000826                     l997:
   488                           
   489                           ;calculatorlcd.c: 120:             count++;
   490   000826  4A07               	infsnz	main@count^0,f,c
   491   000828  2A08               	incf	(main@count+1)^0,f,c
   492   00082A                     
   493                           ;calculatorlcd.c: 125:             if(count=1)
   494   00082A  0E00               	movlw	0
   495   00082C  6E08               	movwf	(main@count+1)^0,c
   496   00082E  0E01               	movlw	1
   497   000830  6E07               	movwf	main@count^0,c
   498   000832                     
   499                           ;calculatorlcd.c: 126:             {;calculatorlcd.c: 127:                 cmd(0x08);
   500   000832  0E08               	movlw	8
   501   000834  EC8E  F004         	call	_cmd
   502   000838                     l97:
   503   000838  A881               	btfss	3969,4,c	;volatile
   504   00083A  EF21  F004         	goto	u661
   505   00083E  EF23  F004         	goto	u660
   506   000842                     u661:
   507   000842  EF1C  F004         	goto	l97
   508   000846                     u660:
   509   000846  EF1B  F003         	goto	l35
   510   00084A                     l93:
   511   00084A  BA81               	btfsc	3969,5,c	;volatile
   512   00084C  EF2A  F004         	goto	u671
   513   000850  EF2C  F004         	goto	u670
   514   000854                     u671:
   515   000854  EF39  F004         	goto	l101
   516   000858                     u670:
   517   000858                     
   518                           ;calculatorlcd.c: 134:        {;calculatorlcd.c: 137:            display("0");
   519   000858  0E01               	movlw	low STR_10
   520   00085A  6E06               	movwf	display@p^0,c
   521   00085C  ECBE  F004         	call	_display	;wreg free
   522   000860                     l102:
   523   000860  AA81               	btfss	3969,5,c	;volatile
   524   000862  EF35  F004         	goto	u681
   525   000866  EF37  F004         	goto	u680
   526   00086A                     u681:
   527   00086A  EF30  F004         	goto	l102
   528   00086E                     u680:
   529   00086E  EF1B  F003         	goto	l35
   530   000872                     l101:
   531   000872  BC81               	btfsc	3969,6,c	;volatile
   532   000874  EF3E  F004         	goto	u691
   533   000878  EF40  F004         	goto	u690
   534   00087C                     u691:
   535   00087C  EF4C  F004         	goto	l106
   536   000880                     u690:
   537   000880                     
   538                           ;calculatorlcd.c: 141:        {;calculatorlcd.c: 144:            cmd(0x01);
   539   000880  0E01               	movlw	1
   540   000882  EC8E  F004         	call	_cmd
   541   000886                     l107:
   542   000886  AC81               	btfss	3969,6,c	;volatile
   543   000888  EF48  F004         	goto	u701
   544   00088C  EF4A  F004         	goto	u700
   545   000890                     u701:
   546   000890  EF43  F004         	goto	l107
   547   000894                     u700:
   548   000894  EF1B  F003         	goto	l35
   549   000898                     l106:
   550   000898  BE81               	btfsc	3969,7,c	;volatile
   551   00089A  EF51  F004         	goto	u711
   552   00089E  EF53  F004         	goto	u710
   553   0008A2                     u711:
   554   0008A2  EF1B  F003         	goto	l35
   555   0008A6                     u710:
   556   0008A6                     l112:
   557   0008A6  AE81               	btfss	3969,7,c	;volatile
   558   0008A8  EF58  F004         	goto	u721
   559   0008AC  EF5A  F004         	goto	u720
   560   0008B0                     u721:
   561   0008B0  EF53  F004         	goto	l112
   562   0008B4                     u720:
   563   0008B4  EF1B  F003         	goto	l35
   564   0008B8  EF00  F000         	goto	start
   565   0008BC                     __end_of_main:
   566                           	callstack 0
   567                           
   568 ;; *************** function _display *****************
   569 ;; Defined at:
   570 ;;		line 177 in file "calculatorlcd.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  p               1    5[COMRAM] PTR const unsigned char 
   573 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
   574 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
   575 ;;		 -> STR_2(2), STR_1(2), 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   587 ;;      Params:         1       0       0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0
   590 ;;      Totals:         1       0       0       0       0       0       0
   591 ;;Total ram usage:        1 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 1
   594 ;; This function calls:
   595 ;;		_data
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text1
   602   00097C                     __ptext1:
   603                           	callstack 0
   604   00097C                     _display:
   605                           	callstack 29
   606   00097C                     
   607                           ;calculatorlcd.c: 177: void display(const char *p);calculatorlcd.c: 178: {;calculatorlcd
      +                          .c: 179:     while(*p)
   608   00097C  EFC7  F004         	goto	l945
   609   000980                     l941:
   610                           
   611                           ;calculatorlcd.c: 180:     {;calculatorlcd.c: 181:         data(*p);
   612   000980  C006  FFF6         	movff	display@p,tblptrl
   613   000984                     	if	0	;There is only one active tblptr byte
   614   000984                     	endif
   615   000984                     	if	0	;tblptru may be non-zero
   616   000984                     	endif
   617   000984                     	if	0	;tblptru may be non-zero
   618   000984                     	endif
   619   000984  0008               	tblrd		*
   620   000986  50F5               	movf	tablat,w,c
   621   000988  EC5E  F004         	call	_data
   622   00098C                     
   623                           ;calculatorlcd.c: 182:         p++;
   624   00098C  2A06               	incf	display@p^0,f,c
   625   00098E                     l945:
   626                           
   627                           ;calculatorlcd.c: 179:     while(*p)
   628   00098E  C006  FFF6         	movff	display@p,tblptrl
   629   000992                     	if	0	;There is only one active tblptr byte
   630   000992                     	endif
   631   000992                     	if	0	;tblptru may be non-zero
   632   000992                     	endif
   633   000992                     	if	0	;tblptru may be non-zero
   634   000992                     	endif
   635   000992  0008               	tblrd		*
   636   000994  50F5               	movf	tablat,w,c
   637   000996  0900               	iorlw	0
   638   000998  A4D8               	btfss	status,2,c
   639   00099A  EFD1  F004         	goto	u391
   640   00099E  EFD3  F004         	goto	u390
   641   0009A2                     u391:
   642   0009A2  EFC0  F004         	goto	l941
   643   0009A6                     u390:
   644   0009A6  0012               	return		;funcret
   645   0009A8                     __end_of_display:
   646                           	callstack 0
   647                           
   648 ;; *************** function _data *****************
   649 ;; Defined at:
   650 ;;		line 166 in file "calculatorlcd.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  a               1    wreg     unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  a               1    0[COMRAM] unsigned char 
   655 ;;  i               2    3[COMRAM] int 
   656 ;;  i               2    1[COMRAM] int 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         0       0       0       0       0       0       0
   667 ;;      Locals:         5       0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0
   669 ;;      Totals:         5       0       0       0       0       0       0
   670 ;;Total ram usage:        5 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_display
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text2
   680   0008BC                     __ptext2:
   681                           	callstack 0
   682   0008BC                     _data:
   683                           	callstack 29
   684                           
   685                           ;incstack = 0
   686                           ;data@a stored from wreg
   687   0008BC  6E01               	movwf	data@a^0,c
   688   0008BE                     
   689                           ;calculatorlcd.c: 166: void data(unsigned char a );calculatorlcd.c: 167: {;calculatorlcd
      +                          .c: 168:     RC0=1;
   690   0008BE  8082               	bsf	3970,0,c	;volatile
   691                           
   692                           ;calculatorlcd.c: 169:     RC1=0;
   693   0008C0  9282               	bcf	3970,1,c	;volatile
   694   0008C2                     
   695                           ;calculatorlcd.c: 170:     PORTD=a;
   696   0008C2  C001  FF83         	movff	data@a,3971	;volatile
   697   0008C6                     
   698                           ;calculatorlcd.c: 171:     RC2=1;
   699   0008C6  8482               	bsf	3970,2,c	;volatile
   700   0008C8                     
   701                           ;calculatorlcd.c: 172:     for(int i=0;i<=100;i++);
   702   0008C8  0E00               	movlw	0
   703   0008CA  6E03               	movwf	(data@i+1)^0,c
   704   0008CC  0E00               	movlw	0
   705   0008CE  6E02               	movwf	data@i^0,c
   706   0008D0                     l825:
   707   0008D0  4A02               	infsnz	data@i^0,f,c
   708   0008D2  2A03               	incf	(data@i+1)^0,f,c
   709   0008D4  BE03               	btfsc	(data@i+1)^0,7,c
   710   0008D6  EF76  F004         	goto	u11
   711   0008DA  5003               	movf	(data@i+1)^0,w,c
   712   0008DC  E109               	bnz	u10
   713   0008DE  0E65               	movlw	101
   714   0008E0  5C02               	subwf	data@i^0,w,c
   715   0008E2  A0D8               	btfss	status,0,c
   716   0008E4  EF76  F004         	goto	u11
   717   0008E8  EF78  F004         	goto	u10
   718   0008EC                     u11:
   719   0008EC  EF68  F004         	goto	l825
   720   0008F0                     u10:
   721   0008F0                     
   722                           ;calculatorlcd.c: 173:     RC2=0;
   723   0008F0  9482               	bcf	3970,2,c	;volatile
   724   0008F2                     
   725                           ;calculatorlcd.c: 174:     for(int i=0;i<=5000;i++);
   726   0008F2  0E00               	movlw	0
   727   0008F4  6E05               	movwf	(data@i_70+1)^0,c
   728   0008F6  0E00               	movlw	0
   729   0008F8  6E04               	movwf	data@i_70^0,c
   730   0008FA                     l835:
   731   0008FA  4A04               	infsnz	data@i_70^0,f,c
   732   0008FC  2A05               	incf	(data@i_70+1)^0,f,c
   733   0008FE  BE05               	btfsc	(data@i_70+1)^0,7,c
   734   000900  EF8B  F004         	goto	u21
   735   000904  0E89               	movlw	137
   736   000906  5C04               	subwf	data@i_70^0,w,c
   737   000908  0E13               	movlw	19
   738   00090A  5805               	subwfb	(data@i_70+1)^0,w,c
   739   00090C  A0D8               	btfss	status,0,c
   740   00090E  EF8B  F004         	goto	u21
   741   000912  EF8D  F004         	goto	u20
   742   000916                     u21:
   743   000916  EF7D  F004         	goto	l835
   744   00091A                     u20:
   745   00091A  0012               	return		;funcret
   746   00091C                     __end_of_data:
   747                           	callstack 0
   748                           
   749 ;; *************** function _cmd *****************
   750 ;; Defined at:
   751 ;;		line 156 in file "calculatorlcd.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  a               1    wreg     unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  a               1    0[COMRAM] unsigned char 
   756 ;;  i               2    3[COMRAM] int 
   757 ;;  i               2    1[COMRAM] int 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   767 ;;      Params:         0       0       0       0       0       0       0
   768 ;;      Locals:         5       0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0
   770 ;;      Totals:         5       0       0       0       0       0       0
   771 ;;Total ram usage:        5 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   00091C                     __ptext3:
   782                           	callstack 0
   783   00091C                     _cmd:
   784                           	callstack 30
   785                           
   786                           ;incstack = 0
   787                           ;cmd@a stored from wreg
   788   00091C  6E01               	movwf	cmd@a^0,c
   789   00091E                     
   790                           ;calculatorlcd.c: 156:     void cmd(unsigned char a );calculatorlcd.c: 157: {;calculator
      +                          lcd.c: 158:     RC0=0;
   791   00091E  9082               	bcf	3970,0,c	;volatile
   792                           
   793                           ;calculatorlcd.c: 159:     RC1=0;
   794   000920  9282               	bcf	3970,1,c	;volatile
   795   000922                     
   796                           ;calculatorlcd.c: 160:     PORTD=a;
   797   000922  C001  FF83         	movff	cmd@a,3971	;volatile
   798   000926                     
   799                           ;calculatorlcd.c: 161:     RC2=1;
   800   000926  8482               	bsf	3970,2,c	;volatile
   801   000928                     
   802                           ;calculatorlcd.c: 162:     for(int i=0;i<=100;i++);
   803   000928  0E00               	movlw	0
   804   00092A  6E03               	movwf	(cmd@i+1)^0,c
   805   00092C  0E00               	movlw	0
   806   00092E  6E02               	movwf	cmd@i^0,c
   807   000930                     l851:
   808   000930  4A02               	infsnz	cmd@i^0,f,c
   809   000932  2A03               	incf	(cmd@i+1)^0,f,c
   810   000934  BE03               	btfsc	(cmd@i+1)^0,7,c
   811   000936  EFA6  F004         	goto	u31
   812   00093A  5003               	movf	(cmd@i+1)^0,w,c
   813   00093C  E109               	bnz	u30
   814   00093E  0E65               	movlw	101
   815   000940  5C02               	subwf	cmd@i^0,w,c
   816   000942  A0D8               	btfss	status,0,c
   817   000944  EFA6  F004         	goto	u31
   818   000948  EFA8  F004         	goto	u30
   819   00094C                     u31:
   820   00094C  EF98  F004         	goto	l851
   821   000950                     u30:
   822   000950                     
   823                           ;calculatorlcd.c: 163:     RC2=0;
   824   000950  9482               	bcf	3970,2,c	;volatile
   825   000952                     
   826                           ;calculatorlcd.c: 164:     for(int i=0;i<=5000;i++);
   827   000952  0E00               	movlw	0
   828   000954  6E05               	movwf	(cmd@i_66+1)^0,c
   829   000956  0E00               	movlw	0
   830   000958  6E04               	movwf	cmd@i_66^0,c
   831   00095A                     l861:
   832   00095A  4A04               	infsnz	cmd@i_66^0,f,c
   833   00095C  2A05               	incf	(cmd@i_66+1)^0,f,c
   834   00095E  BE05               	btfsc	(cmd@i_66+1)^0,7,c
   835   000960  EFBB  F004         	goto	u41
   836   000964  0E89               	movlw	137
   837   000966  5C04               	subwf	cmd@i_66^0,w,c
   838   000968  0E13               	movlw	19
   839   00096A  5805               	subwfb	(cmd@i_66+1)^0,w,c
   840   00096C  A0D8               	btfss	status,0,c
   841   00096E  EFBB  F004         	goto	u41
   842   000972  EFBD  F004         	goto	u40
   843   000976                     u41:
   844   000976  EFAD  F004         	goto	l861
   845   00097A                     u40:
   846   00097A  0012               	return		;funcret
   847   00097C                     __end_of_cmd:
   848                           	callstack 0
   849                           
   850                           	psect	rparam
   851   000000                     tosu	equ	0xFFF
   852                           tosh	equ	0xFFE
   853                           tosl	equ	0xFFD
   854                           stkptr	equ	0xFFC
   855                           pclatu	equ	0xFFB
   856                           pclath	equ	0xFFA
   857                           pcl	equ	0xFF9
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           prodh	equ	0xFF4
   863                           prodl	equ	0xFF3
   864                           indf0	equ	0xFEF
   865                           postinc0	equ	0xFEE
   866                           postdec0	equ	0xFED
   867                           preinc0	equ	0xFEC
   868                           plusw0	equ	0xFEB
   869                           fsr0h	equ	0xFEA
   870                           fsr0l	equ	0xFE9
   871                           wreg	equ	0xFE8
   872                           indf1	equ	0xFE7
   873                           postinc1	equ	0xFE6
   874                           postdec1	equ	0xFE5
   875                           preinc1	equ	0xFE4
   876                           plusw1	equ	0xFE3
   877                           fsr1h	equ	0xFE2
   878                           fsr1l	equ	0xFE1
   879                           bsr	equ	0xFE0
   880                           indf2	equ	0xFDF
   881                           postinc2	equ	0xFDE
   882                           postdec2	equ	0xFDD
   883                           preinc2	equ	0xFDC
   884                           plusw2	equ	0xFDB
   885                           fsr2h	equ	0xFDA
   886                           fsr2l	equ	0xFD9
   887                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_10(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), 
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), 
		 -> STR_8(CODE[2]), STR_9(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     982
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     880
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             5FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 09 10:00:20 2024

                     l41 068A                       l42 0678                       l35 0636  
                     l60 0722                       l52 06C0                       l36 0662  
                     l61 0710                       l37 0650                       l46 06B2  
                     l71 0758                       l55 06FA                       l47 06A0  
                     l80 07A8                       l56 06E8                       l65 074A  
                     l90 07F0                       l74 0792                       l66 0738  
                     l75 0780                       l84 07E2                       l93 084A  
                     l85 07D0                       l79 07BA                       l97 0838  
                     u10 08F0                       u11 08EC                       u20 091A  
                     u21 0916                       u30 0950                       u31 094C  
                     u40 097A                       u41 0976                      l101 0872  
                    l102 0860                      l112 08A6                      l121 0950  
                    l106 0898                      l131 091A                      l107 0886  
                    l124 097A                      l128 08F0                      l137 09A6  
                    l813 08BE                      l815 08C2                      l841 0922  
                    l825 08D0                      l817 08C6                      l851 0930  
                    l843 0926                      l835 08FA                      l827 08D4  
                    l819 08C8                      l861 095A                      l853 0934  
                    l845 0928                      l837 08FE                      l829 08F2  
                    l941 0980                      l863 095E                      l855 0952  
                    l839 091E                      l943 098C                      l951 062C  
                    l945 098E                      l961 0698                      l953 0632  
                    l939 097C                      l971 0708                      l955 063A  
                    l947 0616                      l981 0778                      l973 0730  
                    l965 06CE                      l957 0648                      l949 0626  
                    l991 0802                      l983 07A0                      l967 06D2  
                    l959 0670                      l993 0810                      l985 07C8  
                    l977 0766                      l969 06E0                      l995 0822  
                    l979 076A                      l997 0826                      l989 07FE  
                    l999 082A                      _RC0 7C10                      _RC1 7C11  
                    _RB4 7C0C                      _RC2 7C12                      _RB5 7C0D  
                    _RB6 7C0E                      _RB7 7C0F                      u400 0648  
                    u401 0644                      u410 065E                      u411 065A  
                    u500 0708                      u420 0670                      u501 0704  
                    u421 066C                      u510 071E                      u430 0686  
                    u511 071A                      u431 0682                      u600 07C8  
                    u520 0730                      u440 0698                      u601 07C4  
                    u521 072C                      u441 0694                      u610 07DE  
                    u530 0746                      u450 06AE                      u611 07DA  
                    u531 0742                      u451 06AA                      u700 0894  
                    u620 07F0                      u540 0758                      u460 06C0  
                    u701 0890                      u621 07EC                      u541 0754  
                    u461 06BC                      u390 09A6                      u710 08A6  
                    u630 07FE                      u550 0766                      u470 06CE  
                    u391 09A2                      u711 08A2                      u631 07FA  
                    u551 0762                      u471 06CA                      u720 08B4  
                    u640 0810                      u560 0778                      u480 06E0  
                    u721 08B0                      u641 080C                      u561 0774  
                    u481 06DC                      u650 0822                      u570 078E  
                    u490 06F6                      u651 081E                      u571 078A  
                    u491 06F2                      u660 0846                      u580 07A0  
                    u661 0842                      u581 079C                      u670 0858  
                    u590 07B6                      u671 0854                      u591 07B2  
                    u680 086E                      u681 086A                      u690 0880  
                    u691 087C                      _cmd 091C                     l1003 082A  
                   l1005 0832                     l1007 0858                     l1009 0880  
                   ?_cmd 0001                     STR_1 060F                     STR_2 0611  
                   STR_3 0613                     STR_4 0609                     STR_5 060B  
                   STR_6 060D                     STR_7 0603                     STR_8 0605  
                   STR_9 0607                     _data 08BC                     cmd@a 0001  
                   cmd@i 0002                     _main 0616                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    STR_10 0601                    _PORTB 0F81  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 09A8                    data@a 0001  
                  data@i 0002                    tablat 0FF5                    status 0FD8  
        __initialization 09A8             __end_of_data 091C             __end_of_main 08BC  
                 ??_data 0001                   ??_main 0007            __activetblptr 0001  
                 _ADCON1 0FC1                   isa$std 0001                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 09A8  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 09A8  
                __ramtop 0600                  __ptext0 0616                  __ptext1 097C  
                __ptext2 08BC                  __ptext3 091C                  cmd@i_66 0004  
                _display 097C     end_of_initialization 09A8      start_initialization 09A8  
            __end_of_cmd 097C                 ?_display 0006              __smallconst 0600  
              main@count 0007                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_70 0004                 isa$xinst 0000  
               display@p 0006  
