

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 19 11:45:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4580 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000A6E                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _inp
    60   000A6E  30                 	db	48
    61   000A6F  30                 	db	48
    62   000A70  30                 	db	48
    63   000A71  30                 	db	48
    64   000A72  00                 	db	0
    65                           
    66                           ;initializer for _pass
    67   000A73  31                 	db	49
    68   000A74  32                 	db	50
    69   000A75  33                 	db	51
    70   000A76  34                 	db	52
    71   000A77  00                 	db	0
    72   000000                     _PORTB	set	3969
    73   000000                     _RC2	set	31762
    74   000000                     _RC1	set	31761
    75   000000                     _RB7	set	31759
    76   000000                     _RB6	set	31758
    77   000000                     _RB5	set	31757
    78   000000                     _TRISB	set	3987
    79   000000                     _ADCON1	set	4033
    80   000000                     _RB4	set	31756
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _PORTD	set	3971
    84   000000                     _RC0	set	31760
    85                           
    86                           	psect	smallconst
    87   000600                     __psmallconst:
    88                           	callstack 0
    89   000600  00                 	db	0
    90   000601                     STR_2:
    91   000601  50                 	db	80	;'P'
    92   000602  61                 	db	97	;'a'
    93   000603  73                 	db	115	;'s'
    94   000604  73                 	db	115	;'s'
    95   000605  77                 	db	119	;'w'
    96   000606  6F                 	db	111	;'o'
    97   000607  72                 	db	114	;'r'
    98   000608  64                 	db	100	;'d'
    99   000609  20                 	db	32
   100   00060A  43                 	db	67	;'C'
   101   00060B  6F                 	db	111	;'o'
   102   00060C  72                 	db	114	;'r'
   103   00060D  72                 	db	114	;'r'
   104   00060E  65                 	db	101	;'e'
   105   00060F  63                 	db	99	;'c'
   106   000610  74                 	db	116	;'t'
   107   000611  00                 	db	0
   108   000612                     STR_1:
   109   000612  45                 	db	69	;'E'
   110   000613  6E                 	db	110	;'n'
   111   000614  74                 	db	116	;'t'
   112   000615  65                 	db	101	;'e'
   113   000616  72                 	db	114	;'r'
   114   000617  20                 	db	32
   115   000618  50                 	db	80	;'P'
   116   000619  61                 	db	97	;'a'
   117   00061A  73                 	db	115	;'s'
   118   00061B  73                 	db	115	;'s'
   119   00061C  77                 	db	119	;'w'
   120   00061D  6F                 	db	111	;'o'
   121   00061E  72                 	db	114	;'r'
   122   00061F  64                 	db	100	;'d'
   123   000620  00                 	db	0
   124   000621                     STR_3:
   125   000621  50                 	db	80	;'P'
   126   000622  61                 	db	97	;'a'
   127   000623  73                 	db	115	;'s'
   128   000624  73                 	db	115	;'s'
   129   000625  77                 	db	119	;'w'
   130   000626  6F                 	db	111	;'o'
   131   000627  72                 	db	114	;'r'
   132   000628  64                 	db	100	;'d'
   133   000629  20                 	db	32
   134   00062A  57                 	db	87	;'W'
   135   00062B  72                 	db	114	;'r'
   136   00062C  6F                 	db	111	;'o'
   137   00062D  6E                 	db	110	;'n'
   138   00062E  67                 	db	103	;'g'
   139   00062F  00                 	db	0
   140   000630  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   000A12                     __pcinit:
   146                           	callstack 0
   147   000A12                     start_initialization:
   148                           	callstack 0
   149   000A12                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (10 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   000A12  0E6E               	movlw	low __pidataCOMRAM
   155   000A14  6EF6               	movwf	tblptrl,c
   156   000A16  0E0A               	movlw	high __pidataCOMRAM
   157   000A18  6EF7               	movwf	tblptrh,c
   158   000A1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   000A1C  6EF8               	movwf	tblptru,c
   160   000A1E  EE00  F017         	lfsr	0,__pdataCOMRAM
   161   000A22  EE10 F00A          	lfsr	1,10
   162   000A26                     copy_data0:
   163   000A26  0009               	tblrd		*+
   164   000A28  CFF5 FFEE          	movff	tablat,postinc0
   165   000A2C  50E5               	movf	postdec1,w,c
   166   000A2E  50E1               	movf	fsr1l,w,c
   167   000A30  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000A32  6A21               	clrf	__pbssCOMRAM& (0+255),c
   171   000A34                     end_of_initialization:
   172                           	callstack 0
   173   000A34                     __end_of__initialization:
   174                           	callstack 0
   175   000A34  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176   000A36  6EF8               	movwf	tblptru,c
   177   000A38  0E06               	movlw	high __Lsmallconst
   178   000A3A  6EF7               	movwf	tblptrh,c
   179   000A3C  0100               	movlb	0
   180   000A3E  EF19  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000021                     __pbssCOMRAM:
   184                           	callstack 0
   185   000021                     _index:
   186                           	callstack 0
   187   000021                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000017                     __pdataCOMRAM:
   191                           	callstack 0
   192   000017                     _inp:
   193                           	callstack 0
   194   000017                     	ds	5
   195   00001C                     _pass:
   196                           	callstack 0
   197   00001C                     	ds	5
   198                           
   199                           	psect	cstackCOMRAM
   200   000001                     __pcstackCOMRAM:
   201                           	callstack 0
   202   000001                     ?_strcmp:
   203                           	callstack 0
   204   000001                     cmd@a:
   205                           	callstack 0
   206   000001                     data@a:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x0
   212   000001                     	ds	1
   213   000002                     strcmp@r:
   214                           	callstack 0
   215   000002                     cmd@i:
   216                           	callstack 0
   217   000002                     data@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x1
   221   000002                     	ds	1
   222   000003                     ??_strcmp:
   223                           
   224                           ; 1 bytes @ 0x2
   225   000003                     	ds	1
   226   000004                     cmd@i_80:
   227                           	callstack 0
   228   000004                     data@i_84:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x3
   232   000004                     	ds	2
   233   000006                     display@p:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237   000006                     	ds	1
   238   000007                     main@i:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0x6
   242   000007                     	ds	4
   243   00000B                     main@i_73:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247   00000B                     	ds	4
   248   00000F                     main@i_74:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0xE
   252   00000F                     	ds	4
   253   000013                     main@i_76:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x12
   257   000013                     	ds	4
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 17 in file "newpassword.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  i               4   18[COMRAM] long 
   269 ;;  i               4   14[COMRAM] long 
   270 ;;  i               4   10[COMRAM] long 
   271 ;;  i               4    6[COMRAM] long 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:        16       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0
   284 ;;      Totals:        16       0       0       0       0       0       0
   285 ;;Total ram usage:       16 bytes
   286 ;; Hardware stack levels required when called: 2
   287 ;; This function calls:
   288 ;;		_cmd
   289 ;;		_data
   290 ;;		_display
   291 ;;		_keypad
   292 ;;		_strcmp
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299   000632                     __ptext0:
   300                           	callstack 0
   301   000632                     _main:
   302                           	callstack 29
   303   000632                     
   304                           ;newpassword.c: 19:     ADCON1=0X0F;
   305   000632  0E0F               	movlw	15
   306   000634  6EC1               	movwf	193,c	;volatile
   307                           
   308                           ;newpassword.c: 20:     TRISB=0XF0;
   309   000636  0EF0               	movlw	240
   310   000638  6E93               	movwf	147,c	;volatile
   311                           
   312                           ;newpassword.c: 21:     TRISC=TRISD=0X00;
   313   00063A  0E00               	movlw	0
   314   00063C  6E95               	movwf	149,c	;volatile
   315   00063E  CF95 FF94          	movff	3989,3988	;volatile
   316   000642                     
   317                           ;newpassword.c: 22:     cmd(0x38);
   318   000642  0E38               	movlw	56
   319   000644  ECAA  F004         	call	_cmd
   320   000648                     
   321                           ;newpassword.c: 23:     cmd(0x01);
   322   000648  0E01               	movlw	1
   323   00064A  ECAA  F004         	call	_cmd
   324   00064E                     
   325                           ;newpassword.c: 24:     cmd(0x0f);
   326   00064E  0E0F               	movlw	15
   327   000650  ECAA  F004         	call	_cmd
   328   000654                     
   329                           ;newpassword.c: 25:     cmd(0x80);
   330   000654  0E80               	movlw	128
   331   000656  ECAA  F004         	call	_cmd
   332   00065A                     l1037:
   333                           
   334                           ;newpassword.c: 28:     {;newpassword.c: 29:         cmd(0x01);
   335   00065A  0E01               	movlw	1
   336   00065C  ECAA  F004         	call	_cmd
   337   000660                     
   338                           ;newpassword.c: 30:         display("Enter Password");
   339   000660  0E12               	movlw	low STR_1
   340   000662  6E06               	movwf	display@p^0,c
   341   000664  EC21  F005         	call	_display	;wreg free
   342   000668                     
   343                           ;newpassword.c: 31:         cmd(0xc0);
   344   000668  0EC0               	movlw	192
   345   00066A  ECAA  F004         	call	_cmd
   346   00066E                     
   347                           ;newpassword.c: 32:         for(index=0;index<4;index++)
   348   00066E  0E00               	movlw	0
   349   000670  6E21               	movwf	_index^0,c
   350   000672                     l1049:
   351                           
   352                           ;newpassword.c: 33:         {;newpassword.c: 34:          inp[index]=keypad();
   353   000672  5021               	movf	_index^0,w,c
   354   000674  0F17               	addlw	low _inp
   355   000676  6ED9               	movwf	fsr2l,c
   356   000678  6ADA               	clrf	fsr2h,c
   357   00067A  EC0F  F004         	call	_keypad	;wreg free
   358   00067E  6EDF               	movwf	indf2,c
   359                           
   360                           ;newpassword.c: 35:          data(inp[index]);
   361   000680  5021               	movf	_index^0,w,c
   362   000682  0F17               	addlw	low _inp
   363   000684  6ED9               	movwf	fsr2l,c
   364   000686  6ADA               	clrf	fsr2h,c
   365   000688  50DF               	movf	indf2,w,c
   366   00068A  EC7A  F004         	call	_data
   367   00068E                     l50:
   368   00068E  A881               	btfss	3969,4,c	;volatile
   369   000690  EF4C  F003         	goto	u311
   370   000694  EF4E  F003         	goto	u310
   371   000698                     u311:
   372   000698  EF47  F003         	goto	l50
   373   00069C                     u310:
   374   00069C  AA81               	btfss	3969,5,c	;volatile
   375   00069E  EF53  F003         	goto	u321
   376   0006A2  EF55  F003         	goto	u320
   377   0006A6                     u321:
   378   0006A6  EF47  F003         	goto	l50
   379   0006AA                     u320:
   380   0006AA  AC81               	btfss	3969,6,c	;volatile
   381   0006AC  EF5A  F003         	goto	u331
   382   0006B0  EF5C  F003         	goto	u330
   383   0006B4                     u331:
   384   0006B4  EF47  F003         	goto	l50
   385   0006B8                     u330:
   386   0006B8  AE81               	btfss	3969,7,c	;volatile
   387   0006BA  EF61  F003         	goto	u341
   388   0006BE  EF63  F003         	goto	u340
   389   0006C2                     u341:
   390   0006C2  EF47  F003         	goto	l50
   391   0006C6                     u340:
   392   0006C6                     
   393                           ;newpassword.c: 37:         }
   394   0006C6  2A21               	incf	_index^0,f,c
   395   0006C8  0E03               	movlw	3
   396   0006CA  6421               	cpfsgt	_index^0,c
   397   0006CC  EF6A  F003         	goto	u351
   398   0006D0  EF6C  F003         	goto	u350
   399   0006D4                     u351:
   400   0006D4  EF39  F003         	goto	l1049
   401   0006D8                     u350:
   402   0006D8                     
   403                           ;newpassword.c: 38:         if(strcmp(inp,pass)==0)
   404   0006D8  0E17               	movlw	low _inp
   405   0006DA  6E01               	movwf	strcmp@l^0,c
   406   0006DC  0E1C               	movlw	low _pass
   407   0006DE  6E02               	movwf	strcmp@r^0,c
   408   0006E0  ECDA  F004         	call	_strcmp	;wreg free
   409   0006E4  5001               	movf	?_strcmp^0,w,c
   410   0006E6  1002               	iorwf	(?_strcmp+1)^0,w,c
   411   0006E8  A4D8               	btfss	status,2,c
   412   0006EA  EF79  F003         	goto	u361
   413   0006EE  EF7B  F003         	goto	u360
   414   0006F2                     u361:
   415   0006F2  EFC4  F003         	goto	l1083
   416   0006F6                     u360:
   417   0006F6                     
   418                           ;newpassword.c: 39:         {;newpassword.c: 40:              for(long i=0;i<=100000;i++
      +                          );
   419   0006F6  0E00               	movlw	0
   420   0006F8  6E07               	movwf	main@i^0,c
   421   0006FA  0E00               	movlw	0
   422   0006FC  6E08               	movwf	(main@i+1)^0,c
   423   0006FE  0E00               	movlw	0
   424   000700  6E09               	movwf	(main@i+2)^0,c
   425   000702  0E00               	movlw	0
   426   000704  6E0A               	movwf	(main@i+3)^0,c
   427   000706                     l1069:
   428   000706  0E01               	movlw	1
   429   000708  2607               	addwf	main@i^0,f,c
   430   00070A  0E00               	movlw	0
   431   00070C  2208               	addwfc	(main@i+1)^0,f,c
   432   00070E  2209               	addwfc	(main@i+2)^0,f,c
   433   000710  220A               	addwfc	(main@i+3)^0,f,c
   434   000712  BE0A               	btfsc	(main@i+3)^0,7,c
   435   000714  EF99  F003         	goto	u371
   436   000718  500A               	movf	(main@i+3)^0,w,c
   437   00071A  E10D               	bnz	u370
   438   00071C  0EA1               	movlw	161
   439   00071E  5C07               	subwf	main@i^0,w,c
   440   000720  0E86               	movlw	134
   441   000722  5808               	subwfb	(main@i+1)^0,w,c
   442   000724  0E01               	movlw	1
   443   000726  5809               	subwfb	(main@i+2)^0,w,c
   444   000728  A0D8               	btfss	status,0,c
   445   00072A  EF99  F003         	goto	u371
   446   00072E  EF9B  F003         	goto	u370
   447   000732                     u371:
   448   000732  EF83  F003         	goto	l1069
   449   000736                     u370:
   450   000736                     
   451                           ;newpassword.c: 41:             cmd(0x01);
   452   000736  0E01               	movlw	1
   453   000738  ECAA  F004         	call	_cmd
   454   00073C                     
   455                           ;newpassword.c: 42:             display("Password Correct");
   456   00073C  0E01               	movlw	low STR_2
   457   00073E  6E06               	movwf	display@p^0,c
   458   000740  EC21  F005         	call	_display	;wreg free
   459   000744                     
   460                           ;newpassword.c: 43:             for(long i=0;i<=1000000;i++);
   461   000744  0E00               	movlw	0
   462   000746  6E0B               	movwf	main@i_73^0,c
   463   000748  0E00               	movlw	0
   464   00074A  6E0C               	movwf	(main@i_73+1)^0,c
   465   00074C  0E00               	movlw	0
   466   00074E  6E0D               	movwf	(main@i_73+2)^0,c
   467   000750  0E00               	movlw	0
   468   000752  6E0E               	movwf	(main@i_73+3)^0,c
   469   000754                     l1081:
   470   000754  0E01               	movlw	1
   471   000756  260B               	addwf	main@i_73^0,f,c
   472   000758  0E00               	movlw	0
   473   00075A  220C               	addwfc	(main@i_73+1)^0,f,c
   474   00075C  220D               	addwfc	(main@i_73+2)^0,f,c
   475   00075E  220E               	addwfc	(main@i_73+3)^0,f,c
   476   000760  BE0E               	btfsc	(main@i_73+3)^0,7,c
   477   000762  EFC0  F003         	goto	u381
   478   000766  500E               	movf	(main@i_73+3)^0,w,c
   479   000768  E10D               	bnz	u380
   480   00076A  0E41               	movlw	65
   481   00076C  5C0B               	subwf	main@i_73^0,w,c
   482   00076E  0E42               	movlw	66
   483   000770  580C               	subwfb	(main@i_73+1)^0,w,c
   484   000772  0E0F               	movlw	15
   485   000774  580D               	subwfb	(main@i_73+2)^0,w,c
   486   000776  A0D8               	btfss	status,0,c
   487   000778  EFC0  F003         	goto	u381
   488   00077C  EFC2  F003         	goto	u380
   489   000780                     u381:
   490   000780  EFAA  F003         	goto	l1081
   491   000784                     u380:
   492   000784  EF2D  F003         	goto	l1037
   493   000788                     l1083:
   494                           
   495                           ;newpassword.c: 46:         {;newpassword.c: 47:             for(long i=0;i<=100000;i++)
      +                          ;
   496   000788  0E00               	movlw	0
   497   00078A  6E0F               	movwf	main@i_74^0,c
   498   00078C  0E00               	movlw	0
   499   00078E  6E10               	movwf	(main@i_74+1)^0,c
   500   000790  0E00               	movlw	0
   501   000792  6E11               	movwf	(main@i_74+2)^0,c
   502   000794  0E00               	movlw	0
   503   000796  6E12               	movwf	(main@i_74+3)^0,c
   504   000798                     l1089:
   505   000798  0E01               	movlw	1
   506   00079A  260F               	addwf	main@i_74^0,f,c
   507   00079C  0E00               	movlw	0
   508   00079E  2210               	addwfc	(main@i_74+1)^0,f,c
   509   0007A0  2211               	addwfc	(main@i_74+2)^0,f,c
   510   0007A2  2212               	addwfc	(main@i_74+3)^0,f,c
   511   0007A4  BE12               	btfsc	(main@i_74+3)^0,7,c
   512   0007A6  EFE2  F003         	goto	u391
   513   0007AA  5012               	movf	(main@i_74+3)^0,w,c
   514   0007AC  E10D               	bnz	u390
   515   0007AE  0EA1               	movlw	161
   516   0007B0  5C0F               	subwf	main@i_74^0,w,c
   517   0007B2  0E86               	movlw	134
   518   0007B4  5810               	subwfb	(main@i_74+1)^0,w,c
   519   0007B6  0E01               	movlw	1
   520   0007B8  5811               	subwfb	(main@i_74+2)^0,w,c
   521   0007BA  A0D8               	btfss	status,0,c
   522   0007BC  EFE2  F003         	goto	u391
   523   0007C0  EFE4  F003         	goto	u390
   524   0007C4                     u391:
   525   0007C4  EFCC  F003         	goto	l1089
   526   0007C8                     u390:
   527   0007C8                     
   528                           ;newpassword.c: 48:             cmd(0x01);
   529   0007C8  0E01               	movlw	1
   530   0007CA  ECAA  F004         	call	_cmd
   531   0007CE                     
   532                           ;newpassword.c: 49:             display("Password Wrong");
   533   0007CE  0E21               	movlw	low STR_3
   534   0007D0  6E06               	movwf	display@p^0,c
   535   0007D2  EC21  F005         	call	_display	;wreg free
   536   0007D6                     
   537                           ;newpassword.c: 50:             for(long i=0;i<=1000000;i++);
   538   0007D6  0E00               	movlw	0
   539   0007D8  6E13               	movwf	main@i_76^0,c
   540   0007DA  0E00               	movlw	0
   541   0007DC  6E14               	movwf	(main@i_76+1)^0,c
   542   0007DE  0E00               	movlw	0
   543   0007E0  6E15               	movwf	(main@i_76+2)^0,c
   544   0007E2  0E00               	movlw	0
   545   0007E4  6E16               	movwf	(main@i_76+3)^0,c
   546   0007E6                     l1101:
   547   0007E6  0E01               	movlw	1
   548   0007E8  2613               	addwf	main@i_76^0,f,c
   549   0007EA  0E00               	movlw	0
   550   0007EC  2214               	addwfc	(main@i_76+1)^0,f,c
   551   0007EE  2215               	addwfc	(main@i_76+2)^0,f,c
   552   0007F0  2216               	addwfc	(main@i_76+3)^0,f,c
   553   0007F2  BE16               	btfsc	(main@i_76+3)^0,7,c
   554   0007F4  EF09  F004         	goto	u401
   555   0007F8  5016               	movf	(main@i_76+3)^0,w,c
   556   0007FA  E10D               	bnz	u400
   557   0007FC  0E41               	movlw	65
   558   0007FE  5C13               	subwf	main@i_76^0,w,c
   559   000800  0E42               	movlw	66
   560   000802  5814               	subwfb	(main@i_76+1)^0,w,c
   561   000804  0E0F               	movlw	15
   562   000806  5815               	subwfb	(main@i_76+2)^0,w,c
   563   000808  A0D8               	btfss	status,0,c
   564   00080A  EF09  F004         	goto	u401
   565   00080E  EF0B  F004         	goto	u400
   566   000812                     u401:
   567   000812  EFF3  F003         	goto	l1101
   568   000816                     u400:
   569   000816  EF2D  F003         	goto	l1037
   570   00081A  EF00  F000         	goto	start
   571   00081E                     __end_of_main:
   572                           	callstack 0
   573                           
   574 ;; *************** function _strcmp *****************
   575 ;; Defined at:
   576 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  l               1    0[COMRAM] PTR const unsigned char 
   579 ;;		 -> inp(5), 
   580 ;;  r               1    1[COMRAM] PTR const unsigned char 
   581 ;;		 -> pass(5), 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  2    0[COMRAM] int 
   586 ;; Registers used:
   587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         2       0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0
   595 ;;      Temps:          2       0       0       0       0       0       0
   596 ;;      Totals:         4       0       0       0       0       0       0
   597 ;;Total ram usage:        4 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607   0009B4                     __ptext1:
   608                           	callstack 0
   609   0009B4                     _strcmp:
   610                           	callstack 30
   611   0009B4  EFDE  F004         	goto	l1019
   612   0009B8                     l1017:
   613   0009B8  2A01               	incf	strcmp@l^0,f,c
   614   0009BA  2A02               	incf	strcmp@r^0,f,c
   615   0009BC                     l1019:
   616   0009BC  5002               	movf	strcmp@r^0,w,c
   617   0009BE  6ED9               	movwf	fsr2l,c
   618   0009C0  6ADA               	clrf	fsr2h,c
   619   0009C2  5001               	movf	strcmp@l^0,w,c
   620   0009C4  6EE1               	movwf	fsr1l,c
   621   0009C6  6AE2               	clrf	fsr1h,c
   622   0009C8  50DE               	movf	postinc2,w,c
   623   0009CA  18E6               	xorwf	postinc1,w,c
   624   0009CC  A4D8               	btfss	status,2,c
   625   0009CE  EFEB  F004         	goto	u291
   626   0009D2  EFED  F004         	goto	u290
   627   0009D6                     u291:
   628   0009D6  EFF8  F004         	goto	l1023
   629   0009DA                     u290:
   630   0009DA  5001               	movf	strcmp@l^0,w,c
   631   0009DC  6ED9               	movwf	fsr2l,c
   632   0009DE  6ADA               	clrf	fsr2h,c
   633   0009E0  50DF               	movf	indf2,w,c
   634   0009E2  A4D8               	btfss	status,2,c
   635   0009E4  EFF6  F004         	goto	u301
   636   0009E8  EFF8  F004         	goto	u300
   637   0009EC                     u301:
   638   0009EC  EFDC  F004         	goto	l1017
   639   0009F0                     u300:
   640   0009F0                     l1023:
   641   0009F0  5001               	movf	strcmp@l^0,w,c
   642   0009F2  6ED9               	movwf	fsr2l,c
   643   0009F4  6ADA               	clrf	fsr2h,c
   644   0009F6  50DF               	movf	indf2,w,c
   645   0009F8  6E03               	movwf	??_strcmp^0,c
   646   0009FA  5002               	movf	strcmp@r^0,w,c
   647   0009FC  6ED9               	movwf	fsr2l,c
   648   0009FE  6ADA               	clrf	fsr2h,c
   649   000A00  50DF               	movf	indf2,w,c
   650   000A02  6E04               	movwf	(??_strcmp+1)^0,c
   651   000A04  5004               	movf	(??_strcmp+1)^0,w,c
   652   000A06  5C03               	subwf	??_strcmp^0,w,c
   653   000A08  6E01               	movwf	?_strcmp^0,c
   654   000A0A  6A02               	clrf	(?_strcmp+1)^0,c
   655   000A0C  A0D8               	btfss	status,0,c
   656   000A0E  0602               	decf	(?_strcmp+1)^0,f,c
   657   000A10  0012               	return		;funcret
   658   000A12                     __end_of_strcmp:
   659                           	callstack 0
   660                           
   661 ;; *************** function _keypad *****************
   662 ;; Defined at:
   663 ;;		line 84 in file "newpassword.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg, status,2
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   677 ;;      Params:         0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text2
   691   00081E                     __ptext2:
   692                           	callstack 0
   693   00081E                     _keypad:
   694                           	callstack 30
   695   00081E                     l88:
   696   00081E                     
   697                           ;newpassword.c: 87:     {;newpassword.c: 88:     PORTB=0X0E;
   698   00081E  0E0E               	movlw	14
   699   000820  6E81               	movwf	129,c	;volatile
   700   000822                     
   701                           ;newpassword.c: 89:     if(RB4==0)
   702   000822  B881               	btfsc	3969,4,c	;volatile
   703   000824  EF16  F004         	goto	u61
   704   000828  EF18  F004         	goto	u60
   705   00082C                     u61:
   706   00082C  EF1B  F004         	goto	l89
   707   000830                     u60:
   708   000830                     
   709                           ;newpassword.c: 90:     {;newpassword.c: 91:         return '7';
   710   000830  0E37               	movlw	55
   711   000832  EF79  F004         	goto	l90
   712   000836                     l89:
   713   000836  BA81               	btfsc	3969,5,c	;volatile
   714   000838  EF20  F004         	goto	u71
   715   00083C  EF22  F004         	goto	u70
   716   000840                     u71:
   717   000840  EF25  F004         	goto	l92
   718   000844                     u70:
   719   000844                     
   720                           ;newpassword.c: 94:     {;newpassword.c: 95:         return '8';
   721   000844  0E38               	movlw	56
   722   000846  EF79  F004         	goto	l90
   723   00084A                     l92:
   724   00084A  BC81               	btfsc	3969,6,c	;volatile
   725   00084C  EF2A  F004         	goto	u81
   726   000850  EF2C  F004         	goto	u80
   727   000854                     u81:
   728   000854  EF2F  F004         	goto	l871
   729   000858                     u80:
   730   000858                     
   731                           ;newpassword.c: 98:     {;newpassword.c: 99:         return '9';
   732   000858  0E39               	movlw	57
   733   00085A  EF79  F004         	goto	l90
   734   00085E                     l871:
   735                           
   736                           ;newpassword.c: 102:     PORTB=0X0D;
   737   00085E  0E0D               	movlw	13
   738   000860  6E81               	movwf	129,c	;volatile
   739   000862                     
   740                           ;newpassword.c: 103:      if(RB4==0)
   741   000862  B881               	btfsc	3969,4,c	;volatile
   742   000864  EF36  F004         	goto	u91
   743   000868  EF38  F004         	goto	u90
   744   00086C                     u91:
   745   00086C  EF3B  F004         	goto	l95
   746   000870                     u90:
   747   000870                     
   748                           ;newpassword.c: 104:     {;newpassword.c: 105:          return '4';
   749   000870  0E34               	movlw	52
   750   000872  EF79  F004         	goto	l90
   751   000876                     l95:
   752   000876  BA81               	btfsc	3969,5,c	;volatile
   753   000878  EF40  F004         	goto	u101
   754   00087C  EF42  F004         	goto	u100
   755   000880                     u101:
   756   000880  EF45  F004         	goto	l97
   757   000884                     u100:
   758   000884                     
   759                           ;newpassword.c: 108:     {;newpassword.c: 109:         return '5';
   760   000884  0E35               	movlw	53
   761   000886  EF79  F004         	goto	l90
   762   00088A                     l97:
   763   00088A  BC81               	btfsc	3969,6,c	;volatile
   764   00088C  EF4A  F004         	goto	u111
   765   000890  EF4C  F004         	goto	u110
   766   000894                     u111:
   767   000894  EF4F  F004         	goto	l891
   768   000898                     u110:
   769   000898                     
   770                           ;newpassword.c: 112:     {;newpassword.c: 113:         return '6';
   771   000898  0E36               	movlw	54
   772   00089A  EF79  F004         	goto	l90
   773   00089E                     l891:
   774                           
   775                           ;newpassword.c: 116:     PORTB=0X0B;
   776   00089E  0E0B               	movlw	11
   777   0008A0  6E81               	movwf	129,c	;volatile
   778   0008A2                     
   779                           ;newpassword.c: 117:      if(RB4==0)
   780   0008A2  B881               	btfsc	3969,4,c	;volatile
   781   0008A4  EF56  F004         	goto	u121
   782   0008A8  EF58  F004         	goto	u120
   783   0008AC                     u121:
   784   0008AC  EF5B  F004         	goto	l100
   785   0008B0                     u120:
   786   0008B0                     
   787                           ;newpassword.c: 118:     {;newpassword.c: 119:          return '1';
   788   0008B0  0E31               	movlw	49
   789   0008B2  EF79  F004         	goto	l90
   790   0008B6                     l100:
   791   0008B6  BA81               	btfsc	3969,5,c	;volatile
   792   0008B8  EF60  F004         	goto	u131
   793   0008BC  EF62  F004         	goto	u130
   794   0008C0                     u131:
   795   0008C0  EF65  F004         	goto	l102
   796   0008C4                     u130:
   797   0008C4                     
   798                           ;newpassword.c: 122:     {;newpassword.c: 123:         return '2';
   799   0008C4  0E32               	movlw	50
   800   0008C6  EF79  F004         	goto	l90
   801   0008CA                     l102:
   802   0008CA  BC81               	btfsc	3969,6,c	;volatile
   803   0008CC  EF6A  F004         	goto	u141
   804   0008D0  EF6C  F004         	goto	u140
   805   0008D4                     u141:
   806   0008D4  EF6F  F004         	goto	l911
   807   0008D8                     u140:
   808   0008D8                     
   809                           ;newpassword.c: 126:     {;newpassword.c: 127:         return '3';
   810   0008D8  0E33               	movlw	51
   811   0008DA  EF79  F004         	goto	l90
   812   0008DE                     l911:
   813                           
   814                           ;newpassword.c: 130:     PORTB=0X07;
   815   0008DE  0E07               	movlw	7
   816   0008E0  6E81               	movwf	129,c	;volatile
   817   0008E2                     
   818                           ;newpassword.c: 132:     if(RB5==0)
   819   0008E2  BA81               	btfsc	3969,5,c	;volatile
   820   0008E4  EF76  F004         	goto	u151
   821   0008E8  EF78  F004         	goto	u150
   822   0008EC                     u151:
   823   0008EC  EF0F  F004         	goto	l88
   824   0008F0                     u150:
   825   0008F0                     
   826                           ;newpassword.c: 133:     {;newpassword.c: 134:         return '0';
   827   0008F0  0E30               	movlw	48
   828   0008F2                     l90:
   829   0008F2  0012               	return		;funcret
   830   0008F4                     __end_of_keypad:
   831                           	callstack 0
   832                           
   833 ;; *************** function _display *****************
   834 ;; Defined at:
   835 ;;		line 75 in file "newpassword.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  p               1    5[COMRAM] PTR const unsigned char 
   838 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   850 ;;      Params:         1       0       0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0
   853 ;;      Totals:         1       0       0       0       0       0       0
   854 ;;Total ram usage:        1 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 1
   857 ;; This function calls:
   858 ;;		_data
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text3
   865   000A42                     __ptext3:
   866                           	callstack 0
   867   000A42                     _display:
   868                           	callstack 29
   869   000A42                     
   870                           ;newpassword.c: 75: void display(const char *p);newpassword.c: 76: {;newpassword.c: 77: 
      +                              while(*p)
   871   000A42  EF2A  F005         	goto	l1013
   872   000A46                     l1009:
   873                           
   874                           ;newpassword.c: 78:     {;newpassword.c: 79:         data(*p);
   875   000A46  C006  FFF6         	movff	display@p,tblptrl
   876   000A4A                     	if	0	;There is only one active tblptr byte
   877   000A4A                     	endif
   878   000A4A                     	if	0	;tblptru may be non-zero
   879   000A4A                     	endif
   880   000A4A                     	if	0	;tblptru may be non-zero
   881   000A4A                     	endif
   882   000A4A  0008               	tblrd		*
   883   000A4C  50F5               	movf	tablat,w,c
   884   000A4E  EC7A  F004         	call	_data
   885   000A52                     
   886                           ;newpassword.c: 80:         p++;
   887   000A52  2A06               	incf	display@p^0,f,c
   888   000A54                     l1013:
   889                           
   890                           ;newpassword.c: 77:     while(*p)
   891   000A54  C006  FFF6         	movff	display@p,tblptrl
   892   000A58                     	if	0	;There is only one active tblptr byte
   893   000A58                     	endif
   894   000A58                     	if	0	;tblptru may be non-zero
   895   000A58                     	endif
   896   000A58                     	if	0	;tblptru may be non-zero
   897   000A58                     	endif
   898   000A58  0008               	tblrd		*
   899   000A5A  50F5               	movf	tablat,w,c
   900   000A5C  0900               	iorlw	0
   901   000A5E  A4D8               	btfss	status,2,c
   902   000A60  EF34  F005         	goto	u281
   903   000A64  EF36  F005         	goto	u280
   904   000A68                     u281:
   905   000A68  EF23  F005         	goto	l1009
   906   000A6C                     u280:
   907   000A6C  0012               	return		;funcret
   908   000A6E                     __end_of_display:
   909                           	callstack 0
   910                           
   911 ;; *************** function _data *****************
   912 ;; Defined at:
   913 ;;		line 65 in file "newpassword.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  a               1    wreg     unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  a               1    0[COMRAM] unsigned char 
   918 ;;  i               2    3[COMRAM] int 
   919 ;;  i               2    1[COMRAM] int 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   929 ;;      Params:         0       0       0       0       0       0       0
   930 ;;      Locals:         5       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0
   932 ;;      Totals:         5       0       0       0       0       0       0
   933 ;;Total ram usage:        5 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;;		_display
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text4
   944   0008F4                     __ptext4:
   945                           	callstack 0
   946   0008F4                     _data:
   947                           	callstack 29
   948                           
   949                           ;incstack = 0
   950                           ;data@a stored from wreg
   951   0008F4  6E01               	movwf	data@a^0,c
   952   0008F6                     
   953                           ;newpassword.c: 65: void data(unsigned char a);newpassword.c: 66: {;newpassword.c: 67:  
      +                             RC0=1;
   954   0008F6  8082               	bsf	3970,0,c	;volatile
   955                           
   956                           ;newpassword.c: 68:      RC1=0;
   957   0008F8  9282               	bcf	3970,1,c	;volatile
   958   0008FA                     
   959                           ;newpassword.c: 69:      PORTD=a;
   960   0008FA  C001  FF83         	movff	data@a,3971	;volatile
   961   0008FE                     
   962                           ;newpassword.c: 70:     RC2=1;
   963   0008FE  8482               	bsf	3970,2,c	;volatile
   964   000900                     
   965                           ;newpassword.c: 71:     for(int i=0;i<=100;i++);
   966   000900  0E00               	movlw	0
   967   000902  6E03               	movwf	(data@i+1)^0,c
   968   000904  0E00               	movlw	0
   969   000906  6E02               	movwf	data@i^0,c
   970   000908                     l803:
   971   000908  4A02               	infsnz	data@i^0,f,c
   972   00090A  2A03               	incf	(data@i+1)^0,f,c
   973   00090C  BE03               	btfsc	(data@i+1)^0,7,c
   974   00090E  EF92  F004         	goto	u11
   975   000912  5003               	movf	(data@i+1)^0,w,c
   976   000914  E109               	bnz	u10
   977   000916  0E65               	movlw	101
   978   000918  5C02               	subwf	data@i^0,w,c
   979   00091A  A0D8               	btfss	status,0,c
   980   00091C  EF92  F004         	goto	u11
   981   000920  EF94  F004         	goto	u10
   982   000924                     u11:
   983   000924  EF84  F004         	goto	l803
   984   000928                     u10:
   985   000928                     
   986                           ;newpassword.c: 72:     RC2=0;
   987   000928  9482               	bcf	3970,2,c	;volatile
   988   00092A                     
   989                           ;newpassword.c: 73:     for(int i=0;i<=10000;i++);
   990   00092A  0E00               	movlw	0
   991   00092C  6E05               	movwf	(data@i_84+1)^0,c
   992   00092E  0E00               	movlw	0
   993   000930  6E04               	movwf	data@i_84^0,c
   994   000932                     l813:
   995   000932  4A04               	infsnz	data@i_84^0,f,c
   996   000934  2A05               	incf	(data@i_84+1)^0,f,c
   997   000936  BE05               	btfsc	(data@i_84+1)^0,7,c
   998   000938  EFA7  F004         	goto	u21
   999   00093C  0E11               	movlw	17
  1000   00093E  5C04               	subwf	data@i_84^0,w,c
  1001   000940  0E27               	movlw	39
  1002   000942  5805               	subwfb	(data@i_84+1)^0,w,c
  1003   000944  A0D8               	btfss	status,0,c
  1004   000946  EFA7  F004         	goto	u21
  1005   00094A  EFA9  F004         	goto	u20
  1006   00094E                     u21:
  1007   00094E  EF99  F004         	goto	l813
  1008   000952                     u20:
  1009   000952  0012               	return		;funcret
  1010   000954                     __end_of_data:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _cmd *****************
  1014 ;; Defined at:
  1015 ;;		line 56 in file "newpassword.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  a               1    wreg     unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  a               1    0[COMRAM] unsigned char 
  1020 ;;  i               2    3[COMRAM] int 
  1021 ;;  i               2    1[COMRAM] int 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1031 ;;      Params:         0       0       0       0       0       0       0
  1032 ;;      Locals:         5       0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0
  1034 ;;      Totals:         5       0       0       0       0       0       0
  1035 ;;Total ram usage:        5 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text5
  1045   000954                     __ptext5:
  1046                           	callstack 0
  1047   000954                     _cmd:
  1048                           	callstack 30
  1049                           
  1050                           ;incstack = 0
  1051                           ;cmd@a stored from wreg
  1052   000954  6E01               	movwf	cmd@a^0,c
  1053   000956                     
  1054                           ;newpassword.c: 56: void cmd(unsigned char a);newpassword.c: 57: {;newpassword.c: 58:   
      +                             RC0=RC1=0;
  1055   000956  9282               	bcf	3970,1,c	;volatile
  1056   000958  9082               	bcf	3970,0,c	;volatile
  1057   00095A                     
  1058                           ;newpassword.c: 59:     PORTD=a;
  1059   00095A  C001  FF83         	movff	cmd@a,3971	;volatile
  1060   00095E                     
  1061                           ;newpassword.c: 60:     RC2=1;
  1062   00095E  8482               	bsf	3970,2,c	;volatile
  1063   000960                     
  1064                           ;newpassword.c: 61:     for(int i=0;i<=100;i++);
  1065   000960  0E00               	movlw	0
  1066   000962  6E03               	movwf	(cmd@i+1)^0,c
  1067   000964  0E00               	movlw	0
  1068   000966  6E02               	movwf	cmd@i^0,c
  1069   000968                     l829:
  1070   000968  4A02               	infsnz	cmd@i^0,f,c
  1071   00096A  2A03               	incf	(cmd@i+1)^0,f,c
  1072   00096C  BE03               	btfsc	(cmd@i+1)^0,7,c
  1073   00096E  EFC2  F004         	goto	u31
  1074   000972  5003               	movf	(cmd@i+1)^0,w,c
  1075   000974  E109               	bnz	u30
  1076   000976  0E65               	movlw	101
  1077   000978  5C02               	subwf	cmd@i^0,w,c
  1078   00097A  A0D8               	btfss	status,0,c
  1079   00097C  EFC2  F004         	goto	u31
  1080   000980  EFC4  F004         	goto	u30
  1081   000984                     u31:
  1082   000984  EFB4  F004         	goto	l829
  1083   000988                     u30:
  1084   000988                     
  1085                           ;newpassword.c: 62:     RC2=0;
  1086   000988  9482               	bcf	3970,2,c	;volatile
  1087   00098A                     
  1088                           ;newpassword.c: 63:      for(int i=0;i<=10000;i++);
  1089   00098A  0E00               	movlw	0
  1090   00098C  6E05               	movwf	(cmd@i_80+1)^0,c
  1091   00098E  0E00               	movlw	0
  1092   000990  6E04               	movwf	cmd@i_80^0,c
  1093   000992                     l839:
  1094   000992  4A04               	infsnz	cmd@i_80^0,f,c
  1095   000994  2A05               	incf	(cmd@i_80+1)^0,f,c
  1096   000996  BE05               	btfsc	(cmd@i_80+1)^0,7,c
  1097   000998  EFD7  F004         	goto	u41
  1098   00099C  0E11               	movlw	17
  1099   00099E  5C04               	subwf	cmd@i_80^0,w,c
  1100   0009A0  0E27               	movlw	39
  1101   0009A2  5805               	subwfb	(cmd@i_80+1)^0,w,c
  1102   0009A4  A0D8               	btfss	status,0,c
  1103   0009A6  EFD7  F004         	goto	u41
  1104   0009AA  EFD9  F004         	goto	u40
  1105   0009AE                     u41:
  1106   0009AE  EFC9  F004         	goto	l839
  1107   0009B2                     u40:
  1108   0009B2  0012               	return		;funcret
  1109   0009B4                     __end_of_cmd:
  1110                           	callstack 0
  1111                           
  1112                           	psect	rparam
  1113   000000                     tosu	equ	0xFFF
  1114                           tosh	equ	0xFFE
  1115                           tosl	equ	0xFFD
  1116                           stkptr	equ	0xFFC
  1117                           pclatu	equ	0xFFB
  1118                           pclath	equ	0xFFA
  1119                           pcl	equ	0xFF9
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           prodh	equ	0xFF4
  1125                           prodl	equ	0xFF3
  1126                           indf0	equ	0xFEF
  1127                           postinc0	equ	0xFEE
  1128                           postdec0	equ	0xFED
  1129                           preinc0	equ	0xFEC
  1130                           plusw0	equ	0xFEB
  1131                           fsr0h	equ	0xFEA
  1132                           fsr0l	equ	0xFE9
  1133                           wreg	equ	0xFE8
  1134                           indf1	equ	0xFE7
  1135                           postinc1	equ	0xFE6
  1136                           postdec1	equ	0xFE5
  1137                           preinc1	equ	0xFE4
  1138                           plusw1	equ	0xFE3
  1139                           fsr1h	equ	0xFE2
  1140                           fsr1l	equ	0xFE1
  1141                           bsr	equ	0xFE0
  1142                           indf2	equ	0xFDF
  1143                           postinc2	equ	0xFDE
  1144                           postdec2	equ	0xFDD
  1145                           preinc2	equ	0xFDC
  1146                           plusw2	equ	0xFDB
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     946
                                              6 COMRAM    16    16      0
                                _cmd
                               _data
                            _display
                             _keypad
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     348
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data
   _display
     _data
   _keypad
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      21       1       34.7%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      20        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 19 11:45:08 2024

                     l50 068E                       l72 09B2                       l90 08F2  
                     l76 0928                       l92 084A                       l69 0988  
                     l85 0A6C                       l79 0952                       l95 0876  
                     l88 081E                       l97 088A                       l89 0836  
                     u10 0928                       u11 0924                       u20 0952  
                     u21 094E                       u30 0988                       u31 0984  
                     u40 09B2                       u41 09AE                       u60 0830  
                     u61 082C                       u70 0844                       u71 0840  
                     u80 0858                       u81 0854                       u90 0870  
                     u91 086C                      l100 08B6                      l102 08CA  
                    l803 0908                      l821 095E                      l813 0932  
                    l805 090C                      l901 08C4                      l831 096C  
                    l823 0960                      l815 0936                      l807 092A  
                    l911 08DE                      l841 0996                      l833 098A  
                    l817 0956                      l913 08E2                      l819 095A  
                    l915 08F0                      l907 08D8                      l851 081E  
                    l829 0968                      l861 0844                      l853 0822  
                    l839 0992                      l791 08F6                      l871 085E  
                    l855 0830                      l793 08FA                      l881 0884  
                    l873 0862                      l795 08FE                      l891 089E  
                    l875 0870                      l867 0858                      l797 0900  
                    l893 08A2                      l789 0A10                      l895 08B0  
                    l887 0898                      _RC0 7C10                      _RC1 7C11  
                    _RB4 7C0C                      _RC2 7C12                      _RB5 7C0D  
                    _RB6 7C0E                      _RB7 7C0F                      u100 0884  
                    u101 0880                      u110 0898                      u111 0894  
                    u120 08B0                      u121 08AC                      u130 08C4  
                    u131 08C0                      u140 08D8                      u300 09F0  
                    u141 08D4                      u301 09EC                      u150 08F0  
                    u310 069C                      u151 08EC                      u311 0698  
                    u400 0816                      u320 06AA                      u401 0812  
                    u321 06A6                      u330 06B8                      u331 06B4  
                    u340 06C6                      u341 06C2                      u350 06D8  
                    u351 06D4                      u280 0A6C                      u360 06F6  
                    u281 0A68                      u361 06F2                      u290 09DA  
                    u370 0736                      u291 09D6                      u371 0732  
                    u380 0784                      u381 0780                      u390 07C8  
                    u391 07C4                      _cmd 0954                      _inp 0017  
                   l1011 0A52                     l1013 0A54                     l1021 09DA  
                   l1101 07E6                     l1007 0A42                     l1023 09F0  
                   l1015 09B4                     l1031 0648                     l1009 0A46  
                   l1017 09B8                     l1041 0668                     l1033 064E  
                   l1019 09BC                     l1051 069C                     l1043 066E  
                   l1035 0654                     l1027 0632                     l1061 06D8  
                   l1053 06AA                     l1037 065A                     l1029 0642  
                   l1071 0736                     l1063 06F6                     l1055 06B8  
                   l1039 0660                     l1081 0754                     l1073 073C  
                   l1057 06C6                     l1049 0672                     l1091 07C8  
                   l1075 0744                     l1083 0788                     l1059 06C8  
                   l1093 07CE                     l1069 0706                     l1095 07D6  
                   l1089 0798                     ?_cmd 0001                     STR_1 0612  
                   STR_2 0601                     STR_3 0621                     _data 08F4  
                   cmd@a 0001                     cmd@i 0002                     _main 0632  
                   _pass 001C                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ??_cmd 0001  
                  ?_data 0001                    ?_main 0001                    _PORTB 0F81  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 0A6E                    data@a 0001  
                  data@i 0002                    _index 0021                    main@i 0007  
                  tablat 0FF5                    status 0FD8          __initialization 0A12  
           __end_of_data 0954             __end_of_main 081E                   ??_data 0001  
                 ??_main 0007            __activetblptr 0001                   _ADCON1 0FC1  
                 _keypad 081E                   isa$std 0001                   _strcmp 09B4  
              ??_display 0007             __pdataCOMRAM 0017             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 0A34            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  ?_keypad 0001                  ?_strcmp 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0A12                  __ramtop 0600                  __ptext0 0632  
                __ptext1 09B4                  __ptext2 081E                  __ptext3 0A42  
                __ptext4 08F4                  cmd@i_80 0004                  __ptext5 0954  
                _display 0A42     end_of_initialization 0A34                  postdec1 0FE5  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
                strcmp@l 0001                  strcmp@r 0002            __pidataCOMRAM 0A6E  
         __end_of_keypad 08F4           __end_of_strcmp 0A12      start_initialization 0A12  
            __end_of_cmd 09B4                 ??_keypad 0001                 ??_strcmp 0003  
            __pbssCOMRAM 0021                 ?_display 0006              __smallconst 0600  
              copy_data0 0A26                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_84 0004                 isa$xinst 0000  
               main@i_73 000B                 main@i_74 000F                 main@i_76 0013  
               display@p 0006  
