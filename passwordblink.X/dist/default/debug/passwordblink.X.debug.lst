

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 09:52:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4580 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000B96                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _inp
    60   000B96  30                 	db	48
    61   000B97  30                 	db	48
    62   000B98  30                 	db	48
    63   000B99  30                 	db	48
    64   000B9A  00                 	db	0
    65                           
    66                           ;initializer for _pass
    67   000B9B  31                 	db	49
    68   000B9C  32                 	db	50
    69   000B9D  33                 	db	51
    70   000B9E  34                 	db	52
    71   000B9F  00                 	db	0
    72   000000                     _PORTB	set	3969
    73   000000                     _RC2	set	31762
    74   000000                     _RC1	set	31761
    75   000000                     _RB7	set	31759
    76   000000                     _RB6	set	31758
    77   000000                     _RB5	set	31757
    78   000000                     _TRISB	set	3987
    79   000000                     _ADCON1	set	4033
    80   000000                     _RB4	set	31756
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _PORTD	set	3971
    84   000000                     _RC0	set	31760
    85                           
    86                           	psect	smallconst
    87   000600                     __psmallconst:
    88                           	callstack 0
    89   000600  00                 	db	0
    90   000601                     STR_2:
    91   000601  50                 	db	80	;'P'
    92   000602  61                 	db	97	;'a'
    93   000603  73                 	db	115	;'s'
    94   000604  73                 	db	115	;'s'
    95   000605  77                 	db	119	;'w'
    96   000606  6F                 	db	111	;'o'
    97   000607  72                 	db	114	;'r'
    98   000608  64                 	db	100	;'d'
    99   000609  20                 	db	32
   100   00060A  43                 	db	67	;'C'
   101   00060B  6F                 	db	111	;'o'
   102   00060C  72                 	db	114	;'r'
   103   00060D  72                 	db	114	;'r'
   104   00060E  65                 	db	101	;'e'
   105   00060F  63                 	db	99	;'c'
   106   000610  74                 	db	116	;'t'
   107   000611  00                 	db	0
   108   000612                     STR_1:
   109   000612  45                 	db	69	;'E'
   110   000613  6E                 	db	110	;'n'
   111   000614  74                 	db	116	;'t'
   112   000615  65                 	db	101	;'e'
   113   000616  72                 	db	114	;'r'
   114   000617  20                 	db	32
   115   000618  50                 	db	80	;'P'
   116   000619  61                 	db	97	;'a'
   117   00061A  73                 	db	115	;'s'
   118   00061B  73                 	db	115	;'s'
   119   00061C  77                 	db	119	;'w'
   120   00061D  6F                 	db	111	;'o'
   121   00061E  72                 	db	114	;'r'
   122   00061F  64                 	db	100	;'d'
   123   000620  00                 	db	0
   124   000621                     STR_3:
   125   000621  50                 	db	80	;'P'
   126   000622  61                 	db	97	;'a'
   127   000623  73                 	db	115	;'s'
   128   000624  73                 	db	115	;'s'
   129   000625  77                 	db	119	;'w'
   130   000626  6F                 	db	111	;'o'
   131   000627  72                 	db	114	;'r'
   132   000628  64                 	db	100	;'d'
   133   000629  20                 	db	32
   134   00062A  57                 	db	87	;'W'
   135   00062B  72                 	db	114	;'r'
   136   00062C  6F                 	db	111	;'o'
   137   00062D  6E                 	db	110	;'n'
   138   00062E  67                 	db	103	;'g'
   139   00062F  00                 	db	0
   140   000630  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   000B3A                     __pcinit:
   146                           	callstack 0
   147   000B3A                     start_initialization:
   148                           	callstack 0
   149   000B3A                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (10 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   000B3A  0E96               	movlw	low __pidataCOMRAM
   155   000B3C  6EF6               	movwf	tblptrl,c
   156   000B3E  0E0B               	movlw	high __pidataCOMRAM
   157   000B40  6EF7               	movwf	tblptrh,c
   158   000B42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   000B44  6EF8               	movwf	tblptru,c
   160   000B46  EE00  F01F         	lfsr	0,__pdataCOMRAM
   161   000B4A  EE10 F00A          	lfsr	1,10
   162   000B4E                     copy_data0:
   163   000B4E  0009               	tblrd		*+
   164   000B50  CFF5 FFEE          	movff	tablat,postinc0
   165   000B54  50E5               	movf	postdec1,w,c
   166   000B56  50E1               	movf	fsr1l,w,c
   167   000B58  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000B5A  6A29               	clrf	__pbssCOMRAM& (0+255),c
   171   000B5C                     end_of_initialization:
   172                           	callstack 0
   173   000B5C                     __end_of__initialization:
   174                           	callstack 0
   175   000B5C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176   000B5E  6EF8               	movwf	tblptru,c
   177   000B60  0E06               	movlw	high __Lsmallconst
   178   000B62  6EF7               	movwf	tblptrh,c
   179   000B64  0100               	movlb	0
   180   000B66  EF19  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000029                     __pbssCOMRAM:
   184                           	callstack 0
   185   000029                     _index:
   186                           	callstack 0
   187   000029                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   00001F                     __pdataCOMRAM:
   191                           	callstack 0
   192   00001F                     _inp:
   193                           	callstack 0
   194   00001F                     	ds	5
   195   000024                     _pass:
   196                           	callstack 0
   197   000024                     	ds	5
   198                           
   199                           	psect	cstackCOMRAM
   200   000001                     __pcstackCOMRAM:
   201                           	callstack 0
   202   000001                     ?_strcmp:
   203                           	callstack 0
   204   000001                     cmd@a:
   205                           	callstack 0
   206   000001                     data@a:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x0
   212   000001                     	ds	1
   213   000002                     strcmp@r:
   214                           	callstack 0
   215   000002                     cmd@i:
   216                           	callstack 0
   217   000002                     data@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x1
   221   000002                     	ds	1
   222   000003                     ??_strcmp:
   223                           
   224                           ; 1 bytes @ 0x2
   225   000003                     	ds	1
   226   000004                     cmd@i_83:
   227                           	callstack 0
   228   000004                     data@i_87:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x3
   232   000004                     	ds	2
   233   000006                     display@p:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237   000006                     	ds	1
   238   000007                     main@i:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0x6
   242   000007                     	ds	4
   243   00000B                     main@i_74:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247   00000B                     	ds	4
   248   00000F                     main@i_75:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0xE
   252   00000F                     	ds	4
   253   000013                     main@i_77:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x12
   257   000013                     	ds	4
   258   000017                     main@i_79:
   259                           	callstack 0
   260                           
   261                           ; 4 bytes @ 0x16
   262   000017                     	ds	4
   263   00001B                     main@i_73:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x1A
   267   00001B                     	ds	2
   268   00001D                     main@i_76:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x1C
   272   00001D                     	ds	2
   273                           
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 19 in file "passwordblink.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  i               4   22[COMRAM] long 
   284 ;;  i               4   18[COMRAM] long 
   285 ;;  i               4   10[COMRAM] long 
   286 ;;  i               2   28[COMRAM] int 
   287 ;;  i               4   14[COMRAM] long 
   288 ;;  i               2   26[COMRAM] int 
   289 ;;  i               4    6[COMRAM] long 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   299 ;;      Params:         0       0       0       0       0       0       0
   300 ;;      Locals:        24       0       0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0
   302 ;;      Totals:        24       0       0       0       0       0       0
   303 ;;Total ram usage:       24 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		_cmd
   307 ;;		_data
   308 ;;		_display
   309 ;;		_keypad
   310 ;;		_strcmp
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317   000632                     __ptext0:
   318                           	callstack 0
   319   000632                     _main:
   320                           	callstack 29
   321   000632                     
   322                           ;passwordblink.c: 21:     ADCON1=0X0F;
   323   000632  0E0F               	movlw	15
   324   000634  6EC1               	movwf	193,c	;volatile
   325                           
   326                           ;passwordblink.c: 22:     TRISB=0XF0;
   327   000636  0EF0               	movlw	240
   328   000638  6E93               	movwf	147,c	;volatile
   329                           
   330                           ;passwordblink.c: 23:     TRISC=TRISD=0X00;
   331   00063A  0E00               	movlw	0
   332   00063C  6E95               	movwf	149,c	;volatile
   333   00063E  CF95 FF94          	movff	3989,3988	;volatile
   334   000642                     
   335                           ;passwordblink.c: 24:     cmd(0x38);
   336   000642  0E38               	movlw	56
   337   000644  EC3E  F005         	call	_cmd
   338   000648                     
   339                           ;passwordblink.c: 25:     cmd(0x01);
   340   000648  0E01               	movlw	1
   341   00064A  EC3E  F005         	call	_cmd
   342   00064E                     
   343                           ;passwordblink.c: 26:     cmd(0x0f);
   344   00064E  0E0F               	movlw	15
   345   000650  EC3E  F005         	call	_cmd
   346   000654                     
   347                           ;passwordblink.c: 27:     cmd(0x80);
   348   000654  0E80               	movlw	128
   349   000656  EC3E  F005         	call	_cmd
   350   00065A                     l1123:
   351                           
   352                           ;passwordblink.c: 31:     {;passwordblink.c: 32:         cmd(0x01);
   353   00065A  0E01               	movlw	1
   354   00065C  EC3E  F005         	call	_cmd
   355   000660                     
   356                           ;passwordblink.c: 33:         display("Enter Password");
   357   000660  0E12               	movlw	low STR_1
   358   000662  6E06               	movwf	display@p^0,c
   359   000664  ECB5  F005         	call	_display	;wreg free
   360   000668                     
   361                           ;passwordblink.c: 34:         cmd(0xc0);
   362   000668  0EC0               	movlw	192
   363   00066A  EC3E  F005         	call	_cmd
   364   00066E                     
   365                           ;passwordblink.c: 35:         for(index=0;index<4;index++)
   366   00066E  0E00               	movlw	0
   367   000670  6E29               	movwf	_index^0,c
   368   000672                     l1135:
   369                           
   370                           ;passwordblink.c: 36:         {;passwordblink.c: 37:          inp[index]=keypad();
   371   000672  5029               	movf	_index^0,w,c
   372   000674  0F1F               	addlw	low _inp
   373   000676  6ED9               	movwf	fsr2l,c
   374   000678  6ADA               	clrf	fsr2h,c
   375   00067A  EC63  F004         	call	_keypad	;wreg free
   376   00067E  6EDF               	movwf	indf2,c
   377                           
   378                           ;passwordblink.c: 38:          data(inp[index]);
   379   000680  5029               	movf	_index^0,w,c
   380   000682  0F1F               	addlw	low _inp
   381   000684  6ED9               	movwf	fsr2l,c
   382   000686  6ADA               	clrf	fsr2h,c
   383   000688  50DF               	movf	indf2,w,c
   384   00068A  EC0E  F005         	call	_data
   385   00068E                     l50:
   386   00068E  A881               	btfss	3969,4,c	;volatile
   387   000690  EF4C  F003         	goto	u401
   388   000694  EF4E  F003         	goto	u400
   389   000698                     u401:
   390   000698  EF47  F003         	goto	l50
   391   00069C                     u400:
   392   00069C  AA81               	btfss	3969,5,c	;volatile
   393   00069E  EF53  F003         	goto	u411
   394   0006A2  EF55  F003         	goto	u410
   395   0006A6                     u411:
   396   0006A6  EF47  F003         	goto	l50
   397   0006AA                     u410:
   398   0006AA  AC81               	btfss	3969,6,c	;volatile
   399   0006AC  EF5A  F003         	goto	u421
   400   0006B0  EF5C  F003         	goto	u420
   401   0006B4                     u421:
   402   0006B4  EF47  F003         	goto	l50
   403   0006B8                     u420:
   404   0006B8  AE81               	btfss	3969,7,c	;volatile
   405   0006BA  EF61  F003         	goto	u431
   406   0006BE  EF63  F003         	goto	u430
   407   0006C2                     u431:
   408   0006C2  EF47  F003         	goto	l50
   409   0006C6                     u430:
   410   0006C6                     
   411                           ;passwordblink.c: 40:         }
   412   0006C6  2A29               	incf	_index^0,f,c
   413   0006C8  0E03               	movlw	3
   414   0006CA  6429               	cpfsgt	_index^0,c
   415   0006CC  EF6A  F003         	goto	u441
   416   0006D0  EF6C  F003         	goto	u440
   417   0006D4                     u441:
   418   0006D4  EF39  F003         	goto	l1135
   419   0006D8                     u440:
   420   0006D8                     
   421                           ;passwordblink.c: 42:          if(strcmp(inp,pass)==0)
   422   0006D8  0E1F               	movlw	low _inp
   423   0006DA  6E01               	movwf	strcmp@l^0,c
   424   0006DC  0E24               	movlw	low _pass
   425   0006DE  6E02               	movwf	strcmp@r^0,c
   426   0006E0  EC6E  F005         	call	_strcmp	;wreg free
   427   0006E4  5001               	movf	?_strcmp^0,w,c
   428   0006E6  1002               	iorwf	(?_strcmp+1)^0,w,c
   429   0006E8  A4D8               	btfss	status,2,c
   430   0006EA  EF79  F003         	goto	u451
   431   0006EE  EF7B  F003         	goto	u450
   432   0006F2                     u451:
   433   0006F2  EFFE  F003         	goto	l1189
   434   0006F6                     u450:
   435   0006F6                     
   436                           ;passwordblink.c: 43:         {;passwordblink.c: 45:              for(long i=0;i<=100000
      +                          ;i++);
   437   0006F6  0E00               	movlw	0
   438   0006F8  6E07               	movwf	main@i^0,c
   439   0006FA  0E00               	movlw	0
   440   0006FC  6E08               	movwf	(main@i+1)^0,c
   441   0006FE  0E00               	movlw	0
   442   000700  6E09               	movwf	(main@i+2)^0,c
   443   000702  0E00               	movlw	0
   444   000704  6E0A               	movwf	(main@i+3)^0,c
   445   000706                     l1155:
   446   000706  0E01               	movlw	1
   447   000708  2607               	addwf	main@i^0,f,c
   448   00070A  0E00               	movlw	0
   449   00070C  2208               	addwfc	(main@i+1)^0,f,c
   450   00070E  2209               	addwfc	(main@i+2)^0,f,c
   451   000710  220A               	addwfc	(main@i+3)^0,f,c
   452   000712  BE0A               	btfsc	(main@i+3)^0,7,c
   453   000714  EF99  F003         	goto	u461
   454   000718  500A               	movf	(main@i+3)^0,w,c
   455   00071A  E10D               	bnz	u460
   456   00071C  0EA1               	movlw	161
   457   00071E  5C07               	subwf	main@i^0,w,c
   458   000720  0E86               	movlw	134
   459   000722  5808               	subwfb	(main@i+1)^0,w,c
   460   000724  0E01               	movlw	1
   461   000726  5809               	subwfb	(main@i+2)^0,w,c
   462   000728  A0D8               	btfss	status,0,c
   463   00072A  EF99  F003         	goto	u461
   464   00072E  EF9B  F003         	goto	u460
   465   000732                     u461:
   466   000732  EF83  F003         	goto	l1155
   467   000736                     u460:
   468   000736                     
   469                           ;passwordblink.c: 46:             cmd(0x01);
   470   000736  0E01               	movlw	1
   471   000738  EC3E  F005         	call	_cmd
   472   00073C                     
   473                           ;passwordblink.c: 47:             display("Password Correct");
   474   00073C  0E01               	movlw	low STR_2
   475   00073E  6E06               	movwf	display@p^0,c
   476   000740  ECB5  F005         	call	_display	;wreg free
   477   000744                     
   478                           ;passwordblink.c: 48:             for(int i=0;i<10;i++)
   479   000744  0E00               	movlw	0
   480   000746  6E1C               	movwf	(main@i_73+1)^0,c
   481   000748  0E00               	movlw	0
   482   00074A  6E1B               	movwf	main@i_73^0,c
   483   00074C                     l1167:
   484                           
   485                           ;passwordblink.c: 49:              {;passwordblink.c: 50:             cmd(0X08);
   486   00074C  0E08               	movlw	8
   487   00074E  EC3E  F005         	call	_cmd
   488                           
   489                           ;passwordblink.c: 51:              cmd(0X0E);
   490   000752  0E0E               	movlw	14
   491   000754  EC3E  F005         	call	_cmd
   492   000758                     
   493                           ;passwordblink.c: 52:              for(long i=0;i<=1000000;i++);
   494   000758  0E00               	movlw	0
   495   00075A  6E0B               	movwf	main@i_74^0,c
   496   00075C  0E00               	movlw	0
   497   00075E  6E0C               	movwf	(main@i_74+1)^0,c
   498   000760  0E00               	movlw	0
   499   000762  6E0D               	movwf	(main@i_74+2)^0,c
   500   000764  0E00               	movlw	0
   501   000766  6E0E               	movwf	(main@i_74+3)^0,c
   502   000768                     l1175:
   503   000768  0E01               	movlw	1
   504   00076A  260B               	addwf	main@i_74^0,f,c
   505   00076C  0E00               	movlw	0
   506   00076E  220C               	addwfc	(main@i_74+1)^0,f,c
   507   000770  220D               	addwfc	(main@i_74+2)^0,f,c
   508   000772  220E               	addwfc	(main@i_74+3)^0,f,c
   509   000774  BE0E               	btfsc	(main@i_74+3)^0,7,c
   510   000776  EFCA  F003         	goto	u471
   511   00077A  500E               	movf	(main@i_74+3)^0,w,c
   512   00077C  E10D               	bnz	u470
   513   00077E  0E41               	movlw	65
   514   000780  5C0B               	subwf	main@i_74^0,w,c
   515   000782  0E42               	movlw	66
   516   000784  580C               	subwfb	(main@i_74+1)^0,w,c
   517   000786  0E0F               	movlw	15
   518   000788  580D               	subwfb	(main@i_74+2)^0,w,c
   519   00078A  A0D8               	btfss	status,0,c
   520   00078C  EFCA  F003         	goto	u471
   521   000790  EFCC  F003         	goto	u470
   522   000794                     u471:
   523   000794  EFB4  F003         	goto	l1175
   524   000798                     u470:
   525   000798                     
   526                           ;passwordblink.c: 57:              }
   527   000798  4A1B               	infsnz	main@i_73^0,f,c
   528   00079A  2A1C               	incf	(main@i_73+1)^0,f,c
   529   00079C  BE1C               	btfsc	(main@i_73+1)^0,7,c
   530   00079E  EFDA  F003         	goto	u481
   531   0007A2  501C               	movf	(main@i_73+1)^0,w,c
   532   0007A4  E109               	bnz	u480
   533   0007A6  0E0A               	movlw	10
   534   0007A8  5C1B               	subwf	main@i_73^0,w,c
   535   0007AA  A0D8               	btfss	status,0,c
   536   0007AC  EFDA  F003         	goto	u481
   537   0007B0  EFDC  F003         	goto	u480
   538   0007B4                     u481:
   539   0007B4  EFA6  F003         	goto	l1167
   540   0007B8                     u480:
   541   0007B8                     
   542                           ;passwordblink.c: 59:             for(long i=0;i<=1000000;i++);
   543   0007B8  0E00               	movlw	0
   544   0007BA  6E0F               	movwf	main@i_75^0,c
   545   0007BC  0E00               	movlw	0
   546   0007BE  6E10               	movwf	(main@i_75+1)^0,c
   547   0007C0  0E00               	movlw	0
   548   0007C2  6E11               	movwf	(main@i_75+2)^0,c
   549   0007C4  0E00               	movlw	0
   550   0007C6  6E12               	movwf	(main@i_75+3)^0,c
   551   0007C8                     l1187:
   552   0007C8  0E01               	movlw	1
   553   0007CA  260F               	addwf	main@i_75^0,f,c
   554   0007CC  0E00               	movlw	0
   555   0007CE  2210               	addwfc	(main@i_75+1)^0,f,c
   556   0007D0  2211               	addwfc	(main@i_75+2)^0,f,c
   557   0007D2  2212               	addwfc	(main@i_75+3)^0,f,c
   558   0007D4  BE12               	btfsc	(main@i_75+3)^0,7,c
   559   0007D6  EFFA  F003         	goto	u491
   560   0007DA  5012               	movf	(main@i_75+3)^0,w,c
   561   0007DC  E10D               	bnz	u490
   562   0007DE  0E41               	movlw	65
   563   0007E0  5C0F               	subwf	main@i_75^0,w,c
   564   0007E2  0E42               	movlw	66
   565   0007E4  5810               	subwfb	(main@i_75+1)^0,w,c
   566   0007E6  0E0F               	movlw	15
   567   0007E8  5811               	subwfb	(main@i_75+2)^0,w,c
   568   0007EA  A0D8               	btfss	status,0,c
   569   0007EC  EFFA  F003         	goto	u491
   570   0007F0  EFFC  F003         	goto	u490
   571   0007F4                     u491:
   572   0007F4  EFE4  F003         	goto	l1187
   573   0007F8                     u490:
   574   0007F8  EF2D  F003         	goto	l1123
   575   0007FC                     l1189:
   576                           
   577                           ;passwordblink.c: 63:         {;passwordblink.c: 64:             for(int i=0;i<10;i++)
   578   0007FC  0E00               	movlw	0
   579   0007FE  6E1E               	movwf	(main@i_76+1)^0,c
   580   000800  0E00               	movlw	0
   581   000802  6E1D               	movwf	main@i_76^0,c
   582   000804                     l1195:
   583                           
   584                           ;passwordblink.c: 65:             {;passwordblink.c: 66:             for(long i=0;i<=100
      +                          000;i++);
   585   000804  0E00               	movlw	0
   586   000806  6E13               	movwf	main@i_77^0,c
   587   000808  0E00               	movlw	0
   588   00080A  6E14               	movwf	(main@i_77+1)^0,c
   589   00080C  0E00               	movlw	0
   590   00080E  6E15               	movwf	(main@i_77+2)^0,c
   591   000810  0E00               	movlw	0
   592   000812  6E16               	movwf	(main@i_77+3)^0,c
   593   000814                     l1201:
   594   000814  0E01               	movlw	1
   595   000816  2613               	addwf	main@i_77^0,f,c
   596   000818  0E00               	movlw	0
   597   00081A  2214               	addwfc	(main@i_77+1)^0,f,c
   598   00081C  2215               	addwfc	(main@i_77+2)^0,f,c
   599   00081E  2216               	addwfc	(main@i_77+3)^0,f,c
   600   000820  BE16               	btfsc	(main@i_77+3)^0,7,c
   601   000822  EF20  F004         	goto	u501
   602   000826  5016               	movf	(main@i_77+3)^0,w,c
   603   000828  E10D               	bnz	u500
   604   00082A  0EA1               	movlw	161
   605   00082C  5C13               	subwf	main@i_77^0,w,c
   606   00082E  0E86               	movlw	134
   607   000830  5814               	subwfb	(main@i_77+1)^0,w,c
   608   000832  0E01               	movlw	1
   609   000834  5815               	subwfb	(main@i_77+2)^0,w,c
   610   000836  A0D8               	btfss	status,0,c
   611   000838  EF20  F004         	goto	u501
   612   00083C  EF22  F004         	goto	u500
   613   000840                     u501:
   614   000840  EF0A  F004         	goto	l1201
   615   000844                     u500:
   616   000844                     
   617                           ;passwordblink.c: 67:             cmd(0x01);
   618   000844  0E01               	movlw	1
   619   000846  EC3E  F005         	call	_cmd
   620   00084A                     
   621                           ;passwordblink.c: 68:             display("Password Wrong");
   622   00084A  0E21               	movlw	low STR_3
   623   00084C  6E06               	movwf	display@p^0,c
   624   00084E  ECB5  F005         	call	_display	;wreg free
   625   000852                     
   626                           ;passwordblink.c: 69:             for(long i=0;i<=1000000;i++);
   627   000852  0E00               	movlw	0
   628   000854  6E17               	movwf	main@i_79^0,c
   629   000856  0E00               	movlw	0
   630   000858  6E18               	movwf	(main@i_79+1)^0,c
   631   00085A  0E00               	movlw	0
   632   00085C  6E19               	movwf	(main@i_79+2)^0,c
   633   00085E  0E00               	movlw	0
   634   000860  6E1A               	movwf	(main@i_79+3)^0,c
   635   000862                     l1213:
   636   000862  0E01               	movlw	1
   637   000864  2617               	addwf	main@i_79^0,f,c
   638   000866  0E00               	movlw	0
   639   000868  2218               	addwfc	(main@i_79+1)^0,f,c
   640   00086A  2219               	addwfc	(main@i_79+2)^0,f,c
   641   00086C  221A               	addwfc	(main@i_79+3)^0,f,c
   642   00086E  BE1A               	btfsc	(main@i_79+3)^0,7,c
   643   000870  EF47  F004         	goto	u511
   644   000874  501A               	movf	(main@i_79+3)^0,w,c
   645   000876  E10D               	bnz	u510
   646   000878  0E41               	movlw	65
   647   00087A  5C17               	subwf	main@i_79^0,w,c
   648   00087C  0E42               	movlw	66
   649   00087E  5818               	subwfb	(main@i_79+1)^0,w,c
   650   000880  0E0F               	movlw	15
   651   000882  5819               	subwfb	(main@i_79+2)^0,w,c
   652   000884  A0D8               	btfss	status,0,c
   653   000886  EF47  F004         	goto	u511
   654   00088A  EF49  F004         	goto	u510
   655   00088E                     u511:
   656   00088E  EF31  F004         	goto	l1213
   657   000892                     u510:
   658   000892                     
   659                           ;passwordblink.c: 70:               cmd(0X08);
   660   000892  0E08               	movlw	8
   661   000894  EC3E  F005         	call	_cmd
   662                           
   663                           ;passwordblink.c: 71:              cmd(0X0E);
   664   000898  0E0E               	movlw	14
   665   00089A  EC3E  F005         	call	_cmd
   666   00089E                     
   667                           ;passwordblink.c: 72:             }
   668   00089E  4A1D               	infsnz	main@i_76^0,f,c
   669   0008A0  2A1E               	incf	(main@i_76+1)^0,f,c
   670   0008A2  BE1E               	btfsc	(main@i_76+1)^0,7,c
   671   0008A4  EF5D  F004         	goto	u521
   672   0008A8  501E               	movf	(main@i_76+1)^0,w,c
   673   0008AA  E109               	bnz	u520
   674   0008AC  0E0A               	movlw	10
   675   0008AE  5C1D               	subwf	main@i_76^0,w,c
   676   0008B0  A0D8               	btfss	status,0,c
   677   0008B2  EF5D  F004         	goto	u521
   678   0008B6  EF5F  F004         	goto	u520
   679   0008BA                     u521:
   680   0008BA  EF02  F004         	goto	l1195
   681   0008BE                     u520:
   682   0008BE  EF2D  F003         	goto	l1123
   683   0008C2  EF00  F000         	goto	start
   684   0008C6                     __end_of_main:
   685                           	callstack 0
   686                           
   687 ;; *************** function _strcmp *****************
   688 ;; Defined at:
   689 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  l               1    0[COMRAM] PTR const unsigned char 
   692 ;;		 -> inp(5), 
   693 ;;  r               1    1[COMRAM] PTR const unsigned char 
   694 ;;		 -> pass(5), 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  2    0[COMRAM] int 
   699 ;; Registers used:
   700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   706 ;;      Params:         2       0       0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0
   708 ;;      Temps:          2       0       0       0       0       0       0
   709 ;;      Totals:         4       0       0       0       0       0       0
   710 ;;Total ram usage:        4 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text1
   720   000ADC                     __ptext1:
   721                           	callstack 0
   722   000ADC                     _strcmp:
   723                           	callstack 30
   724   000ADC  EF72  F005         	goto	l1105
   725   000AE0                     l1103:
   726   000AE0  2A01               	incf	strcmp@l^0,f,c
   727   000AE2  2A02               	incf	strcmp@r^0,f,c
   728   000AE4                     l1105:
   729   000AE4  5002               	movf	strcmp@r^0,w,c
   730   000AE6  6ED9               	movwf	fsr2l,c
   731   000AE8  6ADA               	clrf	fsr2h,c
   732   000AEA  5001               	movf	strcmp@l^0,w,c
   733   000AEC  6EE1               	movwf	fsr1l,c
   734   000AEE  6AE2               	clrf	fsr1h,c
   735   000AF0  50DE               	movf	postinc2,w,c
   736   000AF2  18E6               	xorwf	postinc1,w,c
   737   000AF4  A4D8               	btfss	status,2,c
   738   000AF6  EF7F  F005         	goto	u381
   739   000AFA  EF81  F005         	goto	u380
   740   000AFE                     u381:
   741   000AFE  EF8C  F005         	goto	l1109
   742   000B02                     u380:
   743   000B02  5001               	movf	strcmp@l^0,w,c
   744   000B04  6ED9               	movwf	fsr2l,c
   745   000B06  6ADA               	clrf	fsr2h,c
   746   000B08  50DF               	movf	indf2,w,c
   747   000B0A  A4D8               	btfss	status,2,c
   748   000B0C  EF8A  F005         	goto	u391
   749   000B10  EF8C  F005         	goto	u390
   750   000B14                     u391:
   751   000B14  EF70  F005         	goto	l1103
   752   000B18                     u390:
   753   000B18                     l1109:
   754   000B18  5001               	movf	strcmp@l^0,w,c
   755   000B1A  6ED9               	movwf	fsr2l,c
   756   000B1C  6ADA               	clrf	fsr2h,c
   757   000B1E  50DF               	movf	indf2,w,c
   758   000B20  6E03               	movwf	??_strcmp^0,c
   759   000B22  5002               	movf	strcmp@r^0,w,c
   760   000B24  6ED9               	movwf	fsr2l,c
   761   000B26  6ADA               	clrf	fsr2h,c
   762   000B28  50DF               	movf	indf2,w,c
   763   000B2A  6E04               	movwf	(??_strcmp+1)^0,c
   764   000B2C  5004               	movf	(??_strcmp+1)^0,w,c
   765   000B2E  5C03               	subwf	??_strcmp^0,w,c
   766   000B30  6E01               	movwf	?_strcmp^0,c
   767   000B32  6A02               	clrf	(?_strcmp+1)^0,c
   768   000B34  A0D8               	btfss	status,0,c
   769   000B36  0602               	decf	(?_strcmp+1)^0,f,c
   770   000B38  0012               	return		;funcret
   771   000B3A                     __end_of_strcmp:
   772                           	callstack 0
   773                           
   774 ;; *************** function _keypad *****************
   775 ;; Defined at:
   776 ;;		line 106 in file "passwordblink.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      unsigned char 
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   790 ;;      Params:         0       0       0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text2
   804   0008C6                     __ptext2:
   805                           	callstack 0
   806   0008C6                     _keypad:
   807                           	callstack 30
   808   0008C6                     l94:
   809   0008C6                     
   810                           ;passwordblink.c: 109:     {;passwordblink.c: 110:     PORTB=0X0E;
   811   0008C6  0E0E               	movlw	14
   812   0008C8  6E81               	movwf	129,c	;volatile
   813   0008CA                     
   814                           ;passwordblink.c: 111:     if(RB4==0)
   815   0008CA  B881               	btfsc	3969,4,c	;volatile
   816   0008CC  EF6A  F004         	goto	u61
   817   0008D0  EF6C  F004         	goto	u60
   818   0008D4                     u61:
   819   0008D4  EF6F  F004         	goto	l95
   820   0008D8                     u60:
   821   0008D8                     
   822                           ;passwordblink.c: 112:     {;passwordblink.c: 113:         return '0';
   823   0008D8  0E30               	movlw	48
   824   0008DA  EF0D  F005         	goto	l96
   825   0008DE                     l95:
   826   0008DE  BA81               	btfsc	3969,5,c	;volatile
   827   0008E0  EF74  F004         	goto	u71
   828   0008E4  EF76  F004         	goto	u70
   829   0008E8                     u71:
   830   0008E8  EF79  F004         	goto	l98
   831   0008EC                     u70:
   832   0008EC                     
   833                           ;passwordblink.c: 116:     {;passwordblink.c: 117:         return '1';
   834   0008EC  0E31               	movlw	49
   835   0008EE  EF0D  F005         	goto	l96
   836   0008F2                     l98:
   837   0008F2  BC81               	btfsc	3969,6,c	;volatile
   838   0008F4  EF7E  F004         	goto	u81
   839   0008F8  EF80  F004         	goto	u80
   840   0008FC                     u81:
   841   0008FC  EF83  F004         	goto	l100
   842   000900                     u80:
   843   000900                     
   844                           ;passwordblink.c: 120:     {;passwordblink.c: 121:         return '2';
   845   000900  0E32               	movlw	50
   846   000902  EF0D  F005         	goto	l96
   847   000906                     l100:
   848   000906  BE81               	btfsc	3969,7,c	;volatile
   849   000908  EF88  F004         	goto	u91
   850   00090C  EF8A  F004         	goto	u90
   851   000910                     u91:
   852   000910  EF8D  F004         	goto	l99
   853   000914                     u90:
   854   000914                     
   855                           ;passwordblink.c: 124:     {;passwordblink.c: 125:         return '3';
   856   000914  0E33               	movlw	51
   857   000916  EF0D  F005         	goto	l96
   858   00091A                     l99:
   859   00091A                     
   860                           ;passwordblink.c: 127:     PORTB=0X0D;
   861   00091A  0E0D               	movlw	13
   862   00091C  6E81               	movwf	129,c	;volatile
   863   00091E                     
   864                           ;passwordblink.c: 128:      if(RB4==0)
   865   00091E  B881               	btfsc	3969,4,c	;volatile
   866   000920  EF94  F004         	goto	u101
   867   000924  EF96  F004         	goto	u100
   868   000928                     u101:
   869   000928  EF99  F004         	goto	l103
   870   00092C                     u100:
   871   00092C                     
   872                           ;passwordblink.c: 129:     {;passwordblink.c: 130:          return '4';
   873   00092C  0E34               	movlw	52
   874   00092E  EF0D  F005         	goto	l96
   875   000932                     l103:
   876   000932  BA81               	btfsc	3969,5,c	;volatile
   877   000934  EF9E  F004         	goto	u111
   878   000938  EFA0  F004         	goto	u110
   879   00093C                     u111:
   880   00093C  EFA3  F004         	goto	l105
   881   000940                     u110:
   882   000940                     
   883                           ;passwordblink.c: 133:     {;passwordblink.c: 134:         return '5';
   884   000940  0E35               	movlw	53
   885   000942  EF0D  F005         	goto	l96
   886   000946                     l105:
   887   000946  BC81               	btfsc	3969,6,c	;volatile
   888   000948  EFA8  F004         	goto	u121
   889   00094C  EFAA  F004         	goto	u120
   890   000950                     u121:
   891   000950  EFAD  F004         	goto	l107
   892   000954                     u120:
   893   000954                     
   894                           ;passwordblink.c: 137:     {;passwordblink.c: 138:         return '6';
   895   000954  0E36               	movlw	54
   896   000956  EF0D  F005         	goto	l96
   897   00095A                     l107:
   898   00095A  BE81               	btfsc	3969,7,c	;volatile
   899   00095C  EFB2  F004         	goto	u131
   900   000960  EFB4  F004         	goto	u130
   901   000964                     u131:
   902   000964  EFB7  F004         	goto	l106
   903   000968                     u130:
   904   000968                     
   905                           ;passwordblink.c: 141:     {;passwordblink.c: 142:         return '7';
   906   000968  0E37               	movlw	55
   907   00096A  EF0D  F005         	goto	l96
   908   00096E                     l106:
   909   00096E                     
   910                           ;passwordblink.c: 144:     PORTB=0X0B;
   911   00096E  0E0B               	movlw	11
   912   000970  6E81               	movwf	129,c	;volatile
   913   000972                     
   914                           ;passwordblink.c: 145:      if(RB4==0)
   915   000972  B881               	btfsc	3969,4,c	;volatile
   916   000974  EFBE  F004         	goto	u141
   917   000978  EFC0  F004         	goto	u140
   918   00097C                     u141:
   919   00097C  EFC3  F004         	goto	l110
   920   000980                     u140:
   921   000980                     
   922                           ;passwordblink.c: 146:     {;passwordblink.c: 147:          return '8';
   923   000980  0E38               	movlw	56
   924   000982  EF0D  F005         	goto	l96
   925   000986                     l110:
   926   000986  BA81               	btfsc	3969,5,c	;volatile
   927   000988  EFC8  F004         	goto	u151
   928   00098C  EFCA  F004         	goto	u150
   929   000990                     u151:
   930   000990  EFCD  F004         	goto	l112
   931   000994                     u150:
   932   000994                     
   933                           ;passwordblink.c: 150:     {;passwordblink.c: 151:         return '9';
   934   000994  0E39               	movlw	57
   935   000996  EF0D  F005         	goto	l96
   936   00099A                     l112:
   937   00099A  BC81               	btfsc	3969,6,c	;volatile
   938   00099C  EFD2  F004         	goto	u161
   939   0009A0  EFD4  F004         	goto	u160
   940   0009A4                     u161:
   941   0009A4  EFD7  F004         	goto	l114
   942   0009A8                     u160:
   943   0009A8                     
   944                           ;passwordblink.c: 154:     {;passwordblink.c: 155:         return 'A';
   945   0009A8  0E41               	movlw	65
   946   0009AA  EF0D  F005         	goto	l96
   947   0009AE                     l114:
   948   0009AE  BE81               	btfsc	3969,7,c	;volatile
   949   0009B0  EFDC  F004         	goto	u171
   950   0009B4  EFDE  F004         	goto	u170
   951   0009B8                     u171:
   952   0009B8  EFE1  F004         	goto	l113
   953   0009BC                     u170:
   954   0009BC                     
   955                           ;passwordblink.c: 158:     {;passwordblink.c: 159:         return 'B';
   956   0009BC  0E42               	movlw	66
   957   0009BE  EF0D  F005         	goto	l96
   958   0009C2                     l113:
   959   0009C2                     
   960                           ;passwordblink.c: 161:     PORTB=0X07;
   961   0009C2  0E07               	movlw	7
   962   0009C4  6E81               	movwf	129,c	;volatile
   963   0009C6                     
   964                           ;passwordblink.c: 162:     if(RB4==0)
   965   0009C6  B881               	btfsc	3969,4,c	;volatile
   966   0009C8  EFE8  F004         	goto	u181
   967   0009CC  EFEA  F004         	goto	u180
   968   0009D0                     u181:
   969   0009D0  EFED  F004         	goto	l117
   970   0009D4                     u180:
   971   0009D4                     
   972                           ;passwordblink.c: 163:     {;passwordblink.c: 164:         return 'C';
   973   0009D4  0E43               	movlw	67
   974   0009D6  EF0D  F005         	goto	l96
   975   0009DA                     l117:
   976   0009DA  BA81               	btfsc	3969,5,c	;volatile
   977   0009DC  EFF2  F004         	goto	u191
   978   0009E0  EFF4  F004         	goto	u190
   979   0009E4                     u191:
   980   0009E4  EFF7  F004         	goto	l119
   981   0009E8                     u190:
   982   0009E8                     
   983                           ;passwordblink.c: 167:     {;passwordblink.c: 168:         return 'D';
   984   0009E8  0E44               	movlw	68
   985   0009EA  EF0D  F005         	goto	l96
   986   0009EE                     l119:
   987   0009EE  BC81               	btfsc	3969,6,c	;volatile
   988   0009F0  EFFC  F004         	goto	u201
   989   0009F4  EFFE  F004         	goto	u200
   990   0009F8                     u201:
   991   0009F8  EF01  F005         	goto	l121
   992   0009FC                     u200:
   993   0009FC                     
   994                           ;passwordblink.c: 171:     {;passwordblink.c: 172:         return 'E';
   995   0009FC  0E45               	movlw	69
   996   0009FE  EF0D  F005         	goto	l96
   997   000A02                     l121:
   998   000A02  BE81               	btfsc	3969,7,c	;volatile
   999   000A04  EF06  F005         	goto	u211
  1000   000A08  EF08  F005         	goto	u210
  1001   000A0C                     u211:
  1002   000A0C  EF0B  F005         	goto	l118
  1003   000A10                     u210:
  1004   000A10                     
  1005                           ;passwordblink.c: 175:     {;passwordblink.c: 176:         return 'F';
  1006   000A10  0E46               	movlw	70
  1007   000A12  EF0D  F005         	goto	l96
  1008   000A16                     l118:
  1009   000A16  EF63  F004         	goto	l94
  1010   000A1A                     l96:
  1011   000A1A  0012               	return		;funcret
  1012   000A1C                     __end_of_keypad:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _display *****************
  1016 ;; Defined at:
  1017 ;;		line 97 in file "passwordblink.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  p               1    5[COMRAM] PTR const unsigned char 
  1020 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1032 ;;      Params:         1       0       0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0
  1035 ;;      Totals:         1       0       0       0       0       0       0
  1036 ;;Total ram usage:        1 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 1
  1039 ;; This function calls:
  1040 ;;		_data
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text3
  1047   000B6A                     __ptext3:
  1048                           	callstack 0
  1049   000B6A                     _display:
  1050                           	callstack 29
  1051   000B6A                     
  1052                           ;passwordblink.c: 97: void display(const char *p);passwordblink.c: 98: {;passwordblink.c
      +                          : 99:     while(*p)
  1053   000B6A  EFBE  F005         	goto	l1099
  1054   000B6E                     l1095:
  1055                           
  1056                           ;passwordblink.c: 100:     {;passwordblink.c: 101:         data(*p);
  1057   000B6E  C006  FFF6         	movff	display@p,tblptrl
  1058   000B72                     	if	0	;There is only one active tblptr byte
  1059   000B72                     	endif
  1060   000B72                     	if	0	;tblptru may be non-zero
  1061   000B72                     	endif
  1062   000B72                     	if	0	;tblptru may be non-zero
  1063   000B72                     	endif
  1064   000B72  0008               	tblrd		*
  1065   000B74  50F5               	movf	tablat,w,c
  1066   000B76  EC0E  F005         	call	_data
  1067   000B7A                     
  1068                           ;passwordblink.c: 102:         p++;
  1069   000B7A  2A06               	incf	display@p^0,f,c
  1070   000B7C                     l1099:
  1071                           
  1072                           ;passwordblink.c: 99:     while(*p)
  1073   000B7C  C006  FFF6         	movff	display@p,tblptrl
  1074   000B80                     	if	0	;There is only one active tblptr byte
  1075   000B80                     	endif
  1076   000B80                     	if	0	;tblptru may be non-zero
  1077   000B80                     	endif
  1078   000B80                     	if	0	;tblptru may be non-zero
  1079   000B80                     	endif
  1080   000B80  0008               	tblrd		*
  1081   000B82  50F5               	movf	tablat,w,c
  1082   000B84  0900               	iorlw	0
  1083   000B86  A4D8               	btfss	status,2,c
  1084   000B88  EFC8  F005         	goto	u371
  1085   000B8C  EFCA  F005         	goto	u370
  1086   000B90                     u371:
  1087   000B90  EFB7  F005         	goto	l1095
  1088   000B94                     u370:
  1089   000B94  0012               	return		;funcret
  1090   000B96                     __end_of_display:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _data *****************
  1094 ;; Defined at:
  1095 ;;		line 87 in file "passwordblink.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  a               1    wreg     unsigned char 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  a               1    0[COMRAM] unsigned char 
  1100 ;;  i               2    3[COMRAM] int 
  1101 ;;  i               2    1[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         5       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0
  1114 ;;      Totals:         5       0       0       0       0       0       0
  1115 ;;Total ram usage:        5 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;;		_display
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text4
  1126   000A1C                     __ptext4:
  1127                           	callstack 0
  1128   000A1C                     _data:
  1129                           	callstack 29
  1130                           
  1131                           ;incstack = 0
  1132                           ;data@a stored from wreg
  1133   000A1C  6E01               	movwf	data@a^0,c
  1134   000A1E                     
  1135                           ;passwordblink.c: 87: void data(unsigned char a);passwordblink.c: 88: {;passwordblink.c:
      +                           89:     RC0=1;
  1136   000A1E  8082               	bsf	3970,0,c	;volatile
  1137                           
  1138                           ;passwordblink.c: 90:      RC1=0;
  1139   000A20  9282               	bcf	3970,1,c	;volatile
  1140   000A22                     
  1141                           ;passwordblink.c: 91:      PORTD=a;
  1142   000A22  C001  FF83         	movff	data@a,3971	;volatile
  1143   000A26                     
  1144                           ;passwordblink.c: 92:     RC2=1;
  1145   000A26  8482               	bsf	3970,2,c	;volatile
  1146   000A28                     
  1147                           ;passwordblink.c: 93:     for(int i=0;i<=100;i++);
  1148   000A28  0E00               	movlw	0
  1149   000A2A  6E03               	movwf	(data@i+1)^0,c
  1150   000A2C  0E00               	movlw	0
  1151   000A2E  6E02               	movwf	data@i^0,c
  1152   000A30                     l821:
  1153   000A30  4A02               	infsnz	data@i^0,f,c
  1154   000A32  2A03               	incf	(data@i+1)^0,f,c
  1155   000A34  BE03               	btfsc	(data@i+1)^0,7,c
  1156   000A36  EF26  F005         	goto	u11
  1157   000A3A  5003               	movf	(data@i+1)^0,w,c
  1158   000A3C  E109               	bnz	u10
  1159   000A3E  0E65               	movlw	101
  1160   000A40  5C02               	subwf	data@i^0,w,c
  1161   000A42  A0D8               	btfss	status,0,c
  1162   000A44  EF26  F005         	goto	u11
  1163   000A48  EF28  F005         	goto	u10
  1164   000A4C                     u11:
  1165   000A4C  EF18  F005         	goto	l821
  1166   000A50                     u10:
  1167   000A50                     
  1168                           ;passwordblink.c: 94:     RC2=0;
  1169   000A50  9482               	bcf	3970,2,c	;volatile
  1170   000A52                     
  1171                           ;passwordblink.c: 95:     for(int i=0;i<=10000;i++);
  1172   000A52  0E00               	movlw	0
  1173   000A54  6E05               	movwf	(data@i_87+1)^0,c
  1174   000A56  0E00               	movlw	0
  1175   000A58  6E04               	movwf	data@i_87^0,c
  1176   000A5A                     l831:
  1177   000A5A  4A04               	infsnz	data@i_87^0,f,c
  1178   000A5C  2A05               	incf	(data@i_87+1)^0,f,c
  1179   000A5E  BE05               	btfsc	(data@i_87+1)^0,7,c
  1180   000A60  EF3B  F005         	goto	u21
  1181   000A64  0E11               	movlw	17
  1182   000A66  5C04               	subwf	data@i_87^0,w,c
  1183   000A68  0E27               	movlw	39
  1184   000A6A  5805               	subwfb	(data@i_87+1)^0,w,c
  1185   000A6C  A0D8               	btfss	status,0,c
  1186   000A6E  EF3B  F005         	goto	u21
  1187   000A72  EF3D  F005         	goto	u20
  1188   000A76                     u21:
  1189   000A76  EF2D  F005         	goto	l831
  1190   000A7A                     u20:
  1191   000A7A  0012               	return		;funcret
  1192   000A7C                     __end_of_data:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _cmd *****************
  1196 ;; Defined at:
  1197 ;;		line 78 in file "passwordblink.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  a               1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  a               1    0[COMRAM] unsigned char 
  1202 ;;  i               2    3[COMRAM] int 
  1203 ;;  i               2    1[COMRAM] int 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         0       0       0       0       0       0       0
  1214 ;;      Locals:         5       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:         5       0       0       0       0       0       0
  1217 ;;Total ram usage:        5 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text5
  1227   000A7C                     __ptext5:
  1228                           	callstack 0
  1229   000A7C                     _cmd:
  1230                           	callstack 30
  1231                           
  1232                           ;incstack = 0
  1233                           ;cmd@a stored from wreg
  1234   000A7C  6E01               	movwf	cmd@a^0,c
  1235   000A7E                     
  1236                           ;passwordblink.c: 78: void cmd(unsigned char a);passwordblink.c: 79: {;passwordblink.c: 
      +                          80:      RC0=RC1=0;
  1237   000A7E  9282               	bcf	3970,1,c	;volatile
  1238   000A80  9082               	bcf	3970,0,c	;volatile
  1239   000A82                     
  1240                           ;passwordblink.c: 81:     PORTD=a;
  1241   000A82  C001  FF83         	movff	cmd@a,3971	;volatile
  1242   000A86                     
  1243                           ;passwordblink.c: 82:     RC2=1;
  1244   000A86  8482               	bsf	3970,2,c	;volatile
  1245   000A88                     
  1246                           ;passwordblink.c: 83:     for(int i=0;i<=100;i++);
  1247   000A88  0E00               	movlw	0
  1248   000A8A  6E03               	movwf	(cmd@i+1)^0,c
  1249   000A8C  0E00               	movlw	0
  1250   000A8E  6E02               	movwf	cmd@i^0,c
  1251   000A90                     l847:
  1252   000A90  4A02               	infsnz	cmd@i^0,f,c
  1253   000A92  2A03               	incf	(cmd@i+1)^0,f,c
  1254   000A94  BE03               	btfsc	(cmd@i+1)^0,7,c
  1255   000A96  EF56  F005         	goto	u31
  1256   000A9A  5003               	movf	(cmd@i+1)^0,w,c
  1257   000A9C  E109               	bnz	u30
  1258   000A9E  0E65               	movlw	101
  1259   000AA0  5C02               	subwf	cmd@i^0,w,c
  1260   000AA2  A0D8               	btfss	status,0,c
  1261   000AA4  EF56  F005         	goto	u31
  1262   000AA8  EF58  F005         	goto	u30
  1263   000AAC                     u31:
  1264   000AAC  EF48  F005         	goto	l847
  1265   000AB0                     u30:
  1266   000AB0                     
  1267                           ;passwordblink.c: 84:     RC2=0;
  1268   000AB0  9482               	bcf	3970,2,c	;volatile
  1269   000AB2                     
  1270                           ;passwordblink.c: 85:      for(int i=0;i<=10000;i++);
  1271   000AB2  0E00               	movlw	0
  1272   000AB4  6E05               	movwf	(cmd@i_83+1)^0,c
  1273   000AB6  0E00               	movlw	0
  1274   000AB8  6E04               	movwf	cmd@i_83^0,c
  1275   000ABA                     l857:
  1276   000ABA  4A04               	infsnz	cmd@i_83^0,f,c
  1277   000ABC  2A05               	incf	(cmd@i_83+1)^0,f,c
  1278   000ABE  BE05               	btfsc	(cmd@i_83+1)^0,7,c
  1279   000AC0  EF6B  F005         	goto	u41
  1280   000AC4  0E11               	movlw	17
  1281   000AC6  5C04               	subwf	cmd@i_83^0,w,c
  1282   000AC8  0E27               	movlw	39
  1283   000ACA  5805               	subwfb	(cmd@i_83+1)^0,w,c
  1284   000ACC  A0D8               	btfss	status,0,c
  1285   000ACE  EF6B  F005         	goto	u41
  1286   000AD2  EF6D  F005         	goto	u40
  1287   000AD6                     u41:
  1288   000AD6  EF5D  F005         	goto	l857
  1289   000ADA                     u40:
  1290   000ADA  0012               	return		;funcret
  1291   000ADC                     __end_of_cmd:
  1292                           	callstack 0
  1293                           
  1294                           	psect	rparam
  1295   000000                     tosu	equ	0xFFF
  1296                           tosh	equ	0xFFE
  1297                           tosl	equ	0xFFD
  1298                           stkptr	equ	0xFFC
  1299                           pclatu	equ	0xFFB
  1300                           pclath	equ	0xFFA
  1301                           pcl	equ	0xFF9
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           indf0	equ	0xFEF
  1309                           postinc0	equ	0xFEE
  1310                           postdec0	equ	0xFED
  1311                           preinc0	equ	0xFEC
  1312                           plusw0	equ	0xFEB
  1313                           fsr0h	equ	0xFEA
  1314                           fsr0l	equ	0xFE9
  1315                           wreg	equ	0xFE8
  1316                           indf1	equ	0xFE7
  1317                           postinc1	equ	0xFE6
  1318                           postdec1	equ	0xFE5
  1319                           preinc1	equ	0xFE4
  1320                           plusw1	equ	0xFE3
  1321                           fsr1h	equ	0xFE2
  1322                           fsr1l	equ	0xFE1
  1323                           bsr	equ	0xFE0
  1324                           indf2	equ	0xFDF
  1325                           postinc2	equ	0xFDE
  1326                           postdec2	equ	0xFDD
  1327                           preinc2	equ	0xFDC
  1328                           plusw2	equ	0xFDB
  1329                           fsr2h	equ	0xFDA
  1330                           fsr2l	equ	0xFD9
  1331                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    1084
                                              6 COMRAM    24    24      0
                                _cmd
                               _data
                            _display
                             _keypad
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     348
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data
   _display
     _data
   _keypad
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      29       1       43.2%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      20        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 09:52:05 2024

                     l50 068E                       l82 0A50                       l75 0AB0  
                     l91 0B94                       l85 0A7A                       l78 0ADA  
                     l94 08C6                       l95 08DE                       l96 0A1A  
                     l98 08F2                       l99 091A                       u10 0A50  
                     u11 0A4C                       u20 0A7A                       u21 0A76  
                     u30 0AB0                       u31 0AAC                       u40 0ADA  
                     u41 0AD6                       u60 08D8                       u61 08D4  
                     u70 08EC                       u71 08E8                       u80 0900  
                     u81 08FC                       u90 0914                       u91 0910  
                    l100 0906                      l110 0986                      l103 0932  
                    l112 099A                      l121 0A02                      l113 09C2  
                    l105 0946                      l114 09AE                      l106 096E  
                    l107 095A                      l117 09DA                      l118 0A16  
                    l119 09EE                      l811 0A22                      l821 0A30  
                    l813 0A26                      l831 0A5A                      l823 0A34  
                    l815 0A28                      l911 0954                      l807 0B38  
                    l841 0A88                      l833 0A5E                      l825 0A52  
                    l809 0A1E                      l921 096E                      l905 0940  
                    l851 0AB2                      l835 0A7E                      l931 0994  
                    l923 0972                      l837 0A82                      l925 0980  
                    l917 0968                      l847 0A90                      l839 0A86  
                    l951 09D4                      l943 09BC                      l871 08CA  
                    l857 0ABA                      l849 0A94                      l937 09A8  
                    l873 08D8                      l859 0ABE                      l963 09FC  
                    l947 09C2                      l891 0914                      l957 09E8  
                    l949 09C6                      l885 0900                      l869 08C6  
                    l895 091A                      l879 08EC                      l969 0A10  
                    l897 091E                      l899 092C                      _RC0 7C10  
                    _RC1 7C11                      _RB4 7C0C                      _RC2 7C12  
                    _RB5 7C0D                      _RB6 7C0E                      _RB7 7C0F  
                    u100 092C                      u101 0928                      u110 0940  
                    u111 093C                      u200 09FC                      u120 0954  
                    u201 09F8                      u121 0950                      u210 0A10  
                    u130 0968                      u211 0A0C                      u131 0964  
                    u140 0980                      u141 097C                      u150 0994  
                    u151 0990                      u160 09A8                      u400 069C  
                    u161 09A4                      u401 0698                      u170 09BC  
                    u410 06AA                      u171 09B8                      u411 06A6  
                    u180 09D4                      u500 0844                      u420 06B8  
                    u181 09D0                      u501 0840                      u421 06B4  
                    u190 09E8                      u510 0892                      u430 06C6  
                    u191 09E4                      u511 088E                      u431 06C2  
                    u520 08BE                      u440 06D8                      u521 08BA  
                    u441 06D4                      u370 0B94                      u450 06F6  
                    u371 0B90                      u451 06F2                      u380 0B02  
                    u460 0736                      u381 0AFE                      u461 0732  
                    u390 0B18                      u470 0798                      u391 0B14  
                    u471 0794                      u480 07B8                      u481 07B4  
                    u490 07F8                      u491 07F4                      _cmd 0A7C  
                    _inp 001F                     l1101 0ADC                     l1103 0AE0  
                   l1105 0AE4                     l1201 0814                     l1121 0654  
                   l1113 0632                     l1107 0B02                     l1203 0844  
                   l1123 065A                     l1115 0642                     l1109 0B18  
                   l1213 0862                     l1205 084A                     l1141 06B8  
                   l1125 0660                     l1117 0648                     l1215 0892  
                   l1207 0852                     l1143 06C6                     l1135 0672  
                   l1127 0668                     l1119 064E                     l1217 089E  
                   l1161 0744                     l1145 06C8                     l1137 069C  
                   l1129 066E                     l1219 08A2                     l1155 0706  
                   l1147 06D8                     l1139 06AA                     l1093 0B6A  
                   l1181 07B8                     l1157 0736                     l1149 06F6  
                   l1095 0B6E                     l1175 0768                     l1167 074C  
                   l1159 073C                     l1097 0B7A                     l1177 0798  
                   l1169 0758                     ?_cmd 0001                     l1099 0B7C  
                   l1195 0804                     l1187 07C8                     l1179 079C  
                   l1189 07FC                     STR_1 0612                     STR_2 0601  
                   STR_3 0621                     _data 0A1C                     cmd@a 0001  
                   cmd@i 0002                     _main 0632                     _pass 0024  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTB 0F81                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
        __end_of_display 0B96                    data@a 0001                    data@i 0002  
                  _index 0029                    main@i 0007                    tablat 0FF5  
                  status 0FD8          __initialization 0B3A             __end_of_data 0A7C  
           __end_of_main 08C6                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   _ADCON1 0FC1                   _keypad 08C6  
                 isa$std 0001                   _strcmp 0ADC                ??_display 0007  
           __pdataCOMRAM 001F             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0B5C            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?_keypad 0001                  ?_strcmp 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0B3A  
                __ramtop 0600                  __ptext0 0632                  __ptext1 0ADC  
                __ptext2 08C6                  __ptext3 0B6A                  __ptext4 0A1C  
                __ptext5 0A7C                  cmd@i_83 0004                  _display 0B6A  
   end_of_initialization 0B5C                  postdec1 0FE5                  postinc0 0FEE  
                postinc1 0FE6                  postinc2 0FDE                  strcmp@l 0001  
                strcmp@r 0002            __pidataCOMRAM 0B96           __end_of_keypad 0A1C  
         __end_of_strcmp 0B3A      start_initialization 0B3A              __end_of_cmd 0ADC  
               ??_keypad 0001                 ??_strcmp 0003              __pbssCOMRAM 0029  
               ?_display 0006              __smallconst 0600                copy_data0 0B4E  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               data@i_87 0004                 isa$xinst 0000                 main@i_73 001B  
               main@i_74 000B                 main@i_75 000F                 main@i_76 001D  
               main@i_77 0013                 main@i_79 0017                 display@p 0006  
