

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 09:55:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4580 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   000C40                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _inp
    60   000C40  30                 	db	48
    61   000C41  30                 	db	48
    62   000C42  30                 	db	48
    63   000C43  30                 	db	48
    64   000C44  00                 	db	0
    65                           
    66                           ;initializer for _pass
    67   000C45  31                 	db	49
    68   000C46  32                 	db	50
    69   000C47  33                 	db	51
    70   000C48  34                 	db	52
    71   000C49  00                 	db	0
    72   000000                     _PORTB	set	3969
    73   000000                     _RC2	set	31762
    74   000000                     _RC1	set	31761
    75   000000                     _RB7	set	31759
    76   000000                     _RB6	set	31758
    77   000000                     _RB5	set	31757
    78   000000                     _TRISB	set	3987
    79   000000                     _ADCON1	set	4033
    80   000000                     _RB4	set	31756
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _PORTD	set	3971
    84   000000                     _RC0	set	31760
    85                           
    86                           	psect	smallconst
    87   000600                     __psmallconst:
    88                           	callstack 0
    89   000600  00                 	db	0
    90   000601                     STR_2:
    91   000601  50                 	db	80	;'P'
    92   000602  61                 	db	97	;'a'
    93   000603  73                 	db	115	;'s'
    94   000604  73                 	db	115	;'s'
    95   000605  77                 	db	119	;'w'
    96   000606  6F                 	db	111	;'o'
    97   000607  72                 	db	114	;'r'
    98   000608  64                 	db	100	;'d'
    99   000609  20                 	db	32
   100   00060A  43                 	db	67	;'C'
   101   00060B  6F                 	db	111	;'o'
   102   00060C  72                 	db	114	;'r'
   103   00060D  72                 	db	114	;'r'
   104   00060E  65                 	db	101	;'e'
   105   00060F  63                 	db	99	;'c'
   106   000610  74                 	db	116	;'t'
   107   000611  00                 	db	0
   108   000612                     STR_1:
   109   000612  45                 	db	69	;'E'
   110   000613  6E                 	db	110	;'n'
   111   000614  74                 	db	116	;'t'
   112   000615  65                 	db	101	;'e'
   113   000616  72                 	db	114	;'r'
   114   000617  20                 	db	32
   115   000618  50                 	db	80	;'P'
   116   000619  61                 	db	97	;'a'
   117   00061A  73                 	db	115	;'s'
   118   00061B  73                 	db	115	;'s'
   119   00061C  77                 	db	119	;'w'
   120   00061D  6F                 	db	111	;'o'
   121   00061E  72                 	db	114	;'r'
   122   00061F  64                 	db	100	;'d'
   123   000620  00                 	db	0
   124   000621                     STR_3:
   125   000621  50                 	db	80	;'P'
   126   000622  61                 	db	97	;'a'
   127   000623  73                 	db	115	;'s'
   128   000624  73                 	db	115	;'s'
   129   000625  77                 	db	119	;'w'
   130   000626  6F                 	db	111	;'o'
   131   000627  72                 	db	114	;'r'
   132   000628  64                 	db	100	;'d'
   133   000629  20                 	db	32
   134   00062A  57                 	db	87	;'W'
   135   00062B  72                 	db	114	;'r'
   136   00062C  6F                 	db	111	;'o'
   137   00062D  6E                 	db	110	;'n'
   138   00062E  67                 	db	103	;'g'
   139   00062F  00                 	db	0
   140   000630  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   000BE4                     __pcinit:
   146                           	callstack 0
   147   000BE4                     start_initialization:
   148                           	callstack 0
   149   000BE4                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (10 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154   000BE4  0E40               	movlw	low __pidataCOMRAM
   155   000BE6  6EF6               	movwf	tblptrl,c
   156   000BE8  0E0C               	movlw	high __pidataCOMRAM
   157   000BEA  6EF7               	movwf	tblptrh,c
   158   000BEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159   000BEE  6EF8               	movwf	tblptru,c
   160   000BF0  EE00  F027         	lfsr	0,__pdataCOMRAM
   161   000BF4  EE10 F00A          	lfsr	1,10
   162   000BF8                     copy_data0:
   163   000BF8  0009               	tblrd		*+
   164   000BFA  CFF5 FFEE          	movff	tablat,postinc0
   165   000BFE  50E5               	movf	postdec1,w,c
   166   000C00  50E1               	movf	fsr1l,w,c
   167   000C02  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000C04  6A31               	clrf	__pbssCOMRAM& (0+255),c
   171   000C06                     end_of_initialization:
   172                           	callstack 0
   173   000C06                     __end_of__initialization:
   174                           	callstack 0
   175   000C06  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176   000C08  6EF8               	movwf	tblptru,c
   177   000C0A  0E06               	movlw	high __Lsmallconst
   178   000C0C  6EF7               	movwf	tblptrh,c
   179   000C0E  0100               	movlb	0
   180   000C10  EF19  F003         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000031                     __pbssCOMRAM:
   184                           	callstack 0
   185   000031                     _index:
   186                           	callstack 0
   187   000031                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000027                     __pdataCOMRAM:
   191                           	callstack 0
   192   000027                     _inp:
   193                           	callstack 0
   194   000027                     	ds	5
   195   00002C                     _pass:
   196                           	callstack 0
   197   00002C                     	ds	5
   198                           
   199                           	psect	cstackCOMRAM
   200   000001                     __pcstackCOMRAM:
   201                           	callstack 0
   202   000001                     ?_strcmp:
   203                           	callstack 0
   204   000001                     cmd@a:
   205                           	callstack 0
   206   000001                     data@a:
   207                           	callstack 0
   208   000001                     strcmp@l:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x0
   212   000001                     	ds	1
   213   000002                     strcmp@r:
   214                           	callstack 0
   215   000002                     cmd@i:
   216                           	callstack 0
   217   000002                     data@i:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x1
   221   000002                     	ds	1
   222   000003                     ??_strcmp:
   223                           
   224                           ; 1 bytes @ 0x2
   225   000003                     	ds	1
   226   000004                     cmd@i_87:
   227                           	callstack 0
   228   000004                     data@i_91:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x3
   232   000004                     	ds	2
   233   000006                     display@p:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237   000006                     	ds	1
   238   000007                     main@i:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0x6
   242   000007                     	ds	4
   243   00000B                     main@i_75:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247   00000B                     	ds	4
   248   00000F                     main@i_76:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0xE
   252   00000F                     	ds	4
   253   000013                     main@i_78:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x12
   257   000013                     	ds	4
   258   000017                     main@i_83:
   259                           	callstack 0
   260                           
   261                           ; 4 bytes @ 0x16
   262   000017                     	ds	4
   263   00001B                     main@i_73:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x1A
   267   00001B                     	ds	2
   268   00001D                     main@i_74:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x1C
   272   00001D                     	ds	2
   273   00001F                     main@i_77:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x1E
   277   00001F                     	ds	2
   278   000021                     main@i_80:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x20
   282   000021                     	ds	2
   283   000023                     main@i_81:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x22
   287   000023                     	ds	2
   288   000025                     main@i_82:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x24
   292   000025                     	ds	2
   293                           
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 19 in file "passwordblink.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  i               2   36[COMRAM] int 
   304 ;;  i               2   34[COMRAM] int 
   305 ;;  i               4   22[COMRAM] long 
   306 ;;  i               2   32[COMRAM] int 
   307 ;;  i               4   18[COMRAM] long 
   308 ;;  i               4   10[COMRAM] long 
   309 ;;  i               2   28[COMRAM] int 
   310 ;;  i               2   30[COMRAM] int 
   311 ;;  i               4   14[COMRAM] long 
   312 ;;  i               2   26[COMRAM] int 
   313 ;;  i               4    6[COMRAM] long 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         0       0       0       0       0       0       0
   324 ;;      Locals:        32       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0
   326 ;;      Totals:        32       0       0       0       0       0       0
   327 ;;Total ram usage:       32 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_cmd
   331 ;;		_data
   332 ;;		_display
   333 ;;		_keypad
   334 ;;		_strcmp
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text0
   341   000632                     __ptext0:
   342                           	callstack 0
   343   000632                     _main:
   344                           	callstack 29
   345   000632                     
   346                           ;passwordblink.c: 21:     ADCON1=0X0F;
   347   000632  0E0F               	movlw	15
   348   000634  6EC1               	movwf	193,c	;volatile
   349                           
   350                           ;passwordblink.c: 22:     TRISB=0XF0;
   351   000636  0EF0               	movlw	240
   352   000638  6E93               	movwf	147,c	;volatile
   353                           
   354                           ;passwordblink.c: 23:     TRISC=TRISD=0X00;
   355   00063A  0E00               	movlw	0
   356   00063C  6E95               	movwf	149,c	;volatile
   357   00063E  CF95 FF94          	movff	3989,3988	;volatile
   358   000642                     
   359                           ;passwordblink.c: 24:     cmd(0x38);
   360   000642  0E38               	movlw	56
   361   000644  EC93  F005         	call	_cmd
   362   000648                     
   363                           ;passwordblink.c: 25:     cmd(0x01);
   364   000648  0E01               	movlw	1
   365   00064A  EC93  F005         	call	_cmd
   366   00064E                     
   367                           ;passwordblink.c: 26:     cmd(0x0f);
   368   00064E  0E0F               	movlw	15
   369   000650  EC93  F005         	call	_cmd
   370   000654                     
   371                           ;passwordblink.c: 27:     cmd(0x80);
   372   000654  0E80               	movlw	128
   373   000656  EC93  F005         	call	_cmd
   374   00065A                     l1179:
   375                           
   376                           ;passwordblink.c: 31:     {;passwordblink.c: 32:         cmd(0x01);
   377   00065A  0E01               	movlw	1
   378   00065C  EC93  F005         	call	_cmd
   379   000660                     
   380                           ;passwordblink.c: 33:         display("Enter Password");
   381   000660  0E12               	movlw	low STR_1
   382   000662  6E06               	movwf	display@p^0,c
   383   000664  EC0A  F006         	call	_display	;wreg free
   384   000668                     
   385                           ;passwordblink.c: 34:         cmd(0xc0);
   386   000668  0EC0               	movlw	192
   387   00066A  EC93  F005         	call	_cmd
   388   00066E                     
   389                           ;passwordblink.c: 35:         for(index=0;index<4;index++)
   390   00066E  0E00               	movlw	0
   391   000670  6E31               	movwf	_index^0,c
   392   000672                     l1191:
   393                           
   394                           ;passwordblink.c: 36:         {;passwordblink.c: 37:          inp[index]=keypad();
   395   000672  5031               	movf	_index^0,w,c
   396   000674  0F27               	addlw	low _inp
   397   000676  6ED9               	movwf	fsr2l,c
   398   000678  6ADA               	clrf	fsr2h,c
   399   00067A  ECB8  F004         	call	_keypad	;wreg free
   400   00067E  6EDF               	movwf	indf2,c
   401                           
   402                           ;passwordblink.c: 38:          data(inp[index]);
   403   000680  5031               	movf	_index^0,w,c
   404   000682  0F27               	addlw	low _inp
   405   000684  6ED9               	movwf	fsr2l,c
   406   000686  6ADA               	clrf	fsr2h,c
   407   000688  50DF               	movf	indf2,w,c
   408   00068A  EC63  F005         	call	_data
   409   00068E                     l50:
   410   00068E  A881               	btfss	3969,4,c	;volatile
   411   000690  EF4C  F003         	goto	u441
   412   000694  EF4E  F003         	goto	u440
   413   000698                     u441:
   414   000698  EF47  F003         	goto	l50
   415   00069C                     u440:
   416   00069C  AA81               	btfss	3969,5,c	;volatile
   417   00069E  EF53  F003         	goto	u451
   418   0006A2  EF55  F003         	goto	u450
   419   0006A6                     u451:
   420   0006A6  EF47  F003         	goto	l50
   421   0006AA                     u450:
   422   0006AA  AC81               	btfss	3969,6,c	;volatile
   423   0006AC  EF5A  F003         	goto	u461
   424   0006B0  EF5C  F003         	goto	u460
   425   0006B4                     u461:
   426   0006B4  EF47  F003         	goto	l50
   427   0006B8                     u460:
   428   0006B8  AE81               	btfss	3969,7,c	;volatile
   429   0006BA  EF61  F003         	goto	u471
   430   0006BE  EF63  F003         	goto	u470
   431   0006C2                     u471:
   432   0006C2  EF47  F003         	goto	l50
   433   0006C6                     u470:
   434   0006C6                     
   435                           ;passwordblink.c: 40:         }
   436   0006C6  2A31               	incf	_index^0,f,c
   437   0006C8  0E03               	movlw	3
   438   0006CA  6431               	cpfsgt	_index^0,c
   439   0006CC  EF6A  F003         	goto	u481
   440   0006D0  EF6C  F003         	goto	u480
   441   0006D4                     u481:
   442   0006D4  EF39  F003         	goto	l1191
   443   0006D8                     u480:
   444   0006D8                     
   445                           ;passwordblink.c: 42:          if(strcmp(inp,pass)==0)
   446   0006D8  0E27               	movlw	low _inp
   447   0006DA  6E01               	movwf	strcmp@l^0,c
   448   0006DC  0E2C               	movlw	low _pass
   449   0006DE  6E02               	movwf	strcmp@r^0,c
   450   0006E0  ECC3  F005         	call	_strcmp	;wreg free
   451   0006E4  5001               	movf	?_strcmp^0,w,c
   452   0006E6  1002               	iorwf	(?_strcmp+1)^0,w,c
   453   0006E8  A4D8               	btfss	status,2,c
   454   0006EA  EF79  F003         	goto	u491
   455   0006EE  EF7B  F003         	goto	u490
   456   0006F2                     u491:
   457   0006F2  EF11  F004         	goto	l1257
   458   0006F6                     u490:
   459   0006F6                     
   460                           ;passwordblink.c: 43:         {;passwordblink.c: 45:              for(long i=0;i<=100000
      +                          ;i++);
   461   0006F6  0E00               	movlw	0
   462   0006F8  6E07               	movwf	main@i^0,c
   463   0006FA  0E00               	movlw	0
   464   0006FC  6E08               	movwf	(main@i+1)^0,c
   465   0006FE  0E00               	movlw	0
   466   000700  6E09               	movwf	(main@i+2)^0,c
   467   000702  0E00               	movlw	0
   468   000704  6E0A               	movwf	(main@i+3)^0,c
   469   000706                     l1211:
   470   000706  0E01               	movlw	1
   471   000708  2607               	addwf	main@i^0,f,c
   472   00070A  0E00               	movlw	0
   473   00070C  2208               	addwfc	(main@i+1)^0,f,c
   474   00070E  2209               	addwfc	(main@i+2)^0,f,c
   475   000710  220A               	addwfc	(main@i+3)^0,f,c
   476   000712  BE0A               	btfsc	(main@i+3)^0,7,c
   477   000714  EF99  F003         	goto	u501
   478   000718  500A               	movf	(main@i+3)^0,w,c
   479   00071A  E10D               	bnz	u500
   480   00071C  0EA1               	movlw	161
   481   00071E  5C07               	subwf	main@i^0,w,c
   482   000720  0E86               	movlw	134
   483   000722  5808               	subwfb	(main@i+1)^0,w,c
   484   000724  0E01               	movlw	1
   485   000726  5809               	subwfb	(main@i+2)^0,w,c
   486   000728  A0D8               	btfss	status,0,c
   487   00072A  EF99  F003         	goto	u501
   488   00072E  EF9B  F003         	goto	u500
   489   000732                     u501:
   490   000732  EF83  F003         	goto	l1211
   491   000736                     u500:
   492   000736                     
   493                           ;passwordblink.c: 46:             cmd(0x01);
   494   000736  0E01               	movlw	1
   495   000738  EC93  F005         	call	_cmd
   496   00073C                     
   497                           ;passwordblink.c: 47:             display("Password Correct");
   498   00073C  0E01               	movlw	low STR_2
   499   00073E  6E06               	movwf	display@p^0,c
   500   000740  EC0A  F006         	call	_display	;wreg free
   501   000744                     
   502                           ;passwordblink.c: 48:             for(int i=0;i<10;i++)
   503   000744  0E00               	movlw	0
   504   000746  6E1C               	movwf	(main@i_73+1)^0,c
   505   000748  0E00               	movlw	0
   506   00074A  6E1B               	movwf	main@i_73^0,c
   507   00074C                     l1223:
   508                           
   509                           ;passwordblink.c: 49:              {;passwordblink.c: 50:             cmd(0X08);
   510   00074C  0E08               	movlw	8
   511   00074E  EC93  F005         	call	_cmd
   512   000752                     
   513                           ;passwordblink.c: 51:               for(int i=0;i<=30000;i++);
   514   000752  0E00               	movlw	0
   515   000754  6E1E               	movwf	(main@i_74+1)^0,c
   516   000756  0E00               	movlw	0
   517   000758  6E1D               	movwf	main@i_74^0,c
   518   00075A                     l1231:
   519   00075A  4A1D               	infsnz	main@i_74^0,f,c
   520   00075C  2A1E               	incf	(main@i_74+1)^0,f,c
   521   00075E  BE1E               	btfsc	(main@i_74+1)^0,7,c
   522   000760  EFBB  F003         	goto	u511
   523   000764  0E31               	movlw	49
   524   000766  5C1D               	subwf	main@i_74^0,w,c
   525   000768  0E75               	movlw	117
   526   00076A  581E               	subwfb	(main@i_74+1)^0,w,c
   527   00076C  A0D8               	btfss	status,0,c
   528   00076E  EFBB  F003         	goto	u511
   529   000772  EFBD  F003         	goto	u510
   530   000776                     u511:
   531   000776  EFAD  F003         	goto	l1231
   532   00077A                     u510:
   533   00077A                     
   534                           ;passwordblink.c: 52:              cmd(0X0E);
   535   00077A  0E0E               	movlw	14
   536   00077C  EC93  F005         	call	_cmd
   537   000780                     
   538                           ;passwordblink.c: 53:              for(long i=0;i<=30000;i++);
   539   000780  0E00               	movlw	0
   540   000782  6E0B               	movwf	main@i_75^0,c
   541   000784  0E00               	movlw	0
   542   000786  6E0C               	movwf	(main@i_75+1)^0,c
   543   000788  0E00               	movlw	0
   544   00078A  6E0D               	movwf	(main@i_75+2)^0,c
   545   00078C  0E00               	movlw	0
   546   00078E  6E0E               	movwf	(main@i_75+3)^0,c
   547   000790                     l1243:
   548   000790  0E01               	movlw	1
   549   000792  260B               	addwf	main@i_75^0,f,c
   550   000794  0E00               	movlw	0
   551   000796  220C               	addwfc	(main@i_75+1)^0,f,c
   552   000798  220D               	addwfc	(main@i_75+2)^0,f,c
   553   00079A  220E               	addwfc	(main@i_75+3)^0,f,c
   554   00079C  BE0E               	btfsc	(main@i_75+3)^0,7,c
   555   00079E  EFDD  F003         	goto	u521
   556   0007A2  500E               	movf	(main@i_75+3)^0,w,c
   557   0007A4  100D               	iorwf	(main@i_75+2)^0,w,c
   558   0007A6  E10B               	bnz	u520
   559   0007A8  0E31               	movlw	49
   560   0007AA  5C0B               	subwf	main@i_75^0,w,c
   561   0007AC  0E75               	movlw	117
   562   0007AE  580C               	subwfb	(main@i_75+1)^0,w,c
   563   0007B0  A0D8               	btfss	status,0,c
   564   0007B2  EFDD  F003         	goto	u521
   565   0007B6  EFDF  F003         	goto	u520
   566   0007BA                     u521:
   567   0007BA  EFC8  F003         	goto	l1243
   568   0007BE                     u520:
   569   0007BE                     
   570                           ;passwordblink.c: 54:              }
   571   0007BE  4A1B               	infsnz	main@i_73^0,f,c
   572   0007C0  2A1C               	incf	(main@i_73+1)^0,f,c
   573   0007C2  BE1C               	btfsc	(main@i_73+1)^0,7,c
   574   0007C4  EFED  F003         	goto	u531
   575   0007C8  501C               	movf	(main@i_73+1)^0,w,c
   576   0007CA  E109               	bnz	u530
   577   0007CC  0E0A               	movlw	10
   578   0007CE  5C1B               	subwf	main@i_73^0,w,c
   579   0007D0  A0D8               	btfss	status,0,c
   580   0007D2  EFED  F003         	goto	u531
   581   0007D6  EFEF  F003         	goto	u530
   582   0007DA                     u531:
   583   0007DA  EFA6  F003         	goto	l1223
   584   0007DE                     u530:
   585   0007DE                     
   586                           ;passwordblink.c: 56:             for(long i=0;i<=1000000;i++);
   587   0007DE  0E00               	movlw	0
   588   0007E0  6E0F               	movwf	main@i_76^0,c
   589   0007E2  0E00               	movlw	0
   590   0007E4  6E10               	movwf	(main@i_76+1)^0,c
   591   0007E6  0E00               	movlw	0
   592   0007E8  6E11               	movwf	(main@i_76+2)^0,c
   593   0007EA  0E00               	movlw	0
   594   0007EC  6E12               	movwf	(main@i_76+3)^0,c
   595   0007EE                     l1255:
   596   0007EE  0E01               	movlw	1
   597   0007F0  260F               	addwf	main@i_76^0,f,c
   598   0007F2  0E00               	movlw	0
   599   0007F4  2210               	addwfc	(main@i_76+1)^0,f,c
   600   0007F6  2211               	addwfc	(main@i_76+2)^0,f,c
   601   0007F8  2212               	addwfc	(main@i_76+3)^0,f,c
   602   0007FA  BE12               	btfsc	(main@i_76+3)^0,7,c
   603   0007FC  EF0D  F004         	goto	u541
   604   000800  5012               	movf	(main@i_76+3)^0,w,c
   605   000802  E10D               	bnz	u540
   606   000804  0E41               	movlw	65
   607   000806  5C0F               	subwf	main@i_76^0,w,c
   608   000808  0E42               	movlw	66
   609   00080A  5810               	subwfb	(main@i_76+1)^0,w,c
   610   00080C  0E0F               	movlw	15
   611   00080E  5811               	subwfb	(main@i_76+2)^0,w,c
   612   000810  A0D8               	btfss	status,0,c
   613   000812  EF0D  F004         	goto	u541
   614   000816  EF0F  F004         	goto	u540
   615   00081A                     u541:
   616   00081A  EFF7  F003         	goto	l1255
   617   00081E                     u540:
   618   00081E  EF2D  F003         	goto	l1179
   619   000822                     l1257:
   620                           
   621                           ;passwordblink.c: 60:         {;passwordblink.c: 62:              for(int i=0;i<10;i++)
   622   000822  0E00               	movlw	0
   623   000824  6E20               	movwf	(main@i_77+1)^0,c
   624   000826  0E00               	movlw	0
   625   000828  6E1F               	movwf	main@i_77^0,c
   626   00082A                     l1263:
   627                           
   628                           ;passwordblink.c: 63:             {;passwordblink.c: 64:                 cmd(0X08);
   629   00082A  0E08               	movlw	8
   630   00082C  EC93  F005         	call	_cmd
   631   000830                     
   632                           ;passwordblink.c: 65:             for(long i=0;i<=100000;i++);
   633   000830  0E00               	movlw	0
   634   000832  6E13               	movwf	main@i_78^0,c
   635   000834  0E00               	movlw	0
   636   000836  6E14               	movwf	(main@i_78+1)^0,c
   637   000838  0E00               	movlw	0
   638   00083A  6E15               	movwf	(main@i_78+2)^0,c
   639   00083C  0E00               	movlw	0
   640   00083E  6E16               	movwf	(main@i_78+3)^0,c
   641   000840                     l1271:
   642   000840  0E01               	movlw	1
   643   000842  2613               	addwf	main@i_78^0,f,c
   644   000844  0E00               	movlw	0
   645   000846  2214               	addwfc	(main@i_78+1)^0,f,c
   646   000848  2215               	addwfc	(main@i_78+2)^0,f,c
   647   00084A  2216               	addwfc	(main@i_78+3)^0,f,c
   648   00084C  BE16               	btfsc	(main@i_78+3)^0,7,c
   649   00084E  EF36  F004         	goto	u551
   650   000852  5016               	movf	(main@i_78+3)^0,w,c
   651   000854  E10D               	bnz	u550
   652   000856  0EA1               	movlw	161
   653   000858  5C13               	subwf	main@i_78^0,w,c
   654   00085A  0E86               	movlw	134
   655   00085C  5814               	subwfb	(main@i_78+1)^0,w,c
   656   00085E  0E01               	movlw	1
   657   000860  5815               	subwfb	(main@i_78+2)^0,w,c
   658   000862  A0D8               	btfss	status,0,c
   659   000864  EF36  F004         	goto	u551
   660   000868  EF38  F004         	goto	u550
   661   00086C                     u551:
   662   00086C  EF20  F004         	goto	l1271
   663   000870                     u550:
   664   000870                     
   665                           ;passwordblink.c: 66:             cmd(0x01);
   666   000870  0E01               	movlw	1
   667   000872  EC93  F005         	call	_cmd
   668   000876                     
   669                           ;passwordblink.c: 67:             display("Password Wrong");
   670   000876  0E21               	movlw	low STR_3
   671   000878  6E06               	movwf	display@p^0,c
   672   00087A  EC0A  F006         	call	_display	;wreg free
   673   00087E                     
   674                           ;passwordblink.c: 69:             for(int i=0;i<10;i++)
   675   00087E  0E00               	movlw	0
   676   000880  6E22               	movwf	(main@i_80+1)^0,c
   677   000882  0E00               	movlw	0
   678   000884  6E21               	movwf	main@i_80^0,c
   679   000886                     l1283:
   680                           
   681                           ;passwordblink.c: 70:            {;passwordblink.c: 71:             cmd(0X08);
   682   000886  0E08               	movlw	8
   683   000888  EC93  F005         	call	_cmd
   684   00088C                     
   685                           ;passwordblink.c: 72:              for(int i=0;i<=30000;i++);
   686   00088C  0E00               	movlw	0
   687   00088E  6E24               	movwf	(main@i_81+1)^0,c
   688   000890  0E00               	movlw	0
   689   000892  6E23               	movwf	main@i_81^0,c
   690   000894                     l1291:
   691   000894  4A23               	infsnz	main@i_81^0,f,c
   692   000896  2A24               	incf	(main@i_81+1)^0,f,c
   693   000898  BE24               	btfsc	(main@i_81+1)^0,7,c
   694   00089A  EF58  F004         	goto	u561
   695   00089E  0E31               	movlw	49
   696   0008A0  5C23               	subwf	main@i_81^0,w,c
   697   0008A2  0E75               	movlw	117
   698   0008A4  5824               	subwfb	(main@i_81+1)^0,w,c
   699   0008A6  A0D8               	btfss	status,0,c
   700   0008A8  EF58  F004         	goto	u561
   701   0008AC  EF5A  F004         	goto	u560
   702   0008B0                     u561:
   703   0008B0  EF4A  F004         	goto	l1291
   704   0008B4                     u560:
   705   0008B4                     
   706                           ;passwordblink.c: 73:         cmd(0X0E);
   707   0008B4  0E0E               	movlw	14
   708   0008B6  EC93  F005         	call	_cmd
   709   0008BA                     
   710                           ;passwordblink.c: 74:          for(int i=0;i<=30000;i++);
   711   0008BA  0E00               	movlw	0
   712   0008BC  6E26               	movwf	(main@i_82+1)^0,c
   713   0008BE  0E00               	movlw	0
   714   0008C0  6E25               	movwf	main@i_82^0,c
   715   0008C2                     l1303:
   716   0008C2  4A25               	infsnz	main@i_82^0,f,c
   717   0008C4  2A26               	incf	(main@i_82+1)^0,f,c
   718   0008C6  BE26               	btfsc	(main@i_82+1)^0,7,c
   719   0008C8  EF6F  F004         	goto	u571
   720   0008CC  0E31               	movlw	49
   721   0008CE  5C25               	subwf	main@i_82^0,w,c
   722   0008D0  0E75               	movlw	117
   723   0008D2  5826               	subwfb	(main@i_82+1)^0,w,c
   724   0008D4  A0D8               	btfss	status,0,c
   725   0008D6  EF6F  F004         	goto	u571
   726   0008DA  EF71  F004         	goto	u570
   727   0008DE                     u571:
   728   0008DE  EF61  F004         	goto	l1303
   729   0008E2                     u570:
   730   0008E2                     
   731                           ;passwordblink.c: 75:              }
   732   0008E2  4A21               	infsnz	main@i_80^0,f,c
   733   0008E4  2A22               	incf	(main@i_80+1)^0,f,c
   734   0008E6  BE22               	btfsc	(main@i_80+1)^0,7,c
   735   0008E8  EF7F  F004         	goto	u581
   736   0008EC  5022               	movf	(main@i_80+1)^0,w,c
   737   0008EE  E109               	bnz	u580
   738   0008F0  0E0A               	movlw	10
   739   0008F2  5C21               	subwf	main@i_80^0,w,c
   740   0008F4  A0D8               	btfss	status,0,c
   741   0008F6  EF7F  F004         	goto	u581
   742   0008FA  EF81  F004         	goto	u580
   743   0008FE                     u581:
   744   0008FE  EF43  F004         	goto	l1283
   745   000902                     u580:
   746   000902                     
   747                           ;passwordblink.c: 76:             for(long i=0;i<=1000000;i++);
   748   000902  0E00               	movlw	0
   749   000904  6E17               	movwf	main@i_83^0,c
   750   000906  0E00               	movlw	0
   751   000908  6E18               	movwf	(main@i_83+1)^0,c
   752   00090A  0E00               	movlw	0
   753   00090C  6E19               	movwf	(main@i_83+2)^0,c
   754   00090E  0E00               	movlw	0
   755   000910  6E1A               	movwf	(main@i_83+3)^0,c
   756   000912                     l1317:
   757   000912  0E01               	movlw	1
   758   000914  2617               	addwf	main@i_83^0,f,c
   759   000916  0E00               	movlw	0
   760   000918  2218               	addwfc	(main@i_83+1)^0,f,c
   761   00091A  2219               	addwfc	(main@i_83+2)^0,f,c
   762   00091C  221A               	addwfc	(main@i_83+3)^0,f,c
   763   00091E  BE1A               	btfsc	(main@i_83+3)^0,7,c
   764   000920  EF9F  F004         	goto	u591
   765   000924  501A               	movf	(main@i_83+3)^0,w,c
   766   000926  E10D               	bnz	u590
   767   000928  0E41               	movlw	65
   768   00092A  5C17               	subwf	main@i_83^0,w,c
   769   00092C  0E42               	movlw	66
   770   00092E  5818               	subwfb	(main@i_83+1)^0,w,c
   771   000930  0E0F               	movlw	15
   772   000932  5819               	subwfb	(main@i_83+2)^0,w,c
   773   000934  A0D8               	btfss	status,0,c
   774   000936  EF9F  F004         	goto	u591
   775   00093A  EFA1  F004         	goto	u590
   776   00093E                     u591:
   777   00093E  EF89  F004         	goto	l1317
   778   000942                     u590:
   779   000942                     
   780                           ;passwordblink.c: 78:        cmd(0X0E);
   781   000942  0E0E               	movlw	14
   782   000944  EC93  F005         	call	_cmd
   783   000948                     
   784                           ;passwordblink.c: 82:             }
   785   000948  4A1F               	infsnz	main@i_77^0,f,c
   786   00094A  2A20               	incf	(main@i_77+1)^0,f,c
   787   00094C  BE20               	btfsc	(main@i_77+1)^0,7,c
   788   00094E  EFB2  F004         	goto	u601
   789   000952  5020               	movf	(main@i_77+1)^0,w,c
   790   000954  E109               	bnz	u600
   791   000956  0E0A               	movlw	10
   792   000958  5C1F               	subwf	main@i_77^0,w,c
   793   00095A  A0D8               	btfss	status,0,c
   794   00095C  EFB2  F004         	goto	u601
   795   000960  EFB4  F004         	goto	u600
   796   000964                     u601:
   797   000964  EF15  F004         	goto	l1263
   798   000968                     u600:
   799   000968  EF2D  F003         	goto	l1179
   800   00096C  EF00  F000         	goto	start
   801   000970                     __end_of_main:
   802                           	callstack 0
   803                           
   804 ;; *************** function _strcmp *****************
   805 ;; Defined at:
   806 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  l               1    0[COMRAM] PTR const unsigned char 
   809 ;;		 -> inp(5), 
   810 ;;  r               1    1[COMRAM] PTR const unsigned char 
   811 ;;		 -> pass(5), 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2    0[COMRAM] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         2       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0
   825 ;;      Temps:          2       0       0       0       0       0       0
   826 ;;      Totals:         4       0       0       0       0       0       0
   827 ;;Total ram usage:        4 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text1
   837   000B86                     __ptext1:
   838                           	callstack 0
   839   000B86                     _strcmp:
   840                           	callstack 30
   841   000B86  EFC7  F005         	goto	l1161
   842   000B8A                     l1159:
   843   000B8A  2A01               	incf	strcmp@l^0,f,c
   844   000B8C  2A02               	incf	strcmp@r^0,f,c
   845   000B8E                     l1161:
   846   000B8E  5002               	movf	strcmp@r^0,w,c
   847   000B90  6ED9               	movwf	fsr2l,c
   848   000B92  6ADA               	clrf	fsr2h,c
   849   000B94  5001               	movf	strcmp@l^0,w,c
   850   000B96  6EE1               	movwf	fsr1l,c
   851   000B98  6AE2               	clrf	fsr1h,c
   852   000B9A  50DE               	movf	postinc2,w,c
   853   000B9C  18E6               	xorwf	postinc1,w,c
   854   000B9E  A4D8               	btfss	status,2,c
   855   000BA0  EFD4  F005         	goto	u421
   856   000BA4  EFD6  F005         	goto	u420
   857   000BA8                     u421:
   858   000BA8  EFE1  F005         	goto	l1165
   859   000BAC                     u420:
   860   000BAC  5001               	movf	strcmp@l^0,w,c
   861   000BAE  6ED9               	movwf	fsr2l,c
   862   000BB0  6ADA               	clrf	fsr2h,c
   863   000BB2  50DF               	movf	indf2,w,c
   864   000BB4  A4D8               	btfss	status,2,c
   865   000BB6  EFDF  F005         	goto	u431
   866   000BBA  EFE1  F005         	goto	u430
   867   000BBE                     u431:
   868   000BBE  EFC5  F005         	goto	l1159
   869   000BC2                     u430:
   870   000BC2                     l1165:
   871   000BC2  5001               	movf	strcmp@l^0,w,c
   872   000BC4  6ED9               	movwf	fsr2l,c
   873   000BC6  6ADA               	clrf	fsr2h,c
   874   000BC8  50DF               	movf	indf2,w,c
   875   000BCA  6E03               	movwf	??_strcmp^0,c
   876   000BCC  5002               	movf	strcmp@r^0,w,c
   877   000BCE  6ED9               	movwf	fsr2l,c
   878   000BD0  6ADA               	clrf	fsr2h,c
   879   000BD2  50DF               	movf	indf2,w,c
   880   000BD4  6E04               	movwf	(??_strcmp+1)^0,c
   881   000BD6  5004               	movf	(??_strcmp+1)^0,w,c
   882   000BD8  5C03               	subwf	??_strcmp^0,w,c
   883   000BDA  6E01               	movwf	?_strcmp^0,c
   884   000BDC  6A02               	clrf	(?_strcmp+1)^0,c
   885   000BDE  A0D8               	btfss	status,0,c
   886   000BE0  0602               	decf	(?_strcmp+1)^0,f,c
   887   000BE2  0012               	return		;funcret
   888   000BE4                     __end_of_strcmp:
   889                           	callstack 0
   890                           
   891 ;; *************** function _keypad *****************
   892 ;; Defined at:
   893 ;;		line 116 in file "passwordblink.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      unsigned char 
   900 ;; Registers used:
   901 ;;		wreg, status,2
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         0       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text2
   921   000970                     __ptext2:
   922                           	callstack 0
   923   000970                     _keypad:
   924                           	callstack 30
   925   000970                     l102:
   926   000970                     
   927                           ;passwordblink.c: 119:     {;passwordblink.c: 120:     PORTB=0X0E;
   928   000970  0E0E               	movlw	14
   929   000972  6E81               	movwf	129,c	;volatile
   930   000974                     
   931                           ;passwordblink.c: 121:     if(RB4==0)
   932   000974  B881               	btfsc	3969,4,c	;volatile
   933   000976  EFBF  F004         	goto	u61
   934   00097A  EFC1  F004         	goto	u60
   935   00097E                     u61:
   936   00097E  EFC4  F004         	goto	l103
   937   000982                     u60:
   938   000982                     
   939                           ;passwordblink.c: 122:     {;passwordblink.c: 123:         return '0';
   940   000982  0E30               	movlw	48
   941   000984  EF62  F005         	goto	l104
   942   000988                     l103:
   943   000988  BA81               	btfsc	3969,5,c	;volatile
   944   00098A  EFC9  F004         	goto	u71
   945   00098E  EFCB  F004         	goto	u70
   946   000992                     u71:
   947   000992  EFCE  F004         	goto	l106
   948   000996                     u70:
   949   000996                     
   950                           ;passwordblink.c: 126:     {;passwordblink.c: 127:         return '1';
   951   000996  0E31               	movlw	49
   952   000998  EF62  F005         	goto	l104
   953   00099C                     l106:
   954   00099C  BC81               	btfsc	3969,6,c	;volatile
   955   00099E  EFD3  F004         	goto	u81
   956   0009A2  EFD5  F004         	goto	u80
   957   0009A6                     u81:
   958   0009A6  EFD8  F004         	goto	l108
   959   0009AA                     u80:
   960   0009AA                     
   961                           ;passwordblink.c: 130:     {;passwordblink.c: 131:         return '2';
   962   0009AA  0E32               	movlw	50
   963   0009AC  EF62  F005         	goto	l104
   964   0009B0                     l108:
   965   0009B0  BE81               	btfsc	3969,7,c	;volatile
   966   0009B2  EFDD  F004         	goto	u91
   967   0009B6  EFDF  F004         	goto	u90
   968   0009BA                     u91:
   969   0009BA  EFE2  F004         	goto	l107
   970   0009BE                     u90:
   971   0009BE                     
   972                           ;passwordblink.c: 134:     {;passwordblink.c: 135:         return '3';
   973   0009BE  0E33               	movlw	51
   974   0009C0  EF62  F005         	goto	l104
   975   0009C4                     l107:
   976   0009C4                     
   977                           ;passwordblink.c: 137:     PORTB=0X0D;
   978   0009C4  0E0D               	movlw	13
   979   0009C6  6E81               	movwf	129,c	;volatile
   980   0009C8                     
   981                           ;passwordblink.c: 138:      if(RB4==0)
   982   0009C8  B881               	btfsc	3969,4,c	;volatile
   983   0009CA  EFE9  F004         	goto	u101
   984   0009CE  EFEB  F004         	goto	u100
   985   0009D2                     u101:
   986   0009D2  EFEE  F004         	goto	l111
   987   0009D6                     u100:
   988   0009D6                     
   989                           ;passwordblink.c: 139:     {;passwordblink.c: 140:          return '4';
   990   0009D6  0E34               	movlw	52
   991   0009D8  EF62  F005         	goto	l104
   992   0009DC                     l111:
   993   0009DC  BA81               	btfsc	3969,5,c	;volatile
   994   0009DE  EFF3  F004         	goto	u111
   995   0009E2  EFF5  F004         	goto	u110
   996   0009E6                     u111:
   997   0009E6  EFF8  F004         	goto	l113
   998   0009EA                     u110:
   999   0009EA                     
  1000                           ;passwordblink.c: 143:     {;passwordblink.c: 144:         return '5';
  1001   0009EA  0E35               	movlw	53
  1002   0009EC  EF62  F005         	goto	l104
  1003   0009F0                     l113:
  1004   0009F0  BC81               	btfsc	3969,6,c	;volatile
  1005   0009F2  EFFD  F004         	goto	u121
  1006   0009F6  EFFF  F004         	goto	u120
  1007   0009FA                     u121:
  1008   0009FA  EF02  F005         	goto	l115
  1009   0009FE                     u120:
  1010   0009FE                     
  1011                           ;passwordblink.c: 147:     {;passwordblink.c: 148:         return '6';
  1012   0009FE  0E36               	movlw	54
  1013   000A00  EF62  F005         	goto	l104
  1014   000A04                     l115:
  1015   000A04  BE81               	btfsc	3969,7,c	;volatile
  1016   000A06  EF07  F005         	goto	u131
  1017   000A0A  EF09  F005         	goto	u130
  1018   000A0E                     u131:
  1019   000A0E  EF0C  F005         	goto	l114
  1020   000A12                     u130:
  1021   000A12                     
  1022                           ;passwordblink.c: 151:     {;passwordblink.c: 152:         return '7';
  1023   000A12  0E37               	movlw	55
  1024   000A14  EF62  F005         	goto	l104
  1025   000A18                     l114:
  1026   000A18                     
  1027                           ;passwordblink.c: 154:     PORTB=0X0B;
  1028   000A18  0E0B               	movlw	11
  1029   000A1A  6E81               	movwf	129,c	;volatile
  1030   000A1C                     
  1031                           ;passwordblink.c: 155:      if(RB4==0)
  1032   000A1C  B881               	btfsc	3969,4,c	;volatile
  1033   000A1E  EF13  F005         	goto	u141
  1034   000A22  EF15  F005         	goto	u140
  1035   000A26                     u141:
  1036   000A26  EF18  F005         	goto	l118
  1037   000A2A                     u140:
  1038   000A2A                     
  1039                           ;passwordblink.c: 156:     {;passwordblink.c: 157:          return '8';
  1040   000A2A  0E38               	movlw	56
  1041   000A2C  EF62  F005         	goto	l104
  1042   000A30                     l118:
  1043   000A30  BA81               	btfsc	3969,5,c	;volatile
  1044   000A32  EF1D  F005         	goto	u151
  1045   000A36  EF1F  F005         	goto	u150
  1046   000A3A                     u151:
  1047   000A3A  EF22  F005         	goto	l120
  1048   000A3E                     u150:
  1049   000A3E                     
  1050                           ;passwordblink.c: 160:     {;passwordblink.c: 161:         return '9';
  1051   000A3E  0E39               	movlw	57
  1052   000A40  EF62  F005         	goto	l104
  1053   000A44                     l120:
  1054   000A44  BC81               	btfsc	3969,6,c	;volatile
  1055   000A46  EF27  F005         	goto	u161
  1056   000A4A  EF29  F005         	goto	u160
  1057   000A4E                     u161:
  1058   000A4E  EF2C  F005         	goto	l122
  1059   000A52                     u160:
  1060   000A52                     
  1061                           ;passwordblink.c: 164:     {;passwordblink.c: 165:         return 'A';
  1062   000A52  0E41               	movlw	65
  1063   000A54  EF62  F005         	goto	l104
  1064   000A58                     l122:
  1065   000A58  BE81               	btfsc	3969,7,c	;volatile
  1066   000A5A  EF31  F005         	goto	u171
  1067   000A5E  EF33  F005         	goto	u170
  1068   000A62                     u171:
  1069   000A62  EF36  F005         	goto	l121
  1070   000A66                     u170:
  1071   000A66                     
  1072                           ;passwordblink.c: 168:     {;passwordblink.c: 169:         return 'B';
  1073   000A66  0E42               	movlw	66
  1074   000A68  EF62  F005         	goto	l104
  1075   000A6C                     l121:
  1076   000A6C                     
  1077                           ;passwordblink.c: 171:     PORTB=0X07;
  1078   000A6C  0E07               	movlw	7
  1079   000A6E  6E81               	movwf	129,c	;volatile
  1080   000A70                     
  1081                           ;passwordblink.c: 172:     if(RB4==0)
  1082   000A70  B881               	btfsc	3969,4,c	;volatile
  1083   000A72  EF3D  F005         	goto	u181
  1084   000A76  EF3F  F005         	goto	u180
  1085   000A7A                     u181:
  1086   000A7A  EF42  F005         	goto	l125
  1087   000A7E                     u180:
  1088   000A7E                     
  1089                           ;passwordblink.c: 173:     {;passwordblink.c: 174:         return 'C';
  1090   000A7E  0E43               	movlw	67
  1091   000A80  EF62  F005         	goto	l104
  1092   000A84                     l125:
  1093   000A84  BA81               	btfsc	3969,5,c	;volatile
  1094   000A86  EF47  F005         	goto	u191
  1095   000A8A  EF49  F005         	goto	u190
  1096   000A8E                     u191:
  1097   000A8E  EF4C  F005         	goto	l127
  1098   000A92                     u190:
  1099   000A92                     
  1100                           ;passwordblink.c: 177:     {;passwordblink.c: 178:         return 'D';
  1101   000A92  0E44               	movlw	68
  1102   000A94  EF62  F005         	goto	l104
  1103   000A98                     l127:
  1104   000A98  BC81               	btfsc	3969,6,c	;volatile
  1105   000A9A  EF51  F005         	goto	u201
  1106   000A9E  EF53  F005         	goto	u200
  1107   000AA2                     u201:
  1108   000AA2  EF56  F005         	goto	l129
  1109   000AA6                     u200:
  1110   000AA6                     
  1111                           ;passwordblink.c: 181:     {;passwordblink.c: 182:         return 'E';
  1112   000AA6  0E45               	movlw	69
  1113   000AA8  EF62  F005         	goto	l104
  1114   000AAC                     l129:
  1115   000AAC  BE81               	btfsc	3969,7,c	;volatile
  1116   000AAE  EF5B  F005         	goto	u211
  1117   000AB2  EF5D  F005         	goto	u210
  1118   000AB6                     u211:
  1119   000AB6  EF60  F005         	goto	l126
  1120   000ABA                     u210:
  1121   000ABA                     
  1122                           ;passwordblink.c: 185:     {;passwordblink.c: 186:         return 'F';
  1123   000ABA  0E46               	movlw	70
  1124   000ABC  EF62  F005         	goto	l104
  1125   000AC0                     l126:
  1126   000AC0  EFB8  F004         	goto	l102
  1127   000AC4                     l104:
  1128   000AC4  0012               	return		;funcret
  1129   000AC6                     __end_of_keypad:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _display *****************
  1133 ;; Defined at:
  1134 ;;		line 107 in file "passwordblink.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  p               1    5[COMRAM] PTR const unsigned char 
  1137 ;;		 -> STR_3(15), STR_2(17), STR_1(15), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         1       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         1       0       0       0       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 1
  1156 ;; This function calls:
  1157 ;;		_data
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text3
  1164   000C14                     __ptext3:
  1165                           	callstack 0
  1166   000C14                     _display:
  1167                           	callstack 29
  1168   000C14                     
  1169                           ;passwordblink.c: 107: void display(const char *p);passwordblink.c: 108: {;passwordblink
      +                          .c: 109:     while(*p)
  1170   000C14  EF13  F006         	goto	l1155
  1171   000C18                     l1151:
  1172                           
  1173                           ;passwordblink.c: 110:     {;passwordblink.c: 111:         data(*p);
  1174   000C18  C006  FFF6         	movff	display@p,tblptrl
  1175   000C1C                     	if	0	;There is only one active tblptr byte
  1176   000C1C                     	endif
  1177   000C1C                     	if	0	;tblptru may be non-zero
  1178   000C1C                     	endif
  1179   000C1C                     	if	0	;tblptru may be non-zero
  1180   000C1C                     	endif
  1181   000C1C  0008               	tblrd		*
  1182   000C1E  50F5               	movf	tablat,w,c
  1183   000C20  EC63  F005         	call	_data
  1184   000C24                     
  1185                           ;passwordblink.c: 112:         p++;
  1186   000C24  2A06               	incf	display@p^0,f,c
  1187   000C26                     l1155:
  1188                           
  1189                           ;passwordblink.c: 109:     while(*p)
  1190   000C26  C006  FFF6         	movff	display@p,tblptrl
  1191   000C2A                     	if	0	;There is only one active tblptr byte
  1192   000C2A                     	endif
  1193   000C2A                     	if	0	;tblptru may be non-zero
  1194   000C2A                     	endif
  1195   000C2A                     	if	0	;tblptru may be non-zero
  1196   000C2A                     	endif
  1197   000C2A  0008               	tblrd		*
  1198   000C2C  50F5               	movf	tablat,w,c
  1199   000C2E  0900               	iorlw	0
  1200   000C30  A4D8               	btfss	status,2,c
  1201   000C32  EF1D  F006         	goto	u411
  1202   000C36  EF1F  F006         	goto	u410
  1203   000C3A                     u411:
  1204   000C3A  EF0C  F006         	goto	l1151
  1205   000C3E                     u410:
  1206   000C3E  0012               	return		;funcret
  1207   000C40                     __end_of_display:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _data *****************
  1211 ;; Defined at:
  1212 ;;		line 97 in file "passwordblink.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  a               1    wreg     unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  a               1    0[COMRAM] unsigned char 
  1217 ;;  i               2    3[COMRAM] int 
  1218 ;;  i               2    1[COMRAM] int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         0       0       0       0       0       0       0
  1229 ;;      Locals:         5       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0
  1231 ;;      Totals:         5       0       0       0       0       0       0
  1232 ;;Total ram usage:        5 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;;		_display
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text4
  1243   000AC6                     __ptext4:
  1244                           	callstack 0
  1245   000AC6                     _data:
  1246                           	callstack 29
  1247                           
  1248                           ;incstack = 0
  1249                           ;data@a stored from wreg
  1250   000AC6  6E01               	movwf	data@a^0,c
  1251   000AC8                     
  1252                           ;passwordblink.c: 97: void data(unsigned char a);passwordblink.c: 98: {;passwordblink.c:
      +                           99:     RC0=1;
  1253   000AC8  8082               	bsf	3970,0,c	;volatile
  1254                           
  1255                           ;passwordblink.c: 100:      RC1=0;
  1256   000ACA  9282               	bcf	3970,1,c	;volatile
  1257   000ACC                     
  1258                           ;passwordblink.c: 101:      PORTD=a;
  1259   000ACC  C001  FF83         	movff	data@a,3971	;volatile
  1260   000AD0                     
  1261                           ;passwordblink.c: 102:     RC2=1;
  1262   000AD0  8482               	bsf	3970,2,c	;volatile
  1263   000AD2                     
  1264                           ;passwordblink.c: 103:     for(int i=0;i<=100;i++);
  1265   000AD2  0E00               	movlw	0
  1266   000AD4  6E03               	movwf	(data@i+1)^0,c
  1267   000AD6  0E00               	movlw	0
  1268   000AD8  6E02               	movwf	data@i^0,c
  1269   000ADA                     l829:
  1270   000ADA  4A02               	infsnz	data@i^0,f,c
  1271   000ADC  2A03               	incf	(data@i+1)^0,f,c
  1272   000ADE  BE03               	btfsc	(data@i+1)^0,7,c
  1273   000AE0  EF7B  F005         	goto	u11
  1274   000AE4  5003               	movf	(data@i+1)^0,w,c
  1275   000AE6  E109               	bnz	u10
  1276   000AE8  0E65               	movlw	101
  1277   000AEA  5C02               	subwf	data@i^0,w,c
  1278   000AEC  A0D8               	btfss	status,0,c
  1279   000AEE  EF7B  F005         	goto	u11
  1280   000AF2  EF7D  F005         	goto	u10
  1281   000AF6                     u11:
  1282   000AF6  EF6D  F005         	goto	l829
  1283   000AFA                     u10:
  1284   000AFA                     
  1285                           ;passwordblink.c: 104:     RC2=0;
  1286   000AFA  9482               	bcf	3970,2,c	;volatile
  1287   000AFC                     
  1288                           ;passwordblink.c: 105:     for(int i=0;i<=10000;i++);
  1289   000AFC  0E00               	movlw	0
  1290   000AFE  6E05               	movwf	(data@i_91+1)^0,c
  1291   000B00  0E00               	movlw	0
  1292   000B02  6E04               	movwf	data@i_91^0,c
  1293   000B04                     l839:
  1294   000B04  4A04               	infsnz	data@i_91^0,f,c
  1295   000B06  2A05               	incf	(data@i_91+1)^0,f,c
  1296   000B08  BE05               	btfsc	(data@i_91+1)^0,7,c
  1297   000B0A  EF90  F005         	goto	u21
  1298   000B0E  0E11               	movlw	17
  1299   000B10  5C04               	subwf	data@i_91^0,w,c
  1300   000B12  0E27               	movlw	39
  1301   000B14  5805               	subwfb	(data@i_91+1)^0,w,c
  1302   000B16  A0D8               	btfss	status,0,c
  1303   000B18  EF90  F005         	goto	u21
  1304   000B1C  EF92  F005         	goto	u20
  1305   000B20                     u21:
  1306   000B20  EF82  F005         	goto	l839
  1307   000B24                     u20:
  1308   000B24  0012               	return		;funcret
  1309   000B26                     __end_of_data:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _cmd *****************
  1313 ;; Defined at:
  1314 ;;		line 88 in file "passwordblink.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  a               1    wreg     unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  a               1    0[COMRAM] unsigned char 
  1319 ;;  i               2    3[COMRAM] int 
  1320 ;;  i               2    1[COMRAM] int 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1330 ;;      Params:         0       0       0       0       0       0       0
  1331 ;;      Locals:         5       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0
  1333 ;;      Totals:         5       0       0       0       0       0       0
  1334 ;;Total ram usage:        5 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344   000B26                     __ptext5:
  1345                           	callstack 0
  1346   000B26                     _cmd:
  1347                           	callstack 30
  1348                           
  1349                           ;incstack = 0
  1350                           ;cmd@a stored from wreg
  1351   000B26  6E01               	movwf	cmd@a^0,c
  1352   000B28                     
  1353                           ;passwordblink.c: 88: void cmd(unsigned char a);passwordblink.c: 89: {;passwordblink.c: 
      +                          90:      RC0=RC1=0;
  1354   000B28  9282               	bcf	3970,1,c	;volatile
  1355   000B2A  9082               	bcf	3970,0,c	;volatile
  1356   000B2C                     
  1357                           ;passwordblink.c: 91:     PORTD=a;
  1358   000B2C  C001  FF83         	movff	cmd@a,3971	;volatile
  1359   000B30                     
  1360                           ;passwordblink.c: 92:     RC2=1;
  1361   000B30  8482               	bsf	3970,2,c	;volatile
  1362   000B32                     
  1363                           ;passwordblink.c: 93:     for(int i=0;i<=100;i++);
  1364   000B32  0E00               	movlw	0
  1365   000B34  6E03               	movwf	(cmd@i+1)^0,c
  1366   000B36  0E00               	movlw	0
  1367   000B38  6E02               	movwf	cmd@i^0,c
  1368   000B3A                     l855:
  1369   000B3A  4A02               	infsnz	cmd@i^0,f,c
  1370   000B3C  2A03               	incf	(cmd@i+1)^0,f,c
  1371   000B3E  BE03               	btfsc	(cmd@i+1)^0,7,c
  1372   000B40  EFAB  F005         	goto	u31
  1373   000B44  5003               	movf	(cmd@i+1)^0,w,c
  1374   000B46  E109               	bnz	u30
  1375   000B48  0E65               	movlw	101
  1376   000B4A  5C02               	subwf	cmd@i^0,w,c
  1377   000B4C  A0D8               	btfss	status,0,c
  1378   000B4E  EFAB  F005         	goto	u31
  1379   000B52  EFAD  F005         	goto	u30
  1380   000B56                     u31:
  1381   000B56  EF9D  F005         	goto	l855
  1382   000B5A                     u30:
  1383   000B5A                     
  1384                           ;passwordblink.c: 94:     RC2=0;
  1385   000B5A  9482               	bcf	3970,2,c	;volatile
  1386   000B5C                     
  1387                           ;passwordblink.c: 95:      for(int i=0;i<=10000;i++);
  1388   000B5C  0E00               	movlw	0
  1389   000B5E  6E05               	movwf	(cmd@i_87+1)^0,c
  1390   000B60  0E00               	movlw	0
  1391   000B62  6E04               	movwf	cmd@i_87^0,c
  1392   000B64                     l865:
  1393   000B64  4A04               	infsnz	cmd@i_87^0,f,c
  1394   000B66  2A05               	incf	(cmd@i_87+1)^0,f,c
  1395   000B68  BE05               	btfsc	(cmd@i_87+1)^0,7,c
  1396   000B6A  EFC0  F005         	goto	u41
  1397   000B6E  0E11               	movlw	17
  1398   000B70  5C04               	subwf	cmd@i_87^0,w,c
  1399   000B72  0E27               	movlw	39
  1400   000B74  5805               	subwfb	(cmd@i_87+1)^0,w,c
  1401   000B76  A0D8               	btfss	status,0,c
  1402   000B78  EFC0  F005         	goto	u41
  1403   000B7C  EFC2  F005         	goto	u40
  1404   000B80                     u41:
  1405   000B80  EFB2  F005         	goto	l865
  1406   000B84                     u40:
  1407   000B84  0012               	return		;funcret
  1408   000B86                     __end_of_cmd:
  1409                           	callstack 0
  1410                           
  1411                           	psect	rparam
  1412   000000                     tosu	equ	0xFFF
  1413                           tosh	equ	0xFFE
  1414                           tosl	equ	0xFFD
  1415                           stkptr	equ	0xFFC
  1416                           pclatu	equ	0xFFB
  1417                           pclath	equ	0xFFA
  1418                           pcl	equ	0xFF9
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           prodh	equ	0xFF4
  1424                           prodl	equ	0xFF3
  1425                           indf0	equ	0xFEF
  1426                           postinc0	equ	0xFEE
  1427                           postdec0	equ	0xFED
  1428                           preinc0	equ	0xFEC
  1429                           plusw0	equ	0xFEB
  1430                           fsr0h	equ	0xFEA
  1431                           fsr0l	equ	0xFE9
  1432                           wreg	equ	0xFE8
  1433                           indf1	equ	0xFE7
  1434                           postinc1	equ	0xFE6
  1435                           postdec1	equ	0xFE5
  1436                           preinc1	equ	0xFE4
  1437                           plusw1	equ	0xFE3
  1438                           fsr1h	equ	0xFE2
  1439                           fsr1l	equ	0xFE1
  1440                           bsr	equ	0xFE0
  1441                           indf2	equ	0xFDF
  1442                           postinc2	equ	0xFDE
  1443                           postdec2	equ	0xFDD
  1444                           preinc2	equ	0xFDC
  1445                           plusw2	equ	0xFDB
  1446                           fsr2h	equ	0xFDA
  1447                           fsr2l	equ	0xFD9
  1448                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[17]), STR_3(CODE[15]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    1268
                                              6 COMRAM    32    32      0
                                _cmd
                               _data
                            _display
                             _keypad
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     348
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data
   _display
     _data
   _keypad
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      31       1       51.6%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      20        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 09:55:37 2024

                     l50 068E                       l90 0AFA                       l83 0B5A  
                     l93 0B24                       l86 0B84                       l99 0C3E  
                     u10 0AFA                       u11 0AF6                       u20 0B24  
                     u21 0B20                       u30 0B5A                       u31 0B56  
                     u40 0B84                       u41 0B80                       u60 0982  
                     u61 097E                       u70 0996                       u71 0992  
                     u80 09AA                       u81 09A6                       u90 09BE  
                     u91 09BA                      l102 0970                      l111 09DC  
                    l103 0988                      l120 0A44                      l104 0AC4  
                    l121 0A6C                      l113 09F0                      l122 0A58  
                    l114 0A18                      l106 099C                      l115 0A04  
                    l107 09C4                      l108 09B0                      l125 0A84  
                    l126 0AC0                      l118 0A30                      l127 0A98  
                    l129 0AAC                      l821 0AD0                      l831 0ADE  
                    l823 0AD2                      l903 09C4                      l815 0BE2  
                    l841 0B08                      l833 0AFC                      l817 0AC8  
                    l913 09EA                      l905 09C8                      l843 0B28  
                    l819 0ACC                      l931 0A1C                      l907 09D6  
                    l845 0B2C                      l829 0ADA                      l933 0A2A  
                    l925 0A12                      l855 0B3A                      l847 0B30  
                    l839 0B04                      l951 0A66                      l919 09FE  
                    l865 0B64                      l857 0B3E                      l849 0B32  
                    l945 0A52                      l929 0A18                      l881 0982  
                    l867 0B68                      l859 0B5C                      l971 0AA6  
                    l955 0A6C                      l939 0A3E                      l965 0A92  
                    l957 0A70                      l893 09AA                      l877 0970  
                    l959 0A7E                      l887 0996                      l879 0974  
                    l977 0ABA                      l899 09BE                      _RC0 7C10  
                    _RC1 7C11                      _RB4 7C0C                      _RC2 7C12  
                    _RB5 7C0D                      _RB6 7C0E                      _RB7 7C0F  
                    u100 09D6                      u101 09D2                      u110 09EA  
                    u111 09E6                      u200 0AA6                      u120 09FE  
                    u201 0AA2                      u121 09FA                      u210 0ABA  
                    u130 0A12                      u211 0AB6                      u131 0A0E  
                    u140 0A2A                      u141 0A26                      u150 0A3E  
                    u151 0A3A                      u160 0A52                      u161 0A4E  
                    u410 0C3E                      u170 0A66                      u411 0C3A  
                    u171 0A62                      u180 0A7E                      u420 0BAC  
                    u500 0736                      u181 0A7A                      u421 0BA8  
                    u501 0732                      u190 0A92                      u430 0BC2  
                    u510 077A                      u191 0A8E                      u431 0BBE  
                    u511 0776                      u600 0968                      u520 07BE  
                    u440 069C                      u601 0964                      u521 07BA  
                    u441 0698                      u530 07DE                      u450 06AA  
                    u531 07DA                      u451 06A6                      u540 081E  
                    u460 06B8                      u541 081A                      u461 06B4  
                    u550 0870                      u470 06C6                      u551 086C  
                    u471 06C2                      u560 08B4                      u480 06D8  
                    u561 08B0                      u481 06D4                      u570 08E2  
                    u490 06F6                      u571 08DE                      u491 06F2  
                    u580 0902                      u581 08FE                      u590 0942  
                    u591 093E                      _cmd 0B26                      _inp 0027  
                   l1201 06C8                     l1211 0706                     l1203 06D8  
                   l1213 0736                     l1205 06F6                     l1151 0C18  
                   l1311 0902                     l1303 08C2                     l1231 075A  
                   l1223 074C                     l1215 073C                     l1153 0C24  
                   l1161 0B8E                     l1321 0948                     l1305 08C6  
                   l1233 075E                     l1225 0752                     l1217 0744  
                   l1155 0C26                     l1163 0BAC                     l1323 094C  
                   l1307 08E2                     l1243 0790                     l1235 077A  
                   l1171 0642                     l1149 0C14                     l1165 0BC2  
                   l1157 0B86                     l1317 0912                     l1309 08E6  
                   l1245 07BE                     l1237 0780                     l1181 0660  
                   l1173 0648                     l1159 0B8A                     l1319 0942  
                   l1271 0840                     l1263 082A                     l1255 07EE  
                   l1247 07C2                     l1191 0672                     l1183 0668  
                   l1175 064E                     l1273 0870                     l1265 0830  
                   l1249 07DE                     l1257 0822                     l1193 069C  
                   l1185 066E                     l1177 0654                     l1169 0632  
                   ?_cmd 0001                     l1291 0894                     l1283 0886  
                   l1275 0876                     l1195 06AA                     l1179 065A  
                   l1293 0898                     l1285 088C                     l1277 087E  
                   l1197 06B8                     l1295 08B4                     l1199 06C6  
                   l1297 08BA                     STR_1 0612                     STR_2 0601  
                   STR_3 0621                     _data 0AC6                     cmd@a 0001  
                   cmd@i 0002                     _main 0632                     _pass 002C  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTB 0F81                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
        __end_of_display 0C40                    data@a 0001                    data@i 0002  
                  _index 0031                    main@i 0007                    tablat 0FF5  
                  status 0FD8          __initialization 0BE4             __end_of_data 0B26  
           __end_of_main 0970                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   _ADCON1 0FC1                   _keypad 0970  
                 isa$std 0001                   _strcmp 0B86                ??_display 0007  
           __pdataCOMRAM 0027             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0C06            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?_keypad 0001                  ?_strcmp 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0BE4  
                __ramtop 0600                  __ptext0 0632                  __ptext1 0B86  
                __ptext2 0970                  __ptext3 0C14                  __ptext4 0AC6  
                __ptext5 0B26                  cmd@i_87 0004                  _display 0C14  
   end_of_initialization 0C06                  postdec1 0FE5                  postinc0 0FEE  
                postinc1 0FE6                  postinc2 0FDE                  strcmp@l 0001  
                strcmp@r 0002            __pidataCOMRAM 0C40           __end_of_keypad 0AC6  
         __end_of_strcmp 0BE4      start_initialization 0BE4              __end_of_cmd 0B86  
               ??_keypad 0001                 ??_strcmp 0003              __pbssCOMRAM 0031  
               ?_display 0006              __smallconst 0600                copy_data0 0BF8  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               data@i_91 0004                 isa$xinst 0000                 main@i_80 0021  
               main@i_81 0023                 main@i_73 001B                 main@i_82 0025  
               main@i_74 001D                 main@i_83 0017                 main@i_75 000B  
               main@i_76 000F                 main@i_77 001F                 main@i_78 0013  
               display@p 0006  
