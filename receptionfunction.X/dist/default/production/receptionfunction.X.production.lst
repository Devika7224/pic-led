

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 09:29:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _TRISC	set	3988
    52   000000                     _RC0	set	31760
    53   000000                     _RCSTA	set	4011
    54   000000                     _TXSTA	set	4012
    55   000000                     _TRISD	set	3989
    56   000000                     _RCIF	set	31989
    57   000000                     _RCREG	set	4014
    58   000000                     _SPBRG	set	4015
    59   000000                     _BAUDCON	set	4024
    60   000000                     _PORTD	set	3971
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65   00071C                     __pcinit:
    66                           	callstack 0
    67   00071C                     start_initialization:
    68                           	callstack 0
    69   00071C                     __initialization:
    70                           	callstack 0
    71   00071C                     end_of_initialization:
    72                           	callstack 0
    73   00071C                     __end_of__initialization:
    74                           	callstack 0
    75   00071C  0100               	movlb	0
    76   00071E  EF61  F003         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79   000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81   000001                     cmd@a:
    82                           	callstack 0
    83   000001                     data@a:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0x0
    87   000001                     	ds	1
    88   000002                     cmd@i:
    89                           	callstack 0
    90   000002                     data@i:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x1
    94   000002                     	ds	2
    95   000004                     cmd@i_59:
    96                           	callstack 0
    97   000004                     data@i_63:
    98                           	callstack 0
    99                           
   100                           ; 2 bytes @ 0x3
   101   000004                     	ds	2
   102   000006                     
   103                           ; 1 bytes @ 0x5
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 13 in file "reception.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   123 ;;      Params:         0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0
   126 ;;      Totals:         0       0       0       0       0       0       0
   127 ;;Total ram usage:        0 bytes
   128 ;; Hardware stack levels required when called: 2
   129 ;; This function calls:
   130 ;;		_cmd
   131 ;;		_reception
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138   0006C2                     __ptext0:
   139                           	callstack 0
   140   0006C2                     _main:
   141                           	callstack 29
   142   0006C2                     
   143                           ;reception.c: 15:     TRISC=0X80;
   144   0006C2  0E80               	movlw	128
   145   0006C4  6E94               	movwf	148,c	;volatile
   146                           
   147                           ;reception.c: 16:     TRISD=0X00;
   148   0006C6  0E00               	movlw	0
   149   0006C8  6E95               	movwf	149,c	;volatile
   150                           
   151                           ;reception.c: 18:     TXSTA =0X24;
   152   0006CA  0E24               	movlw	36
   153   0006CC  6EAC               	movwf	172,c	;volatile
   154                           
   155                           ;reception.c: 19:     RCSTA =0X90;
   156   0006CE  0E90               	movlw	144
   157   0006D0  6EAB               	movwf	171,c	;volatile
   158                           
   159                           ;reception.c: 20:     SPBRG=129;
   160   0006D2  0E81               	movlw	129
   161   0006D4  6EAF               	movwf	175,c	;volatile
   162                           
   163                           ;reception.c: 21:     BAUDCON=0X00;
   164   0006D6  0E00               	movlw	0
   165   0006D8  6EB8               	movwf	184,c	;volatile
   166   0006DA                     
   167                           ;reception.c: 23:     cmd(0X01);
   168   0006DA  0E01               	movlw	1
   169   0006DC  EC31  F003         	call	_cmd
   170   0006E0                     
   171                           ;reception.c: 24:     cmd(0X0F);
   172   0006E0  0E0F               	movlw	15
   173   0006E2  EC31  F003         	call	_cmd
   174   0006E6                     
   175                           ;reception.c: 25:     cmd(0X38);
   176   0006E6  0E38               	movlw	56
   177   0006E8  EC31  F003         	call	_cmd
   178   0006EC                     
   179                           ;reception.c: 26:     cmd(0X06);
   180   0006EC  0E06               	movlw	6
   181   0006EE  EC31  F003         	call	_cmd
   182   0006F2                     
   183                           ;reception.c: 27:     cmd(0X80);
   184   0006F2  0E80               	movlw	128
   185   0006F4  EC31  F003         	call	_cmd
   186   0006F8                     l808:
   187                           
   188                           ;reception.c: 29:     {;reception.c: 30:     reception();
   189   0006F8  EC82  F003         	call	_reception	;wreg free
   190   0006FC  EF7C  F003         	goto	l808
   191   000700  EF00  F000         	goto	start
   192   000704                     __end_of_main:
   193                           	callstack 0
   194                           
   195 ;; *************** function _reception *****************
   196 ;; Defined at:
   197 ;;		line 35 in file "reception.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   211 ;;      Params:         0       0       0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0
   213 ;;      Temps:          0       0       0       0       0       0       0
   214 ;;      Totals:         0       0       0       0       0       0       0
   215 ;;Total ram usage:        0 bytes
   216 ;; Hardware stack levels used: 1
   217 ;; Hardware stack levels required when called: 1
   218 ;; This function calls:
   219 ;;		_data
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226   000704                     __ptext1:
   227                           	callstack 0
   228   000704                     _reception:
   229                           	callstack 29
   230   000704                     l41:
   231   000704  AA9E               	btfss	3998,5,c	;volatile
   232   000706  EF87  F003         	goto	u51
   233   00070A  EF89  F003         	goto	u50
   234   00070E                     u51:
   235   00070E  EF82  F003         	goto	l41
   236   000712                     u50:
   237   000712                     
   238                           ;reception.c: 39: RCIF=0;
   239   000712  9A9E               	bcf	3998,5,c	;volatile
   240   000714                     
   241                           ;reception.c: 40: data(RCREG);
   242   000714  50AE               	movf	174,w,c	;volatile
   243   000716  EC01  F003         	call	_data
   244   00071A  0012               	return		;funcret
   245   00071C                     __end_of_reception:
   246                           	callstack 0
   247                           
   248 ;; *************** function _data *****************
   249 ;; Defined at:
   250 ;;		line 53 in file "reception.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;  a               1    wreg     unsigned char 
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  a               1    0[COMRAM] unsigned char 
   255 ;;  i               2    3[COMRAM] int 
   256 ;;  i               2    1[COMRAM] int 
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         5       0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0
   269 ;;      Totals:         5       0       0       0       0       0       0
   270 ;;Total ram usage:        5 bytes
   271 ;; Hardware stack levels used: 1
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		_reception
   276 ;;		_display
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text2
   281   000602                     __ptext2:
   282                           	callstack 0
   283   000602                     _data:
   284                           	callstack 29
   285                           
   286                           ;incstack = 0
   287                           ;data@a stored from wreg
   288   000602  6E01               	movwf	data@a^0,c
   289   000604                     
   290                           ;reception.c: 53: void data(unsigned char a );reception.c: 54: {;reception.c: 55:     RC
      +                          0=1;
   291   000604  8082               	bsf	3970,0,c	;volatile
   292                           
   293                           ;reception.c: 56:     RC1=0;
   294   000606  9282               	bcf	3970,1,c	;volatile
   295   000608                     
   296                           ;reception.c: 57:     PORTD=a;
   297   000608  C001  FF83         	movff	data@a,3971	;volatile
   298   00060C                     
   299                           ;reception.c: 58:     RC2=1;
   300   00060C  8482               	bsf	3970,2,c	;volatile
   301   00060E                     
   302                           ;reception.c: 59:     for(int i=0;i<=100;i++);
   303   00060E  0E00               	movlw	0
   304   000610  6E03               	movwf	(data@i+1)^0,c
   305   000612  0E00               	movlw	0
   306   000614  6E02               	movwf	data@i^0,c
   307   000616                     l752:
   308   000616  4A02               	infsnz	data@i^0,f,c
   309   000618  2A03               	incf	(data@i+1)^0,f,c
   310   00061A  BE03               	btfsc	(data@i+1)^0,7,c
   311   00061C  EF19  F003         	goto	u11
   312   000620  5003               	movf	(data@i+1)^0,w,c
   313   000622  E109               	bnz	u10
   314   000624  0E65               	movlw	101
   315   000626  5C02               	subwf	data@i^0,w,c
   316   000628  A0D8               	btfss	status,0,c
   317   00062A  EF19  F003         	goto	u11
   318   00062E  EF1B  F003         	goto	u10
   319   000632                     u11:
   320   000632  EF0B  F003         	goto	l752
   321   000636                     u10:
   322   000636                     
   323                           ;reception.c: 60:     RC2=0;
   324   000636  9482               	bcf	3970,2,c	;volatile
   325   000638                     
   326                           ;reception.c: 61:     for(int i=0;i<=5000;i++);
   327   000638  0E00               	movlw	0
   328   00063A  6E05               	movwf	(data@i_63+1)^0,c
   329   00063C  0E00               	movlw	0
   330   00063E  6E04               	movwf	data@i_63^0,c
   331   000640                     l762:
   332   000640  4A04               	infsnz	data@i_63^0,f,c
   333   000642  2A05               	incf	(data@i_63+1)^0,f,c
   334   000644  BE05               	btfsc	(data@i_63+1)^0,7,c
   335   000646  EF2E  F003         	goto	u21
   336   00064A  0E89               	movlw	137
   337   00064C  5C04               	subwf	data@i_63^0,w,c
   338   00064E  0E13               	movlw	19
   339   000650  5805               	subwfb	(data@i_63+1)^0,w,c
   340   000652  A0D8               	btfss	status,0,c
   341   000654  EF2E  F003         	goto	u21
   342   000658  EF30  F003         	goto	u20
   343   00065C                     u21:
   344   00065C  EF20  F003         	goto	l762
   345   000660                     u20:
   346   000660  0012               	return		;funcret
   347   000662                     __end_of_data:
   348                           	callstack 0
   349                           
   350 ;; *************** function _cmd *****************
   351 ;; Defined at:
   352 ;;		line 43 in file "reception.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;  a               1    wreg     unsigned char 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  a               1    0[COMRAM] unsigned char 
   357 ;;  i               2    3[COMRAM] int 
   358 ;;  i               2    1[COMRAM] int 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, status,2, status,0
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   368 ;;      Params:         0       0       0       0       0       0       0
   369 ;;      Locals:         5       0       0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0
   371 ;;      Totals:         5       0       0       0       0       0       0
   372 ;;Total ram usage:        5 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text3
   382   000662                     __ptext3:
   383                           	callstack 0
   384   000662                     _cmd:
   385                           	callstack 30
   386                           
   387                           ;incstack = 0
   388                           ;cmd@a stored from wreg
   389   000662  6E01               	movwf	cmd@a^0,c
   390   000664                     
   391                           ;reception.c: 43:  void cmd(unsigned char a );reception.c: 44: {;reception.c: 45:     RC
      +                          0=0;
   392   000664  9082               	bcf	3970,0,c	;volatile
   393                           
   394                           ;reception.c: 46:     RC1=0;
   395   000666  9282               	bcf	3970,1,c	;volatile
   396   000668                     
   397                           ;reception.c: 47:     PORTD=a;
   398   000668  C001  FF83         	movff	cmd@a,3971	;volatile
   399   00066C                     
   400                           ;reception.c: 48:     RC2=1;
   401   00066C  8482               	bsf	3970,2,c	;volatile
   402   00066E                     
   403                           ;reception.c: 49:     for(int i=0;i<=100;i++);
   404   00066E  0E00               	movlw	0
   405   000670  6E03               	movwf	(cmd@i+1)^0,c
   406   000672  0E00               	movlw	0
   407   000674  6E02               	movwf	cmd@i^0,c
   408   000676                     l778:
   409   000676  4A02               	infsnz	cmd@i^0,f,c
   410   000678  2A03               	incf	(cmd@i+1)^0,f,c
   411   00067A  BE03               	btfsc	(cmd@i+1)^0,7,c
   412   00067C  EF49  F003         	goto	u31
   413   000680  5003               	movf	(cmd@i+1)^0,w,c
   414   000682  E109               	bnz	u30
   415   000684  0E65               	movlw	101
   416   000686  5C02               	subwf	cmd@i^0,w,c
   417   000688  A0D8               	btfss	status,0,c
   418   00068A  EF49  F003         	goto	u31
   419   00068E  EF4B  F003         	goto	u30
   420   000692                     u31:
   421   000692  EF3B  F003         	goto	l778
   422   000696                     u30:
   423   000696                     
   424                           ;reception.c: 50:     RC2=0;
   425   000696  9482               	bcf	3970,2,c	;volatile
   426   000698                     
   427                           ;reception.c: 51:     for(int i=0;i<=5000;i++);
   428   000698  0E00               	movlw	0
   429   00069A  6E05               	movwf	(cmd@i_59+1)^0,c
   430   00069C  0E00               	movlw	0
   431   00069E  6E04               	movwf	cmd@i_59^0,c
   432   0006A0                     l788:
   433   0006A0  4A04               	infsnz	cmd@i_59^0,f,c
   434   0006A2  2A05               	incf	(cmd@i_59+1)^0,f,c
   435   0006A4  BE05               	btfsc	(cmd@i_59+1)^0,7,c
   436   0006A6  EF5E  F003         	goto	u41
   437   0006AA  0E89               	movlw	137
   438   0006AC  5C04               	subwf	cmd@i_59^0,w,c
   439   0006AE  0E13               	movlw	19
   440   0006B0  5805               	subwfb	(cmd@i_59+1)^0,w,c
   441   0006B2  A0D8               	btfss	status,0,c
   442   0006B4  EF5E  F003         	goto	u41
   443   0006B8  EF60  F003         	goto	u40
   444   0006BC                     u41:
   445   0006BC  EF50  F003         	goto	l788
   446   0006C0                     u40:
   447   0006C0  0012               	return		;funcret
   448   0006C2                     __end_of_cmd:
   449                           	callstack 0
   450                           
   451                           	psect	smallconst
   452   000600                     __psmallconst:
   453                           	callstack 0
   454   000600  00                 	db	0
   455   000601  00                 	db	0	; dummy byte at the end
   456   000000                     
   457                           	psect	rparam
   458   000000                     tosu	equ	0xFFF
   459                           tosh	equ	0xFFE
   460                           tosl	equ	0xFFD
   461                           stkptr	equ	0xFFC
   462                           pclatu	equ	0xFFB
   463                           pclath	equ	0xFFA
   464                           pcl	equ	0xFF9
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           prodh	equ	0xFF4
   470                           prodl	equ	0xFF3
   471                           indf0	equ	0xFEF
   472                           postinc0	equ	0xFEE
   473                           postdec0	equ	0xFED
   474                           preinc0	equ	0xFEC
   475                           plusw0	equ	0xFEB
   476                           fsr0h	equ	0xFEA
   477                           fsr0l	equ	0xFE9
   478                           wreg	equ	0xFE8
   479                           indf1	equ	0xFE7
   480                           postinc1	equ	0xFE6
   481                           postdec1	equ	0xFE5
   482                           preinc1	equ	0xFE4
   483                           plusw1	equ	0xFE3
   484                           fsr1h	equ	0xFE2
   485                           fsr1l	equ	0xFE1
   486                           bsr	equ	0xFE0
   487                           indf2	equ	0xFDF
   488                           postinc2	equ	0xFDE
   489                           postdec2	equ	0xFDD
   490                           preinc2	equ	0xFDC
   491                           plusw2	equ	0xFDB
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cmd
    _reception->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _cmd
                          _reception
 ---------------------------------------------------------------------------------
 (1) _reception                                            0     0      0      75
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _reception
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhhh       47      0       0      16        0.0%
BITBIGSFRhhhl        8      0       0      17        0.0%
BITBIGSFRhhl         1      0       0      18        0.0%
BITBIGSFRhlh         C      0       0      19        0.0%
BITBIGSFRhll         8      0       0      20        0.0%
BITBIGSFRlh         10      0       0      21        0.0%
BITBIGSFRll        282      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             5FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 09:29:34 2024

                     l41 0704                       l51 06C0                       l43 0712  
                     l44 071A                       l55 0636                       l48 0696  
                     l58 0660                       u10 0636                       u11 0632  
                     u20 0660                       u21 065C                       u30 0696  
                     u31 0692                       u40 06C0                       u41 06BC  
                     u50 0712                       u51 070E                      l800 06E0  
                    l802 06E6                      l740 0604                      l804 06EC  
                    l742 0608                      l806 06F2                      l752 0616  
                    l744 060C                      l808 06F8                      l770 066C  
                    l762 0640                      l754 061A                      l746 060E  
                    l780 067A                      l772 066E                      l764 0644  
                    l756 0638                      l790 06A4                      l782 0698  
                    l766 0664                      l768 0668                      l792 0704  
                    l778 0676                      l794 0714                      l788 06A0  
                    l796 06C2                      l798 06DA                      _RC0 7C10  
                    _RC1 7C11                      _RC2 7C12                      _cmd 0662  
                   ?_cmd 0001                     _RCIF 7CF5                     _data 0602  
                   cmd@a 0001                     cmd@i 0002                     _main 06C2  
                   start 0000             ___param_bank 0000                    ??_cmd 0001  
                  ?_data 0001                    ?_main 0001                    _RCREG 0FAE  
                  _RCSTA 0FAB                    _SPBRG 0FAF                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95                    _TXSTA 0FAC  
                  data@a 0001                    data@i 0002                    status 0FD8  
        __initialization 071C             __end_of_data 0662             __end_of_main 0704  
                 ??_data 0001                   ??_main 0006            __activetblptr 0000  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 071C            ___rparam_used 0001           __pcstackCOMRAM 0001  
                _BAUDCON 0FB8                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 071C                  __ramtop 0600  
                __ptext0 06C2                  __ptext1 0704                  __ptext2 0602  
                __ptext3 0662                  cmd@i_59 0004        __end_of_reception 071C  
   end_of_initialization 071C      start_initialization 071C              __end_of_cmd 06C2  
            __smallconst 0600                _reception 0704               ?_reception 0001  
               __Hrparam 0000                 __Lrparam 0000                 data@i_63 0004  
               isa$xinst 0000              ??_reception 0006  
