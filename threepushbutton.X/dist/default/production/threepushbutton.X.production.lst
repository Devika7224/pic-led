

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 30 12:10:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _RC2	set	31762
    48   000000                     _RC1	set	31761
    49   000000                     _TRISC	set	3988
    50   000000                     _RC0	set	31760
    51   000000                     _TRISD	set	3989
    52   000000                     _PORTD	set	3971
    53                           
    54                           ; #config settings
    55                           
    56                           	psect	cinit
    57   0007C0                     __pcinit:
    58                           	callstack 0
    59   0007C0                     start_initialization:
    60                           	callstack 0
    61   0007C0                     __initialization:
    62                           	callstack 0
    63   0007C0                     end_of_initialization:
    64                           	callstack 0
    65   0007C0                     __end_of__initialization:
    66                           	callstack 0
    67   0007C0  0100               	movlb	0
    68   0007C2  EF01  F003         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71   000001                     __pcstackCOMRAM:
    72                           	callstack 0
    73   000001                     ?___awdiv:
    74                           	callstack 0
    75   000001                     ___awdiv@dividend:
    76                           	callstack 0
    77                           
    78                           ; 2 bytes @ 0x0
    79   000001                     	ds	2
    80   000003                     ___awdiv@divisor:
    81                           	callstack 0
    82                           
    83                           ; 2 bytes @ 0x2
    84   000003                     	ds	2
    85   000005                     ___awdiv@counter:
    86                           	callstack 0
    87                           
    88                           ; 1 bytes @ 0x4
    89   000005                     	ds	1
    90   000006                     ___awdiv@sign:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x5
    94   000006                     	ds	1
    95   000007                     ___awdiv@quotient:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x6
    99   000007                     	ds	2
   100   000009                     main@i:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x8
   104   000009                     	ds	2
   105   00000B                     main@i_38:
   106                           	callstack 0
   107                           
   108                           ; 2 bytes @ 0xA
   109   00000B                     	ds	2
   110   00000D                     main@j:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0xC
   114   00000D                     	ds	2
   115   00000F                     main@k:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0xE
   119   00000F                     	ds	2
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 11 in file "switch.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;  i               2   10[COMRAM] unsigned int 
   131 ;;  i               2    8[COMRAM] unsigned int 
   132 ;;  k               2   14[COMRAM] int 
   133 ;;  j               2   12[COMRAM] int 
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2, status,0, cstack
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   143 ;;      Params:         0       0       0       0       0       0       0
   144 ;;      Locals:         8       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0
   146 ;;      Totals:         8       0       0       0       0       0       0
   147 ;;Total ram usage:        8 bytes
   148 ;; Hardware stack levels required when called: 1
   149 ;; This function calls:
   150 ;;		___awdiv
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157   000602                     __ptext0:
   158                           	callstack 0
   159   000602                     _main:
   160                           	callstack 30
   161   000602                     
   162                           ;switch.c: 13:     TRISC=0XFF;
   163   000602  6894               	setf	148,c	;volatile
   164   000604                     
   165                           ;switch.c: 16:     TRISD=0X00;
   166   000604  0E00               	movlw	0
   167   000606  6E95               	movwf	149,c	;volatile
   168   000608                     l850:
   169                           
   170                           ;switch.c: 18:     {;switch.c: 19:         if(RC0==1)
   171   000608  A082               	btfss	3970,0,c	;volatile
   172   00060A  EF09  F003         	goto	u201
   173   00060E  EF0B  F003         	goto	u200
   174   000612                     u201:
   175   000612  EF0E  F003         	goto	l854
   176   000616                     u200:
   177   000616                     
   178                           ;switch.c: 20:         {;switch.c: 21:             PORTD=0XFF;
   179   000616  6883               	setf	131,c	;volatile
   180                           
   181                           ;switch.c: 22:         }
   182   000618  EF10  F003         	goto	l856
   183   00061C                     l854:
   184                           
   185                           ;switch.c: 24:         {;switch.c: 25:             PORTD=0X00;
   186   00061C  0E00               	movlw	0
   187   00061E  6E83               	movwf	131,c	;volatile
   188   000620                     l856:
   189                           
   190                           ;switch.c: 29:     if(RC1==1)
   191   000620  A282               	btfss	3970,1,c	;volatile
   192   000622  EF15  F003         	goto	u211
   193   000626  EF17  F003         	goto	u210
   194   00062A                     u211:
   195   00062A  EF41  F003         	goto	l20
   196   00062E                     u210:
   197   00062E                     
   198                           ;switch.c: 30:     {;switch.c: 31:         for(int j=1;j<=128;j=j*2)
   199   00062E  0E00               	movlw	0
   200   000630  6E0E               	movwf	(main@j+1)^0,c
   201   000632  0E01               	movlw	1
   202   000634  6E0D               	movwf	main@j^0,c
   203   000636                     l21:
   204                           
   205                           ;switch.c: 32:         {;switch.c: 33:             PORTD=j;
   206   000636  C00D  FF83         	movff	main@j,3971	;volatile
   207   00063A                     
   208                           ;switch.c: 34:             for(unsigned int i=0;i<55000;i++);
   209   00063A  0E00               	movlw	0
   210   00063C  6E0A               	movwf	(main@i+1)^0,c
   211   00063E  0E00               	movlw	0
   212   000640  6E09               	movwf	main@i^0,c
   213   000642                     l870:
   214   000642  4A09               	infsnz	main@i^0,f,c
   215   000644  2A0A               	incf	(main@i+1)^0,f,c
   216   000646  0ED8               	movlw	216
   217   000648  5C09               	subwf	main@i^0,w,c
   218   00064A  0ED6               	movlw	214
   219   00064C  580A               	subwfb	(main@i+1)^0,w,c
   220   00064E  A0D8               	btfss	status,0,c
   221   000650  EF2C  F003         	goto	u221
   222   000654  EF2E  F003         	goto	u220
   223   000658                     u221:
   224   000658  EF21  F003         	goto	l870
   225   00065C                     u220:
   226   00065C                     
   227                           ;switch.c: 35:         }
   228   00065C  90D8               	bcf	status,0,c
   229   00065E  340D               	rlcf	main@j^0,w,c
   230   000660  6E0D               	movwf	main@j^0,c
   231   000662  340E               	rlcf	(main@j+1)^0,w,c
   232   000664  6E0E               	movwf	(main@j+1)^0,c
   233   000666  BE0E               	btfsc	(main@j+1)^0,7,c
   234   000668  EF3F  F003         	goto	u231
   235   00066C  500E               	movf	(main@j+1)^0,w,c
   236   00066E  E109               	bnz	u230
   237   000670  0E81               	movlw	129
   238   000672  5C0D               	subwf	main@j^0,w,c
   239   000674  A0D8               	btfss	status,0,c
   240   000676  EF3F  F003         	goto	u231
   241   00067A  EF41  F003         	goto	u230
   242   00067E                     u231:
   243   00067E  EF1B  F003         	goto	l21
   244   000682                     u230:
   245   000682                     l20:
   246                           
   247                           ;switch.c: 37:         if(RC2==1)
   248   000682  A482               	btfss	3970,2,c	;volatile
   249   000684  EF46  F003         	goto	u241
   250   000688  EF48  F003         	goto	u240
   251   00068C                     u241:
   252   00068C  EF04  F003         	goto	l850
   253   000690                     u240:
   254   000690                     
   255                           ;switch.c: 38:         {;switch.c: 39:             for(int k=128;k>=1;k=k/2)
   256   000690  0E00               	movlw	0
   257   000692  6E10               	movwf	(main@k+1)^0,c
   258   000694  0E80               	movlw	128
   259   000696  6E0F               	movwf	main@k^0,c
   260   000698                     l26:
   261                           
   262                           ;switch.c: 40:             {;switch.c: 41:                 PORTD=k;
   263   000698  C00F  FF83         	movff	main@k,3971	;volatile
   264   00069C                     
   265                           ;switch.c: 42:                 for(unsigned int i=0;i<55000;i++);
   266   00069C  0E00               	movlw	0
   267   00069E  6E0C               	movwf	(main@i_38+1)^0,c
   268   0006A0  0E00               	movlw	0
   269   0006A2  6E0B               	movwf	main@i_38^0,c
   270   0006A4                     l888:
   271   0006A4  4A0B               	infsnz	main@i_38^0,f,c
   272   0006A6  2A0C               	incf	(main@i_38+1)^0,f,c
   273   0006A8  0ED8               	movlw	216
   274   0006AA  5C0B               	subwf	main@i_38^0,w,c
   275   0006AC  0ED6               	movlw	214
   276   0006AE  580C               	subwfb	(main@i_38+1)^0,w,c
   277   0006B0  A0D8               	btfss	status,0,c
   278   0006B2  EF5D  F003         	goto	u251
   279   0006B6  EF5F  F003         	goto	u250
   280   0006BA                     u251:
   281   0006BA  EF52  F003         	goto	l888
   282   0006BE                     u250:
   283   0006BE                     
   284                           ;switch.c: 43:             }
   285   0006BE  C00F  F001         	movff	main@k,___awdiv@dividend
   286   0006C2  C010  F002         	movff	main@k+1,___awdiv@dividend+1
   287   0006C6  0E00               	movlw	0
   288   0006C8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   289   0006CA  0E02               	movlw	2
   290   0006CC  6E03               	movwf	___awdiv@divisor^0,c
   291   0006CE  EC7E  F003         	call	___awdiv	;wreg free
   292   0006D2  C001  F00F         	movff	?___awdiv,main@k
   293   0006D6  C002  F010         	movff	?___awdiv+1,main@k+1
   294   0006DA  BE10               	btfsc	(main@k+1)^0,7,c
   295   0006DC  EF7A  F003         	goto	u260
   296   0006E0  5010               	movf	(main@k+1)^0,w,c
   297   0006E2  E106               	bnz	u261
   298   0006E4  040F               	decf	main@k^0,w,c
   299   0006E6  B0D8               	btfsc	status,0,c
   300   0006E8  EF78  F003         	goto	u261
   301   0006EC  EF7A  F003         	goto	u260
   302   0006F0                     u261:
   303   0006F0  EF4C  F003         	goto	l26
   304   0006F4                     u260:
   305   0006F4  EF04  F003         	goto	l850
   306   0006F8  EF00  F000         	goto	start
   307   0006FC                     __end_of_main:
   308                           	callstack 0
   309                           
   310 ;; *************** function ___awdiv *****************
   311 ;; Defined at:
   312 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;  dividend        2    0[COMRAM] int 
   315 ;;  divisor         2    2[COMRAM] int 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  quotient        2    6[COMRAM] int 
   318 ;;  sign            1    5[COMRAM] unsigned char 
   319 ;;  counter         1    4[COMRAM] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  2    0[COMRAM] int 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   329 ;;      Params:         4       0       0       0       0       0       0
   330 ;;      Locals:         4       0       0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0
   332 ;;      Totals:         8       0       0       0       0       0       0
   333 ;;Total ram usage:        8 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text1
   343   0006FC                     __ptext1:
   344                           	callstack 0
   345   0006FC                     ___awdiv:
   346                           	callstack 30
   347   0006FC  0E00               	movlw	0
   348   0006FE  6E06               	movwf	___awdiv@sign^0,c
   349   000700  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   350   000702  EF87  F003         	goto	u140
   351   000706  EF85  F003         	goto	u141
   352   00070A                     u141:
   353   00070A  EF8D  F003         	goto	l810
   354   00070E                     u140:
   355   00070E  6C03               	negf	___awdiv@divisor^0,c
   356   000710  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   357   000712  B0D8               	btfsc	status,0,c
   358   000714  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   359   000716  0E01               	movlw	1
   360   000718  6E06               	movwf	___awdiv@sign^0,c
   361   00071A                     l810:
   362   00071A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   363   00071C  EF94  F003         	goto	u150
   364   000720  EF92  F003         	goto	u151
   365   000724                     u151:
   366   000724  EF9A  F003         	goto	l816
   367   000728                     u150:
   368   000728  6C01               	negf	___awdiv@dividend^0,c
   369   00072A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   370   00072C  B0D8               	btfsc	status,0,c
   371   00072E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   372   000730  0E01               	movlw	1
   373   000732  1A06               	xorwf	___awdiv@sign^0,f,c
   374   000734                     l816:
   375   000734  0E00               	movlw	0
   376   000736  6E08               	movwf	(___awdiv@quotient+1)^0,c
   377   000738  0E00               	movlw	0
   378   00073A  6E07               	movwf	___awdiv@quotient^0,c
   379   00073C  5003               	movf	___awdiv@divisor^0,w,c
   380   00073E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   381   000740  B4D8               	btfsc	status,2,c
   382   000742  EFA5  F003         	goto	u161
   383   000746  EFA7  F003         	goto	u160
   384   00074A                     u161:
   385   00074A  EFCF  F003         	goto	l838
   386   00074E                     u160:
   387   00074E  0E01               	movlw	1
   388   000750  6E05               	movwf	___awdiv@counter^0,c
   389   000752  EFAF  F003         	goto	l824
   390   000756                     l822:
   391   000756  90D8               	bcf	status,0,c
   392   000758  3603               	rlcf	___awdiv@divisor^0,f,c
   393   00075A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   394   00075C  2A05               	incf	___awdiv@counter^0,f,c
   395   00075E                     l824:
   396   00075E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   397   000760  EFB4  F003         	goto	u171
   398   000764  EFB6  F003         	goto	u170
   399   000768                     u171:
   400   000768  EFAB  F003         	goto	l822
   401   00076C                     u170:
   402   00076C                     l826:
   403   00076C  90D8               	bcf	status,0,c
   404   00076E  3607               	rlcf	___awdiv@quotient^0,f,c
   405   000770  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   406   000772  5003               	movf	___awdiv@divisor^0,w,c
   407   000774  5C01               	subwf	___awdiv@dividend^0,w,c
   408   000776  5004               	movf	(___awdiv@divisor+1)^0,w,c
   409   000778  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   410   00077A  A0D8               	btfss	status,0,c
   411   00077C  EFC2  F003         	goto	u181
   412   000780  EFC4  F003         	goto	u180
   413   000784                     u181:
   414   000784  EFC9  F003         	goto	l834
   415   000788                     u180:
   416   000788  5003               	movf	___awdiv@divisor^0,w,c
   417   00078A  5E01               	subwf	___awdiv@dividend^0,f,c
   418   00078C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   419   00078E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   420   000790  8007               	bsf	___awdiv@quotient^0,0,c
   421   000792                     l834:
   422   000792  90D8               	bcf	status,0,c
   423   000794  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   424   000796  3203               	rrcf	___awdiv@divisor^0,f,c
   425   000798  2E05               	decfsz	___awdiv@counter^0,f,c
   426   00079A  EFB6  F003         	goto	l826
   427   00079E                     l838:
   428   00079E  5006               	movf	___awdiv@sign^0,w,c
   429   0007A0  B4D8               	btfsc	status,2,c
   430   0007A2  EFD5  F003         	goto	u191
   431   0007A6  EFD7  F003         	goto	u190
   432   0007AA                     u191:
   433   0007AA  EFDB  F003         	goto	l842
   434   0007AE                     u190:
   435   0007AE  6C07               	negf	___awdiv@quotient^0,c
   436   0007B0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   437   0007B2  B0D8               	btfsc	status,0,c
   438   0007B4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   439   0007B6                     l842:
   440   0007B6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   441   0007BA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   442   0007BE  0012               	return		;funcret
   443   0007C0                     __end_of___awdiv:
   444                           	callstack 0
   445                           
   446                           	psect	smallconst
   447   000600                     __psmallconst:
   448                           	callstack 0
   449   000600  00                 	db	0
   450   000601  00                 	db	0	; dummy byte at the end
   451   000000                     
   452                           	psect	rparam
   453   000000                     tosu	equ	0xFFF
   454                           tosh	equ	0xFFE
   455                           tosl	equ	0xFFD
   456                           stkptr	equ	0xFFC
   457                           pclatu	equ	0xFFB
   458                           pclath	equ	0xFFA
   459                           pcl	equ	0xFF9
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           prodh	equ	0xFF4
   465                           prodl	equ	0xFF3
   466                           indf0	equ	0xFEF
   467                           postinc0	equ	0xFEE
   468                           postdec0	equ	0xFED
   469                           preinc0	equ	0xFEC
   470                           plusw0	equ	0xFEB
   471                           fsr0h	equ	0xFEA
   472                           fsr0l	equ	0xFE9
   473                           wreg	equ	0xFE8
   474                           indf1	equ	0xFE7
   475                           postinc1	equ	0xFE6
   476                           postdec1	equ	0xFE5
   477                           preinc1	equ	0xFE4
   478                           plusw1	equ	0xFE3
   479                           fsr1h	equ	0xFE2
   480                           fsr1l	equ	0xFE1
   481                           bsr	equ	0xFE0
   482                           indf2	equ	0xFDF
   483                           postinc2	equ	0xFDE
   484                           postdec2	equ	0xFDD
   485                           preinc2	equ	0xFDC
   486                           plusw2	equ	0xFDB
   487                           fsr2h	equ	0xFDA
   488                           fsr2l	equ	0xFD9
   489                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     724
                                              8 COMRAM     8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     10      10       1       16.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 30 12:10:56 2024

                     l20 0682                       l21 0636                       l26 0698  
           ___awdiv@sign 0006                      l266 07BE                      l810 071A  
                    l802 06FC                      l820 074E                      l812 0728  
                    l804 0700                      l830 0788                      l822 0756  
                    l814 0730                      l806 070E                      l840 07AE  
                    l832 0790                      l824 075E                      l816 0734  
                    l808 0716                      l842 07B6                      l834 0792  
                    l826 076C                      l818 073C                      l850 0608  
                    l836 0798                      l828 0772                      l852 0616  
                    l838 079E                      l870 0642                      l854 061C  
                    l846 0602                      l872 0646                      l864 063A  
                    l856 0620                      l848 0604                      l890 06A8  
                    l882 069C                      l874 065C                      l858 062E  
                    l892 06BE                      l876 0690                      l894 06DA  
                    l888 06A4                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      u200 0616                      u201 0612  
                    u210 062E                      u211 062A                      u140 070E  
                    u220 065C                      u141 070A                      u221 0658  
                    u150 0728                      u230 0682                      u151 0724  
                    u231 067E                      u160 074E                      u240 0690  
                    u161 074A                      u241 068C                      u170 076C  
                    u250 06BE                      u171 0768                      u251 06BA  
                    u180 0788                      u260 06F4                      u181 0784  
                    u261 06F0                      u190 07AE                      u191 07AA  
                   _main 0602                     start 0000             ___param_bank 0000  
                  ?_main 0001          __end_of___awdiv 07C0          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95                    main@i 0009                    main@j 000D  
                  main@k 000F                    status 0FD8          __initialization 07C0  
           __end_of_main 06FC                   ??_main 0009            __activetblptr 0000  
       ___awdiv@dividend 0001                ??___awdiv 0005         ___awdiv@quotient 0007  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 07C0            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 06FC  
           __psmallconst 0600                  __pcinit 07C0                  __ramtop 0600  
                __ptext0 0602                  __ptext1 06FC     end_of_initialization 07C0  
    start_initialization 07C0                 ?___awdiv 0001              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               main@i_38 000B  
