

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 07 09:15:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RC2	set	31762
    51   000000                     _RC1	set	31761
    52   000000                     _TRISC	set	3988
    53   000000                     _RC0	set	31760
    54   000000                     _TRISD	set	3989
    55   000000                     _PORTD	set	3971
    56                           
    57                           	psect	smallconst
    58   000600                     __psmallconst:
    59                           	callstack 0
    60   000600  00                 	db	0
    61   000601                     STR_1:
    62   000601  20                 	db	32
    63   000602  20                 	db	32
    64   000603  44                 	db	68	;'D'
    65   000604  45                 	db	69	;'E'
    66   000605  56                 	db	86	;'V'
    67   000606  49                 	db	73	;'I'
    68   000607  4B                 	db	75	;'K'
    69   000608  41                 	db	65	;'A'
    70   000609  20                 	db	32
    71   00060A  20                 	db	32
    72   00060B  00                 	db	0
    73   00060C  00                 	db	0	; dummy byte at the end
    74   000000                     
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78   000752                     __pcinit:
    79                           	callstack 0
    80   000752                     start_initialization:
    81                           	callstack 0
    82   000752                     __initialization:
    83                           	callstack 0
    84   000752                     end_of_initialization:
    85                           	callstack 0
    86   000752                     __end_of__initialization:
    87                           	callstack 0
    88   000752  0E00               	movlw	low (__Lsmallconst shr (0+16))
    89   000754  6EF8               	movwf	tblptru,c
    90   000756  0E06               	movlw	high __Lsmallconst
    91   000758  6EF7               	movwf	tblptrh,c
    92   00075A  0100               	movlb	0
    93   00075C  EF67  F003         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	cstackCOMRAM
    96   000001                     __pcstackCOMRAM:
    97                           	callstack 0
    98   000001                     cmd@a:
    99                           	callstack 0
   100   000001                     data@a:
   101                           	callstack 0
   102   000001                     delay@i:
   103                           	callstack 0
   104                           
   105                           ; 2 bytes @ 0x0
   106   000001                     	ds	1
   107   000002                     cmd@i:
   108                           	callstack 0
   109   000002                     data@i:
   110                           	callstack 0
   111                           
   112                           ; 2 bytes @ 0x1
   113   000002                     	ds	2
   114   000004                     cmd@i_53:
   115                           	callstack 0
   116   000004                     data@i_57:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x3
   120   000004                     	ds	2
   121   000006                     display@p:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x5
   125   000006                     	ds	1
   126   000007                     
   127                           ; 1 bytes @ 0x6
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 14 in file "SCROLL.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   147 ;;      Params:         0       0       0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0
   150 ;;      Totals:         0       0       0       0       0       0       0
   151 ;;Total ram usage:        0 bytes
   152 ;; Hardware stack levels required when called: 2
   153 ;; This function calls:
   154 ;;		_cmd
   155 ;;		_delay
   156 ;;		_display
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163   0006CE                     __ptext0:
   164                           	callstack 0
   165   0006CE                     _main:
   166                           	callstack 29
   167   0006CE                     
   168                           ;SCROLL.c: 16:     TRISC=0X00;
   169   0006CE  0E00               	movlw	0
   170   0006D0  6E94               	movwf	148,c	;volatile
   171                           
   172                           ;SCROLL.c: 17:     TRISD=0X00;
   173   0006D2  0E00               	movlw	0
   174   0006D4  6E95               	movwf	149,c	;volatile
   175   0006D6                     
   176                           ;SCROLL.c: 19:     cmd(0x0f);
   177   0006D6  0E0F               	movlw	15
   178   0006D8  EC37  F003         	call	_cmd
   179   0006DC                     
   180                           ;SCROLL.c: 20:     cmd(0x0c);
   181   0006DC  0E0C               	movlw	12
   182   0006DE  EC37  F003         	call	_cmd
   183   0006E2                     
   184                           ;SCROLL.c: 21:     display("  DEVIKA  ");
   185   0006E2  0E01               	movlw	low STR_1
   186   0006E4  6E06               	movwf	display@p^0,c
   187   0006E6  EC7E  F003         	call	_display	;wreg free
   188   0006EA                     l825:
   189                           
   190                           ;SCROLL.c: 23:     {;SCROLL.c: 24:     cmd(0X18);
   191   0006EA  0E18               	movlw	24
   192   0006EC  EC37  F003         	call	_cmd
   193   0006F0                     
   194                           ;SCROLL.c: 26:     delay();
   195   0006F0  EC94  F003         	call	_delay	;wreg free
   196   0006F4  EF75  F003         	goto	l825
   197   0006F8  EF00  F000         	goto	start
   198   0006FC                     __end_of_main:
   199                           	callstack 0
   200                           
   201 ;; *************** function _display *****************
   202 ;; Defined at:
   203 ;;		line 53 in file "SCROLL.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  p               1    5[COMRAM] PTR const unsigned char 
   206 ;;		 -> STR_1(11), 
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   218 ;;      Params:         1       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0       0       0
   221 ;;      Totals:         1       0       0       0       0       0       0
   222 ;;Total ram usage:        1 bytes
   223 ;; Hardware stack levels used: 1
   224 ;; Hardware stack levels required when called: 1
   225 ;; This function calls:
   226 ;;		_data
   227 ;; This function is called by:
   228 ;;		_main
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text1
   233   0006FC                     __ptext1:
   234                           	callstack 0
   235   0006FC                     _display:
   236                           	callstack 29
   237   0006FC                     
   238                           ;SCROLL.c: 53: void display(const char *p);SCROLL.c: 54: {;SCROLL.c: 55:     while(*p)
   239   0006FC  EF87  F003         	goto	l815
   240   000700                     l811:
   241                           
   242                           ;SCROLL.c: 56:     {;SCROLL.c: 57:         data(*p);
   243   000700  C006  FFF6         	movff	display@p,tblptrl
   244   000704                     	if	0	;There is only one active tblptr byte
   245   000704                     	endif
   246   000704                     	if	0	;tblptru may be non-zero
   247   000704                     	endif
   248   000704                     	if	0	;tblptru may be non-zero
   249   000704                     	endif
   250   000704  0008               	tblrd		*
   251   000706  50F5               	movf	tablat,w,c
   252   000708  EC07  F003         	call	_data
   253   00070C                     
   254                           ;SCROLL.c: 58:         p++;
   255   00070C  2A06               	incf	display@p^0,f,c
   256   00070E                     l815:
   257                           
   258                           ;SCROLL.c: 55:     while(*p)
   259   00070E  C006  FFF6         	movff	display@p,tblptrl
   260   000712                     	if	0	;There is only one active tblptr byte
   261   000712                     	endif
   262   000712                     	if	0	;tblptru may be non-zero
   263   000712                     	endif
   264   000712                     	if	0	;tblptru may be non-zero
   265   000712                     	endif
   266   000712  0008               	tblrd		*
   267   000714  50F5               	movf	tablat,w,c
   268   000716  0900               	iorlw	0
   269   000718  A4D8               	btfss	status,2,c
   270   00071A  EF91  F003         	goto	u71
   271   00071E  EF93  F003         	goto	u70
   272   000722                     u71:
   273   000722  EF80  F003         	goto	l811
   274   000726                     u70:
   275   000726  0012               	return		;funcret
   276   000728                     __end_of_display:
   277                           	callstack 0
   278                           
   279 ;; *************** function _data *****************
   280 ;; Defined at:
   281 ;;		line 42 in file "SCROLL.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  a               1    wreg     unsigned char 
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  a               1    0[COMRAM] unsigned char 
   286 ;;  i               2    3[COMRAM] int 
   287 ;;  i               2    1[COMRAM] int 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   297 ;;      Params:         0       0       0       0       0       0       0
   298 ;;      Locals:         5       0       0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0       0       0
   300 ;;      Totals:         5       0       0       0       0       0       0
   301 ;;Total ram usage:        5 bytes
   302 ;; Hardware stack levels used: 1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_display
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text2
   311   00060E                     __ptext2:
   312                           	callstack 0
   313   00060E                     _data:
   314                           	callstack 29
   315                           
   316                           ;incstack = 0
   317                           ;data@a stored from wreg
   318   00060E  6E01               	movwf	data@a^0,c
   319   000610                     
   320                           ;SCROLL.c: 42: void data(unsigned char a );SCROLL.c: 43: {;SCROLL.c: 44:     RC0=1;
   321   000610  8082               	bsf	3970,0,c	;volatile
   322                           
   323                           ;SCROLL.c: 45:     RC1=0;
   324   000612  9282               	bcf	3970,1,c	;volatile
   325   000614                     
   326                           ;SCROLL.c: 46:     PORTD=a;
   327   000614  C001  FF83         	movff	data@a,3971	;volatile
   328   000618                     
   329                           ;SCROLL.c: 47:     RC2=1;
   330   000618  8482               	bsf	3970,2,c	;volatile
   331   00061A                     
   332                           ;SCROLL.c: 48:     for(int i=0;i<=100;i++);
   333   00061A  0E00               	movlw	0
   334   00061C  6E03               	movwf	(data@i+1)^0,c
   335   00061E  0E00               	movlw	0
   336   000620  6E02               	movwf	data@i^0,c
   337   000622                     l739:
   338   000622  4A02               	infsnz	data@i^0,f,c
   339   000624  2A03               	incf	(data@i+1)^0,f,c
   340   000626  BE03               	btfsc	(data@i+1)^0,7,c
   341   000628  EF1F  F003         	goto	u11
   342   00062C  5003               	movf	(data@i+1)^0,w,c
   343   00062E  E109               	bnz	u10
   344   000630  0E65               	movlw	101
   345   000632  5C02               	subwf	data@i^0,w,c
   346   000634  A0D8               	btfss	status,0,c
   347   000636  EF1F  F003         	goto	u11
   348   00063A  EF21  F003         	goto	u10
   349   00063E                     u11:
   350   00063E  EF11  F003         	goto	l739
   351   000642                     u10:
   352   000642                     
   353                           ;SCROLL.c: 49:     RC2=0;
   354   000642  9482               	bcf	3970,2,c	;volatile
   355   000644                     
   356                           ;SCROLL.c: 50:     for(int i=0;i<=5000;i++);
   357   000644  0E00               	movlw	0
   358   000646  6E05               	movwf	(data@i_57+1)^0,c
   359   000648  0E00               	movlw	0
   360   00064A  6E04               	movwf	data@i_57^0,c
   361   00064C                     l749:
   362   00064C  4A04               	infsnz	data@i_57^0,f,c
   363   00064E  2A05               	incf	(data@i_57+1)^0,f,c
   364   000650  BE05               	btfsc	(data@i_57+1)^0,7,c
   365   000652  EF34  F003         	goto	u21
   366   000656  0E89               	movlw	137
   367   000658  5C04               	subwf	data@i_57^0,w,c
   368   00065A  0E13               	movlw	19
   369   00065C  5805               	subwfb	(data@i_57+1)^0,w,c
   370   00065E  A0D8               	btfss	status,0,c
   371   000660  EF34  F003         	goto	u21
   372   000664  EF36  F003         	goto	u20
   373   000668                     u21:
   374   000668  EF26  F003         	goto	l749
   375   00066C                     u20:
   376   00066C  0012               	return		;funcret
   377   00066E                     __end_of_data:
   378                           	callstack 0
   379                           
   380 ;; *************** function _delay *****************
   381 ;; Defined at:
   382 ;;		line 61 in file "SCROLL.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  i               2    0[COMRAM] int 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   396 ;;      Params:         0       0       0       0       0       0       0
   397 ;;      Locals:         2       0       0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0       0       0
   399 ;;      Totals:         2       0       0       0       0       0       0
   400 ;;Total ram usage:        2 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410   000728                     __ptext3:
   411                           	callstack 0
   412   000728                     _delay:
   413                           	callstack 30
   414   000728                     
   415                           ;SCROLL.c: 63:     for(int i=0;i<=30000;i++);
   416   000728  0E00               	movlw	0
   417   00072A  6E02               	movwf	(delay@i+1)^0,c
   418   00072C  0E00               	movlw	0
   419   00072E  6E01               	movwf	delay@i^0,c
   420   000730                     l793:
   421   000730  4A01               	infsnz	delay@i^0,f,c
   422   000732  2A02               	incf	(delay@i+1)^0,f,c
   423   000734  BE02               	btfsc	(delay@i+1)^0,7,c
   424   000736  EFA6  F003         	goto	u61
   425   00073A  0E31               	movlw	49
   426   00073C  5C01               	subwf	delay@i^0,w,c
   427   00073E  0E75               	movlw	117
   428   000740  5802               	subwfb	(delay@i+1)^0,w,c
   429   000742  A0D8               	btfss	status,0,c
   430   000744  EFA6  F003         	goto	u61
   431   000748  EFA8  F003         	goto	u60
   432   00074C                     u61:
   433   00074C  EF98  F003         	goto	l793
   434   000750                     u60:
   435   000750  0012               	return		;funcret
   436   000752                     __end_of_delay:
   437                           	callstack 0
   438                           
   439 ;; *************** function _cmd *****************
   440 ;; Defined at:
   441 ;;		line 32 in file "SCROLL.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;  a               1    wreg     unsigned char 
   444 ;; Auto vars:     Size  Location     Type
   445 ;;  a               1    0[COMRAM] unsigned char 
   446 ;;  i               2    3[COMRAM] int 
   447 ;;  i               2    1[COMRAM] int 
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   457 ;;      Params:         0       0       0       0       0       0       0
   458 ;;      Locals:         5       0       0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0
   460 ;;      Totals:         5       0       0       0       0       0       0
   461 ;;Total ram usage:        5 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text4
   471   00066E                     __ptext4:
   472                           	callstack 0
   473   00066E                     _cmd:
   474                           	callstack 30
   475                           
   476                           ;incstack = 0
   477                           ;cmd@a stored from wreg
   478   00066E  6E01               	movwf	cmd@a^0,c
   479   000670                     
   480                           ;SCROLL.c: 32: void cmd(unsigned char a );SCROLL.c: 33: {;SCROLL.c: 34:     RC0=0;
   481   000670  9082               	bcf	3970,0,c	;volatile
   482                           
   483                           ;SCROLL.c: 35:     RC1=0;
   484   000672  9282               	bcf	3970,1,c	;volatile
   485   000674                     
   486                           ;SCROLL.c: 36:     PORTD=a;
   487   000674  C001  FF83         	movff	cmd@a,3971	;volatile
   488   000678                     
   489                           ;SCROLL.c: 37:     RC2=1;
   490   000678  8482               	bsf	3970,2,c	;volatile
   491   00067A                     
   492                           ;SCROLL.c: 38:     for(int i=0;i<=100;i++);
   493   00067A  0E00               	movlw	0
   494   00067C  6E03               	movwf	(cmd@i+1)^0,c
   495   00067E  0E00               	movlw	0
   496   000680  6E02               	movwf	cmd@i^0,c
   497   000682                     l765:
   498   000682  4A02               	infsnz	cmd@i^0,f,c
   499   000684  2A03               	incf	(cmd@i+1)^0,f,c
   500   000686  BE03               	btfsc	(cmd@i+1)^0,7,c
   501   000688  EF4F  F003         	goto	u31
   502   00068C  5003               	movf	(cmd@i+1)^0,w,c
   503   00068E  E109               	bnz	u30
   504   000690  0E65               	movlw	101
   505   000692  5C02               	subwf	cmd@i^0,w,c
   506   000694  A0D8               	btfss	status,0,c
   507   000696  EF4F  F003         	goto	u31
   508   00069A  EF51  F003         	goto	u30
   509   00069E                     u31:
   510   00069E  EF41  F003         	goto	l765
   511   0006A2                     u30:
   512   0006A2                     
   513                           ;SCROLL.c: 39:     RC2=0;
   514   0006A2  9482               	bcf	3970,2,c	;volatile
   515   0006A4                     
   516                           ;SCROLL.c: 40:     for(int i=0;i<=5000;i++);
   517   0006A4  0E00               	movlw	0
   518   0006A6  6E05               	movwf	(cmd@i_53+1)^0,c
   519   0006A8  0E00               	movlw	0
   520   0006AA  6E04               	movwf	cmd@i_53^0,c
   521   0006AC                     l775:
   522   0006AC  4A04               	infsnz	cmd@i_53^0,f,c
   523   0006AE  2A05               	incf	(cmd@i_53+1)^0,f,c
   524   0006B0  BE05               	btfsc	(cmd@i_53+1)^0,7,c
   525   0006B2  EF64  F003         	goto	u41
   526   0006B6  0E89               	movlw	137
   527   0006B8  5C04               	subwf	cmd@i_53^0,w,c
   528   0006BA  0E13               	movlw	19
   529   0006BC  5805               	subwfb	(cmd@i_53+1)^0,w,c
   530   0006BE  A0D8               	btfss	status,0,c
   531   0006C0  EF64  F003         	goto	u41
   532   0006C4  EF66  F003         	goto	u40
   533   0006C8                     u41:
   534   0006C8  EF56  F003         	goto	l775
   535   0006CC                     u40:
   536   0006CC  0012               	return		;funcret
   537   0006CE                     __end_of_cmd:
   538                           	callstack 0
   539                           
   540                           	psect	rparam
   541   000000                     tosu	equ	0xFFF
   542                           tosh	equ	0xFFE
   543                           tosl	equ	0xFFD
   544                           stkptr	equ	0xFFC
   545                           pclatu	equ	0xFFB
   546                           pclath	equ	0xFFA
   547                           pcl	equ	0xFF9
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           prodh	equ	0xFF4
   553                           prodl	equ	0xFF3
   554                           indf0	equ	0xFEF
   555                           postinc0	equ	0xFEE
   556                           postdec0	equ	0xFED
   557                           preinc0	equ	0xFEC
   558                           plusw0	equ	0xFEB
   559                           fsr0h	equ	0xFEA
   560                           fsr0l	equ	0xFE9
   561                           wreg	equ	0xFE8
   562                           indf1	equ	0xFE7
   563                           postinc1	equ	0xFE6
   564                           postdec1	equ	0xFE5
   565                           preinc1	equ	0xFE4
   566                           plusw1	equ	0xFE3
   567                           fsr1h	equ	0xFE2
   568                           fsr1l	equ	0xFE1
   569                           bsr	equ	0xFE0
   570                           indf2	equ	0xFDF
   571                           postinc2	equ	0xFDE
   572                           postdec2	equ	0xFDD
   573                           preinc2	equ	0xFDC
   574                           plusw2	equ	0xFDB
   575                           fsr2h	equ	0xFDA
   576                           fsr2l	equ	0xFD9
   577                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     301
                                _cmd
                              _delay
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     196
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _delay
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 07 09:15:02 2024

                     l30 06A2                       l40 066C                       l33 06CC  
                     l51 0750                       l37 0642                       l46 0726  
                     u10 0642                       u11 063E                       u20 066C  
                     u21 0668                       u30 06A2                       u31 069E  
                     u40 06CC                       u41 06C8                       u60 0750  
                     u61 074C                       u70 0726                       u71 0722  
                    l731 0618                      l811 0700                      l741 0626  
                    l733 061A                      l813 070C                      l821 06DC  
                    l751 0650                      l743 0644                      l727 0610  
                    l815 070E                      l823 06E2                      l753 0670  
                    l729 0614                      l809 06FC                      l825 06EA  
                    l817 06CE                      l755 0674                      l739 0622  
                    l827 06F0                      l819 06D6                      l765 0682  
                    l757 0678                      l749 064C                      l775 06AC  
                    l767 0686                      l759 067A                      l777 06B0  
                    l769 06A4                      l793 0730                      l795 0734  
                    l787 0728                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _cmd 066E                     ?_cmd 0001  
                   STR_1 0601                     _data 060E                     cmd@a 0001  
                   cmd@i 0002                     _main 06CE                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 0728                    _delay 0728  
                  data@a 0001                    data@i 0002                    tablat 0FF5  
                  status 0FD8          __initialization 0752             __end_of_data 066E  
           __end_of_main 06FC                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   ?_delay 0001                   delay@i 0001  
                 isa$std 0001                ??_display 0007             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 0752            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 0752                  ??_delay 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0752                  __ramtop 0600                  __ptext0 06CE  
                __ptext1 06FC                  cmd@i_53 0004                  __ptext2 060E  
                __ptext3 0728                  __ptext4 066E                  _display 06FC  
   end_of_initialization 0752      start_initialization 0752              __end_of_cmd 06CE  
               ?_display 0006              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_57 0004  
               isa$xinst 0000                 display@p 0006  
