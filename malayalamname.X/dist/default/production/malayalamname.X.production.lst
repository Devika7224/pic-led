

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 20 18:45:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16   000000                     
    17                           ; Generated 17/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4580 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   00079A                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _char_a6
    57   00079A  1C                 	db	28
    58   00079B  04                 	db	4
    59   00079C  04                 	db	4
    60   00079D  1F                 	db	31
    61   00079E  05                 	db	5
    62   00079F  05                 	db	5
    63   0007A0  1D                 	db	29
    64   0007A1  00                 	db	0
    65                           
    66                           ;initializer for _char_a5
    67   0007A2  03                 	db	3
    68   0007A3  02                 	db	2
    69   0007A4  02                 	db	2
    70   0007A5  0F                 	db	15
    71   0007A6  0A                 	db	10
    72   0007A7  0E                 	db	14
    73   0007A8  03                 	db	3
    74   0007A9  00                 	db	0
    75                           
    76                           ;initializer for _char_a4
    77   0007AA  1E                 	db	30
    78   0007AB  12                 	db	18
    79   0007AC  02                 	db	2
    80   0007AD  02                 	db	2
    81   0007AE  02                 	db	2
    82   0007AF  02                 	db	2
    83   0007B0  02                 	db	2
    84   0007B1  00                 	db	0
    85                           
    86                           ;initializer for _char_a3
    87   0007B2  1D                 	db	29
    88   0007B3  15                 	db	21
    89   0007B4  15                 	db	21
    90   0007B5  15                 	db	21
    91   0007B6  15                 	db	21
    92   0007B7  15                 	db	21
    93   0007B8  17                 	db	23
    94   0007B9  00                 	db	0
    95                           
    96                           ;initializer for _char_a2
    97   0007BA  1F                 	db	31
    98   0007BB  11                 	db	17
    99   0007BC  11                 	db	17
   100   0007BD  17                 	db	23
   101   0007BE  11                 	db	17
   102   0007BF  11                 	db	17
   103   0007C0  17                 	db	23
   104   0007C1  00                 	db	0
   105                           
   106                           ;initializer for _char_a1
   107   0007C2  1E                 	db	30
   108   0007C3  12                 	db	18
   109   0007C4  1E                 	db	30
   110   0007C5  10                 	db	16
   111   0007C6  1E                 	db	30
   112   0007C7  12                 	db	18
   113   0007C8  1E                 	db	30
   114   0007C9  00                 	db	0
   115   000000                     _RC2	set	31762
   116   000000                     _RC1	set	31761
   117   000000                     _TRISC	set	3988
   118   000000                     _RC0	set	31760
   119   000000                     _TRISD	set	3989
   120   000000                     _PORTD	set	3971
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   0007CA                     __pcinit:
   126                           	callstack 0
   127   0007CA                     start_initialization:
   128                           	callstack 0
   129   0007CA                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (48 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   0007CA  0E9A               	movlw	low __pidataCOMRAM
   135   0007CC  6EF6               	movwf	tblptrl,c
   136   0007CE  0E07               	movlw	high __pidataCOMRAM
   137   0007D0  6EF7               	movwf	tblptrh,c
   138   0007D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   0007D4  6EF8               	movwf	tblptru,c
   140   0007D6  EE00  F001         	lfsr	0,__pdataCOMRAM
   141   0007DA  EE10 F030          	lfsr	1,48
   142   0007DE                     copy_data0:
   143   0007DE  0009               	tblrd		*+
   144   0007E0  CFF5 FFEE          	movff	tablat,postinc0
   145   0007E4  50E5               	movf	postdec1,w,c
   146   0007E6  50E1               	movf	fsr1l,w,c
   147   0007E8  E1FA               	bnz	copy_data0
   148   0007EA                     end_of_initialization:
   149                           	callstack 0
   150   0007EA                     __end_of__initialization:
   151                           	callstack 0
   152   0007EA  0100               	movlb	0
   153   0007EC  EF01  F003         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	dataCOMRAM
   156   000001                     __pdataCOMRAM:
   157                           	callstack 0
   158   000001                     _char_a6:
   159                           	callstack 0
   160   000001                     	ds	8
   161   000009                     _char_a5:
   162                           	callstack 0
   163   000009                     	ds	8
   164   000011                     _char_a4:
   165                           	callstack 0
   166   000011                     	ds	8
   167   000019                     _char_a3:
   168                           	callstack 0
   169   000019                     	ds	8
   170   000021                     _char_a2:
   171                           	callstack 0
   172   000021                     	ds	8
   173   000029                     _char_a1:
   174                           	callstack 0
   175   000029                     	ds	8
   176                           
   177                           	psect	cstackCOMRAM
   178   000031                     __pcstackCOMRAM:
   179                           	callstack 0
   180   000031                     cmd@a:
   181                           	callstack 0
   182   000031                     data@a:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x0
   186   000031                     	ds	1
   187   000032                     cmd@i:
   188                           	callstack 0
   189   000032                     data@i:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0x1
   193   000032                     	ds	2
   194   000034                     cmd@i_60:
   195                           	callstack 0
   196   000034                     data@i_64:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x3
   200   000034                     	ds	2
   201   000036                     createCustomChar@pattern:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x5
   205   000036                     	ds	1
   206   000037                     createCustomChar@location:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x6
   210   000037                     	ds	1
   211   000038                     createCustomChar@i:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x7
   215   000038                     	ds	2
   216   00003A                     
   217                           ; 1 bytes @ 0x9
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 79 in file "malayalam.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   237 ;;      Params:         0       0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 2
   243 ;; This function calls:
   244 ;;		_cmd
   245 ;;		_createCustomChar
   246 ;;		_data
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text0
   253   000602                     __ptext0:
   254                           	callstack 0
   255   000602                     _main:
   256                           	callstack 29
   257   000602                     
   258                           ;malayalam.c: 81:     TRISC = TRISD = 0x00;
   259   000602  0E00               	movlw	0
   260   000604  6E95               	movwf	149,c	;volatile
   261   000606  CF95 FF94          	movff	3989,3988	;volatile
   262   00060A                     
   263                           ;malayalam.c: 82:     cmd(0x01);
   264   00060A  0E01               	movlw	1
   265   00060C  EC72  F003         	call	_cmd
   266   000610                     
   267                           ;malayalam.c: 83:     cmd(0x0F);
   268   000610  0E0F               	movlw	15
   269   000612  EC72  F003         	call	_cmd
   270   000616                     
   271                           ;malayalam.c: 85:     createCustomChar(0, char_a1);
   272   000616  0E29               	movlw	low _char_a1
   273   000618  6E36               	movwf	createCustomChar@pattern^0,c
   274   00061A  0E00               	movlw	0
   275   00061C  ECA2  F003         	call	_createCustomChar
   276   000620                     
   277                           ;malayalam.c: 86:     createCustomChar(1, char_a2);
   278   000620  0E21               	movlw	low _char_a2
   279   000622  6E36               	movwf	createCustomChar@pattern^0,c
   280   000624  0E01               	movlw	1
   281   000626  ECA2  F003         	call	_createCustomChar
   282   00062A                     
   283                           ;malayalam.c: 87:     createCustomChar(2, char_a3);
   284   00062A  0E19               	movlw	low _char_a3
   285   00062C  6E36               	movwf	createCustomChar@pattern^0,c
   286   00062E  0E02               	movlw	2
   287   000630  ECA2  F003         	call	_createCustomChar
   288   000634                     
   289                           ;malayalam.c: 88:     createCustomChar(3, char_a4);
   290   000634  0E11               	movlw	low _char_a4
   291   000636  6E36               	movwf	createCustomChar@pattern^0,c
   292   000638  0E03               	movlw	3
   293   00063A  ECA2  F003         	call	_createCustomChar
   294   00063E                     
   295                           ;malayalam.c: 89:     createCustomChar(4, char_a5);
   296   00063E  0E09               	movlw	low _char_a5
   297   000640  6E36               	movwf	createCustomChar@pattern^0,c
   298   000642  0E04               	movlw	4
   299   000644  ECA2  F003         	call	_createCustomChar
   300   000648                     
   301                           ;malayalam.c: 90:     createCustomChar(5, char_a6);
   302   000648  0E01               	movlw	low _char_a6
   303   00064A  6E36               	movwf	createCustomChar@pattern^0,c
   304   00064C  0E05               	movlw	5
   305   00064E  ECA2  F003         	call	_createCustomChar
   306   000652                     
   307                           ;malayalam.c: 92:     cmd(0x80);
   308   000652  0E80               	movlw	128
   309   000654  EC72  F003         	call	_cmd
   310   000658                     
   311                           ;malayalam.c: 94:     data(0x00);
   312   000658  0E00               	movlw	0
   313   00065A  EC42  F003         	call	_data
   314   00065E                     
   315                           ;malayalam.c: 95:     data(0x01);
   316   00065E  0E01               	movlw	1
   317   000660  EC42  F003         	call	_data
   318   000664                     
   319                           ;malayalam.c: 96:     data(0x02);
   320   000664  0E02               	movlw	2
   321   000666  EC42  F003         	call	_data
   322   00066A                     
   323                           ;malayalam.c: 97:     data(0x03);
   324   00066A  0E03               	movlw	3
   325   00066C  EC42  F003         	call	_data
   326   000670                     
   327                           ;malayalam.c: 98:     data(0x04);
   328   000670  0E04               	movlw	4
   329   000672  EC42  F003         	call	_data
   330   000676                     
   331                           ;malayalam.c: 99:     data(0x05);
   332   000676  0E05               	movlw	5
   333   000678  EC42  F003         	call	_data
   334   00067C                     l35:
   335   00067C  EF3E  F003         	goto	l35
   336   000680  EF00  F000         	goto	start
   337   000684                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _createCustomChar *****************
   341 ;; Defined at:
   342 ;;		line 135 in file "malayalam.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  location        1    wreg     unsigned char 
   345 ;;  pattern         1    5[COMRAM] PTR unsigned char 
   346 ;;		 -> char_a6(8), char_a5(8), char_a4(8), char_a3(8), 
   347 ;;		 -> char_a2(8), char_a1(8), 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  location        1    6[COMRAM] unsigned char 
   350 ;;  i               2    7[COMRAM] int 
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   360 ;;      Params:         1       0       0       0       0       0       0
   361 ;;      Locals:         3       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0
   363 ;;      Totals:         4       0       0       0       0       0       0
   364 ;;Total ram usage:        4 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; Hardware stack levels required when called: 1
   367 ;; This function calls:
   368 ;;		_cmd
   369 ;;		_data
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376   000744                     __ptext1:
   377                           	callstack 0
   378   000744                     _createCustomChar:
   379                           	callstack 29
   380                           
   381                           ;incstack = 0
   382                           ;createCustomChar@location stored from wreg
   383   000744  6E37               	movwf	createCustomChar@location^0,c
   384   000746                     
   385                           ;malayalam.c: 135: void createCustomChar(unsigned char location, unsigned char *pattern)
      +                          ;malayalam.c: 136: {;malayalam.c: 137:     if (location < 8)
   386   000746  0E08               	movlw	8
   387   000748  6037               	cpfslt	createCustomChar@location^0,c
   388   00074A  EFA9  F003         	goto	u81
   389   00074E  EFAB  F003         	goto	u80
   390   000752                     u81:
   391   000752  EFCC  F003         	goto	l64
   392   000756                     u80:
   393   000756                     
   394                           ;malayalam.c: 138:     {;malayalam.c: 139:         cmd(0x40 + (location * 8));
   395   000756  5037               	movf	createCustomChar@location^0,w,c
   396   000758  0D08               	mullw	8
   397   00075A  50F3               	movf	243,w,c
   398   00075C  0F40               	addlw	64
   399   00075E  EC72  F003         	call	_cmd
   400   000762                     
   401                           ;malayalam.c: 140:         for(int i = 0; i < 8; i++)
   402   000762  0E00               	movlw	0
   403   000764  6E39               	movwf	(createCustomChar@i+1)^0,c
   404   000766  0E00               	movlw	0
   405   000768  6E38               	movwf	createCustomChar@i^0,c
   406   00076A                     l858:
   407                           
   408                           ;malayalam.c: 141:         {;malayalam.c: 142:             data(pattern[i]);
   409   00076A  5036               	movf	createCustomChar@pattern^0,w,c
   410   00076C  2438               	addwf	createCustomChar@i^0,w,c
   411   00076E  6ED9               	movwf	fsr2l,c
   412   000770  6ADA               	clrf	fsr2h,c
   413   000772  50DF               	movf	indf2,w,c
   414   000774  EC42  F003         	call	_data
   415   000778                     
   416                           ;malayalam.c: 143:         }
   417   000778  4A38               	infsnz	createCustomChar@i^0,f,c
   418   00077A  2A39               	incf	(createCustomChar@i+1)^0,f,c
   419   00077C  BE39               	btfsc	(createCustomChar@i+1)^0,7,c
   420   00077E  EFCA  F003         	goto	u91
   421   000782  5039               	movf	(createCustomChar@i+1)^0,w,c
   422   000784  E109               	bnz	u90
   423   000786  0E08               	movlw	8
   424   000788  5C38               	subwf	createCustomChar@i^0,w,c
   425   00078A  A0D8               	btfss	status,0,c
   426   00078C  EFCA  F003         	goto	u91
   427   000790  EFCC  F003         	goto	u90
   428   000794                     u91:
   429   000794  EFB5  F003         	goto	l858
   430   000798                     u90:
   431   000798                     l64:
   432   000798  0012               	return		;funcret
   433   00079A                     __end_of_createCustomChar:
   434                           	callstack 0
   435                           
   436 ;; *************** function _data *****************
   437 ;; Defined at:
   438 ;;		line 115 in file "malayalam.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  a               1    wreg     unsigned char 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  a               1    0[COMRAM] unsigned char 
   443 ;;  i               2    3[COMRAM] int 
   444 ;;  i               2    1[COMRAM] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   454 ;;      Params:         0       0       0       0       0       0       0
   455 ;;      Locals:         5       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0
   457 ;;      Totals:         5       0       0       0       0       0       0
   458 ;;Total ram usage:        5 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;;		_createCustomChar
   465 ;;		_display
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text2
   470   000684                     __ptext2:
   471                           	callstack 0
   472   000684                     _data:
   473                           	callstack 30
   474                           
   475                           ;incstack = 0
   476                           ;data@a stored from wreg
   477   000684  6E31               	movwf	data@a^0,c
   478   000686                     
   479                           ;malayalam.c: 115: void data(unsigned char a);malayalam.c: 116: {;malayalam.c: 117:     
      +                          RC0 = 1;
   480   000686  8082               	bsf	3970,0,c	;volatile
   481                           
   482                           ;malayalam.c: 118:     RC1 = 0;
   483   000688  9282               	bcf	3970,1,c	;volatile
   484   00068A                     
   485                           ;malayalam.c: 119:     PORTD = a;
   486   00068A  C031  FF83         	movff	data@a,3971	;volatile
   487   00068E                     
   488                           ;malayalam.c: 120:     RC2 = 1;
   489   00068E  8482               	bsf	3970,2,c	;volatile
   490   000690                     
   491                           ;malayalam.c: 121:     for(int i = 0; i <= 100; i++);
   492   000690  0E00               	movlw	0
   493   000692  6E33               	movwf	(data@i+1)^0,c
   494   000694  0E00               	movlw	0
   495   000696  6E32               	movwf	data@i^0,c
   496   000698                     l778:
   497   000698  4A32               	infsnz	data@i^0,f,c
   498   00069A  2A33               	incf	(data@i+1)^0,f,c
   499   00069C  BE33               	btfsc	(data@i+1)^0,7,c
   500   00069E  EF5A  F003         	goto	u31
   501   0006A2  5033               	movf	(data@i+1)^0,w,c
   502   0006A4  E109               	bnz	u30
   503   0006A6  0E65               	movlw	101
   504   0006A8  5C32               	subwf	data@i^0,w,c
   505   0006AA  A0D8               	btfss	status,0,c
   506   0006AC  EF5A  F003         	goto	u31
   507   0006B0  EF5C  F003         	goto	u30
   508   0006B4                     u31:
   509   0006B4  EF4C  F003         	goto	l778
   510   0006B8                     u30:
   511   0006B8                     
   512                           ;malayalam.c: 122:     RC2 = 0;
   513   0006B8  9482               	bcf	3970,2,c	;volatile
   514   0006BA                     
   515                           ;malayalam.c: 123:     for(int i = 0; i <= 5000; i++);
   516   0006BA  0E00               	movlw	0
   517   0006BC  6E35               	movwf	(data@i_64+1)^0,c
   518   0006BE  0E00               	movlw	0
   519   0006C0  6E34               	movwf	data@i_64^0,c
   520   0006C2                     l788:
   521   0006C2  4A34               	infsnz	data@i_64^0,f,c
   522   0006C4  2A35               	incf	(data@i_64+1)^0,f,c
   523   0006C6  BE35               	btfsc	(data@i_64+1)^0,7,c
   524   0006C8  EF6F  F003         	goto	u41
   525   0006CC  0E89               	movlw	137
   526   0006CE  5C34               	subwf	data@i_64^0,w,c
   527   0006D0  0E13               	movlw	19
   528   0006D2  5835               	subwfb	(data@i_64+1)^0,w,c
   529   0006D4  A0D8               	btfss	status,0,c
   530   0006D6  EF6F  F003         	goto	u41
   531   0006DA  EF71  F003         	goto	u40
   532   0006DE                     u41:
   533   0006DE  EF61  F003         	goto	l788
   534   0006E2                     u40:
   535   0006E2  0012               	return		;funcret
   536   0006E4                     __end_of_data:
   537                           	callstack 0
   538                           
   539 ;; *************** function _cmd *****************
   540 ;; Defined at:
   541 ;;		line 104 in file "malayalam.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  a               1    wreg     unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  a               1    0[COMRAM] unsigned char 
   546 ;;  i               2    3[COMRAM] int 
   547 ;;  i               2    1[COMRAM] int 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   557 ;;      Params:         0       0       0       0       0       0       0
   558 ;;      Locals:         5       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0
   560 ;;      Totals:         5       0       0       0       0       0       0
   561 ;;Total ram usage:        5 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_main
   567 ;;		_createCustomChar
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text3
   572   0006E4                     __ptext3:
   573                           	callstack 0
   574   0006E4                     _cmd:
   575                           	callstack 29
   576                           
   577                           ;incstack = 0
   578                           ;cmd@a stored from wreg
   579   0006E4  6E31               	movwf	cmd@a^0,c
   580   0006E6                     
   581                           ;malayalam.c: 104: void cmd(unsigned char a);malayalam.c: 105: {;malayalam.c: 106:     R
      +                          C0 = 0;
   582   0006E6  9082               	bcf	3970,0,c	;volatile
   583                           
   584                           ;malayalam.c: 107:     RC1 = 0;
   585   0006E8  9282               	bcf	3970,1,c	;volatile
   586   0006EA                     
   587                           ;malayalam.c: 108:     PORTD = a;
   588   0006EA  C031  FF83         	movff	cmd@a,3971	;volatile
   589   0006EE                     
   590                           ;malayalam.c: 109:     RC2 = 1;
   591   0006EE  8482               	bsf	3970,2,c	;volatile
   592   0006F0                     
   593                           ;malayalam.c: 110:     for(int i = 0; i <= 100; i++);
   594   0006F0  0E00               	movlw	0
   595   0006F2  6E33               	movwf	(cmd@i+1)^0,c
   596   0006F4  0E00               	movlw	0
   597   0006F6  6E32               	movwf	cmd@i^0,c
   598   0006F8                     l752:
   599   0006F8  4A32               	infsnz	cmd@i^0,f,c
   600   0006FA  2A33               	incf	(cmd@i+1)^0,f,c
   601   0006FC  BE33               	btfsc	(cmd@i+1)^0,7,c
   602   0006FE  EF8A  F003         	goto	u11
   603   000702  5033               	movf	(cmd@i+1)^0,w,c
   604   000704  E109               	bnz	u10
   605   000706  0E65               	movlw	101
   606   000708  5C32               	subwf	cmd@i^0,w,c
   607   00070A  A0D8               	btfss	status,0,c
   608   00070C  EF8A  F003         	goto	u11
   609   000710  EF8C  F003         	goto	u10
   610   000714                     u11:
   611   000714  EF7C  F003         	goto	l752
   612   000718                     u10:
   613   000718                     
   614                           ;malayalam.c: 111:     RC2 = 0;
   615   000718  9482               	bcf	3970,2,c	;volatile
   616   00071A                     
   617                           ;malayalam.c: 112:     for(int i = 0; i <= 5000; i++);
   618   00071A  0E00               	movlw	0
   619   00071C  6E35               	movwf	(cmd@i_60+1)^0,c
   620   00071E  0E00               	movlw	0
   621   000720  6E34               	movwf	cmd@i_60^0,c
   622   000722                     l762:
   623   000722  4A34               	infsnz	cmd@i_60^0,f,c
   624   000724  2A35               	incf	(cmd@i_60+1)^0,f,c
   625   000726  BE35               	btfsc	(cmd@i_60+1)^0,7,c
   626   000728  EF9F  F003         	goto	u21
   627   00072C  0E89               	movlw	137
   628   00072E  5C34               	subwf	cmd@i_60^0,w,c
   629   000730  0E13               	movlw	19
   630   000732  5835               	subwfb	(cmd@i_60+1)^0,w,c
   631   000734  A0D8               	btfss	status,0,c
   632   000736  EF9F  F003         	goto	u21
   633   00073A  EFA1  F003         	goto	u20
   634   00073E                     u21:
   635   00073E  EF91  F003         	goto	l762
   636   000742                     u20:
   637   000742  0012               	return		;funcret
   638   000744                     __end_of_cmd:
   639                           	callstack 0
   640                           
   641                           	psect	smallconst
   642   000600                     __psmallconst:
   643                           	callstack 0
   644   000600  00                 	db	0
   645   000601  00                 	db	0	; dummy byte at the end
   646   000000                     
   647                           	psect	rparam
   648   000000                     tosu	equ	0xFFF
   649                           tosh	equ	0xFFE
   650                           tosl	equ	0xFFD
   651                           stkptr	equ	0xFFC
   652                           pclatu	equ	0xFFB
   653                           pclath	equ	0xFFA
   654                           pcl	equ	0xFF9
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           prodh	equ	0xFF4
   660                           prodl	equ	0xFF3
   661                           indf0	equ	0xFEF
   662                           postinc0	equ	0xFEE
   663                           postdec0	equ	0xFED
   664                           preinc0	equ	0xFEC
   665                           plusw0	equ	0xFEB
   666                           fsr0h	equ	0xFEA
   667                           fsr0l	equ	0xFE9
   668                           wreg	equ	0xFE8
   669                           indf1	equ	0xFE7
   670                           postinc1	equ	0xFE6
   671                           postdec1	equ	0xFE5
   672                           preinc1	equ	0xFE4
   673                           plusw1	equ	0xFE3
   674                           fsr1h	equ	0xFE2
   675                           fsr1l	equ	0xFE1
   676                           bsr	equ	0xFE0
   677                           indf2	equ	0xFDF
   678                           postinc2	equ	0xFDE
   679                           postdec2	equ	0xFDD
   680                           preinc2	equ	0xFDC
   681                           plusw2	equ	0xFDB
   682                           fsr2h	equ	0xFDA
   683                           fsr2l	equ	0xFD9
   684                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    createCustomChar@pattern	PTR unsigned char  size(1) Largest target is 8
		 -> char_a1(COMRAM[8]), char_a2(COMRAM[8]), char_a3(COMRAM[8]), char_a4(COMRAM[8]), 
		 -> char_a5(COMRAM[8]), char_a6(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_createCustomChar
    _createCustomChar->_cmd
    _createCustomChar->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     890
                                _cmd
                   _createCustomChar
                               _data
 ---------------------------------------------------------------------------------
 (1) _createCustomChar                                     4     3      1     740
                                              5 COMRAM     4     3      1
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (1) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _createCustomChar
     _cmd
     _data
   _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      20        0.0%
BITBIGSFRll        282      0       0      18        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      39       1       60.0%
BITBIGSFRlh         10      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      19        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 20 18:45:57 2024

                      l42 0718                        l35 067C                        l52 06E2  
                      l36 067C                        l45 0742                        l64 0798  
                      l49 06B8                        u10 0718                        u11 0714  
                      u20 0742                        u21 073E                        u30 06B8  
                      u31 06B4                        u40 06E2                        u41 06DE  
                      u80 0756                        u81 0752                        u90 0798  
                      u91 0794                       l740 06E6                       l742 06EA  
                     l752 06F8                       l744 06EE                       l762 0722  
                     l754 06FC                       l746 06F0                       l770 068E  
                     l850 0756                       l764 0726                       l756 071A  
                     l780 069C                       l772 0690                       l860 0778  
                     l852 0762                       l790 06C6                       l782 06BA  
                     l766 0686                       l862 077C                       l870 0616  
                     l768 068A                       l848 0746                       l880 0648  
                     l872 0620                       l864 0602                       l778 0698  
                     l858 076A                       l890 066A                       l882 0652  
                     l874 062A                       l866 060A                       l788 06C2  
                     l892 0670                       l884 0658                       l876 0634  
                     l868 0610                       l894 0676                       l886 065E  
                     l878 063E                       l888 0664                       _RC0 7C10  
                     _RC1 7C11                       _RC2 7C12                       _cmd 06E4  
                    ?_cmd 0031                      _data 0684                      cmd@a 0031  
                    cmd@i 0032                      _main 0602                      fsr2h 0FDA  
                    indf2 0FDF                      fsr1l 0FE1                      fsr2l 0FD9  
                    prodl 0FF3                      start 0000              ___param_bank 0000  
                   ??_cmd 0031  __end_of_createCustomChar 079A                     ?_data 0031  
                   ?_main 0031                     _PORTD 0F83                     _TRISC 0F94  
                   _TRISD 0F95                     data@a 0031                     data@i 0032  
                   tablat 0FF5                     status 0FD8           __initialization 07CA  
            __end_of_data 06E4              __end_of_main 0684                    ??_data 0031  
                  ??_main 003A             __activetblptr 0000                    isa$std 0001  
            __pdataCOMRAM 0001              __mediumconst 0000                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8   createCustomChar@pattern 0036  
              __accesstop 0060   __end_of__initialization 07EA             ___rparam_used 0001  
          __pcstackCOMRAM 0031         ?_createCustomChar 0036        ??_createCustomChar 0037  
                 __Hparam 0000                   __Lparam 0000              __psmallconst 0600  
                 _char_a1 0029                   _char_a2 0021                   _char_a3 0019  
                 _char_a4 0011                   _char_a5 0009                   _char_a6 0001  
                 __pcinit 07CA                   __ramtop 0600                   __ptext0 0602  
                 cmd@i_60 0034                   __ptext1 0744                   __ptext2 0684  
                 __ptext3 06E4      end_of_initialization 07EA  createCustomChar@location 0037  
                 postdec1 0FE5                   postinc0 0FEE             __pidataCOMRAM 079A  
     start_initialization 07CA               __end_of_cmd 0744         createCustomChar@i 0038  
             __smallconst 0600                 copy_data0 07DE                  __Hrparam 0000  
                __Lrparam 0000          _createCustomChar 0744                  data@i_64 0034  
                isa$xinst 0000  
