

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 03 19:44:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _TRISC	set	3988
    52   000000                     _RC0	set	31760
    53   000000                     _TRISD	set	3989
    54   000000                     _PORTD	set	3971
    55                           
    56                           	psect	smallconst
    57   000600                     __psmallconst:
    58                           	callstack 0
    59   000600  00                 	db	0
    60   000601                     STR_1:
    61   000601  68                 	db	104	;'h'
    62   000602  65                 	db	101	;'e'
    63   000603  6C                 	db	108	;'l'
    64   000604  6C                 	db	108	;'l'
    65   000605  6F                 	db	111	;'o'
    66   000606  00                 	db	0
    67   000607  00                 	db	0	; dummy byte at the end
    68   000000                     
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   000718                     __pcinit:
    73                           	callstack 0
    74   000718                     start_initialization:
    75                           	callstack 0
    76   000718                     __initialization:
    77                           	callstack 0
    78   000718                     end_of_initialization:
    79                           	callstack 0
    80   000718                     __end_of__initialization:
    81                           	callstack 0
    82   000718  0E00               	movlw	low (__Lsmallconst shr (0+16))
    83   00071A  6EF8               	movwf	tblptru,c
    84   00071C  0E06               	movlw	high __Lsmallconst
    85   00071E  6EF7               	movwf	tblptrh,c
    86   000720  0100               	movlb	0
    87   000722  EF7A  F003         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	cstackCOMRAM
    90   000001                     __pcstackCOMRAM:
    91                           	callstack 0
    92   000001                     cmd@a:
    93                           	callstack 0
    94   000001                     data@a:
    95                           	callstack 0
    96                           
    97                           ; 1 bytes @ 0x0
    98   000001                     	ds	1
    99   000002                     cmd@i:
   100                           	callstack 0
   101   000002                     data@i:
   102                           	callstack 0
   103                           
   104                           ; 2 bytes @ 0x1
   105   000002                     	ds	2
   106   000004                     cmd@i_49:
   107                           	callstack 0
   108   000004                     data@i_53:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x3
   112   000004                     	ds	2
   113   000006                     display@p:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x5
   117   000006                     	ds	1
   118   000007                     
   119                           ; 1 bytes @ 0x6
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 14 in file "LCDDISPLAY.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   139 ;;      Params:         0       0       0       0       0       0       0
   140 ;;      Locals:         0       0       0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0
   142 ;;      Totals:         0       0       0       0       0       0       0
   143 ;;Total ram usage:        0 bytes
   144 ;; Hardware stack levels required when called: 2
   145 ;; This function calls:
   146 ;;		_cmd
   147 ;;		_display
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154   0006F4                     __ptext0:
   155                           	callstack 0
   156   0006F4                     _main:
   157                           	callstack 29
   158   0006F4                     
   159                           ;LCDDISPLAY.c: 16:     TRISC=0X00;
   160   0006F4  0E00               	movlw	0
   161   0006F6  6E94               	movwf	148,c	;volatile
   162                           
   163                           ;LCDDISPLAY.c: 17:     TRISD=0X00;
   164   0006F8  0E00               	movlw	0
   165   0006FA  6E95               	movwf	149,c	;volatile
   166   0006FC                     
   167                           ;LCDDISPLAY.c: 18:     cmd(0x01);
   168   0006FC  0E01               	movlw	1
   169   0006FE  EC34  F003         	call	_cmd
   170   000702                     
   171                           ;LCDDISPLAY.c: 19:     cmd(0x0f);
   172   000702  0E0F               	movlw	15
   173   000704  EC34  F003         	call	_cmd
   174   000708                     
   175                           ;LCDDISPLAY.c: 20:     display("hello");
   176   000708  0E01               	movlw	low STR_1
   177   00070A  6E06               	movwf	display@p^0,c
   178   00070C  EC64  F003         	call	_display	;wreg free
   179   000710                     l21:
   180   000710  EF88  F003         	goto	l21
   181   000714  EF00  F000         	goto	start
   182   000718                     __end_of_main:
   183                           	callstack 0
   184                           
   185 ;; *************** function _display *****************
   186 ;; Defined at:
   187 ;;		line 47 in file "LCDDISPLAY.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;  p               1    5[COMRAM] PTR const unsigned char 
   190 ;;		 -> STR_1(6), 
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   202 ;;      Params:         1       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0
   205 ;;      Totals:         1       0       0       0       0       0       0
   206 ;;Total ram usage:        1 bytes
   207 ;; Hardware stack levels used: 1
   208 ;; Hardware stack levels required when called: 1
   209 ;; This function calls:
   210 ;;		_data
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text1
   217   0006C8                     __ptext1:
   218                           	callstack 0
   219   0006C8                     _display:
   220                           	callstack 29
   221   0006C8                     
   222                           ;LCDDISPLAY.c: 47: void display(const char *p);LCDDISPLAY.c: 48: {;LCDDISPLAY.c: 49:    
      +                           while(*p)
   223   0006C8  EF6D  F003         	goto	l794
   224   0006CC                     l790:
   225                           
   226                           ;LCDDISPLAY.c: 50:     {;LCDDISPLAY.c: 51:         data(*p);
   227   0006CC  C006  FFF6         	movff	display@p,tblptrl
   228   0006D0                     	if	0	;There is only one active tblptr byte
   229   0006D0                     	endif
   230   0006D0                     	if	0	;tblptru may be non-zero
   231   0006D0                     	endif
   232   0006D0                     	if	0	;tblptru may be non-zero
   233   0006D0                     	endif
   234   0006D0  0008               	tblrd		*
   235   0006D2  50F5               	movf	tablat,w,c
   236   0006D4  EC04  F003         	call	_data
   237   0006D8                     
   238                           ;LCDDISPLAY.c: 52:         p++;
   239   0006D8  2A06               	incf	display@p^0,f,c
   240   0006DA                     l794:
   241                           
   242                           ;LCDDISPLAY.c: 49:     while(*p)
   243   0006DA  C006  FFF6         	movff	display@p,tblptrl
   244   0006DE                     	if	0	;There is only one active tblptr byte
   245   0006DE                     	endif
   246   0006DE                     	if	0	;tblptru may be non-zero
   247   0006DE                     	endif
   248   0006DE                     	if	0	;tblptru may be non-zero
   249   0006DE                     	endif
   250   0006DE  0008               	tblrd		*
   251   0006E0  50F5               	movf	tablat,w,c
   252   0006E2  0900               	iorlw	0
   253   0006E4  A4D8               	btfss	status,2,c
   254   0006E6  EF77  F003         	goto	u61
   255   0006EA  EF79  F003         	goto	u60
   256   0006EE                     u61:
   257   0006EE  EF66  F003         	goto	l790
   258   0006F2                     u60:
   259   0006F2  0012               	return		;funcret
   260   0006F4                     __end_of_display:
   261                           	callstack 0
   262                           
   263 ;; *************** function _data *****************
   264 ;; Defined at:
   265 ;;		line 36 in file "LCDDISPLAY.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;  a               1    wreg     unsigned char 
   268 ;; Auto vars:     Size  Location     Type
   269 ;;  a               1    0[COMRAM] unsigned char 
   270 ;;  i               2    3[COMRAM] int 
   271 ;;  i               2    1[COMRAM] int 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:         5       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0
   284 ;;      Totals:         5       0       0       0       0       0       0
   285 ;;Total ram usage:        5 bytes
   286 ;; Hardware stack levels used: 1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_display
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text2
   295   000608                     __ptext2:
   296                           	callstack 0
   297   000608                     _data:
   298                           	callstack 29
   299                           
   300                           ;incstack = 0
   301                           ;data@a stored from wreg
   302   000608  6E01               	movwf	data@a^0,c
   303   00060A                     
   304                           ;LCDDISPLAY.c: 36: void data(unsigned char a );LCDDISPLAY.c: 37: {;LCDDISPLAY.c: 38:    
      +                           RC0=1;
   305   00060A  8082               	bsf	3970,0,c	;volatile
   306                           
   307                           ;LCDDISPLAY.c: 39:     RC1=0;
   308   00060C  9282               	bcf	3970,1,c	;volatile
   309   00060E                     
   310                           ;LCDDISPLAY.c: 40:     PORTD=a;
   311   00060E  C001  FF83         	movff	data@a,3971	;volatile
   312   000612                     
   313                           ;LCDDISPLAY.c: 41:     RC2=1;
   314   000612  8482               	bsf	3970,2,c	;volatile
   315   000614                     
   316                           ;LCDDISPLAY.c: 42:     for(int i=0;i<=100;i++);
   317   000614  0E00               	movlw	0
   318   000616  6E03               	movwf	(data@i+1)^0,c
   319   000618  0E00               	movlw	0
   320   00061A  6E02               	movwf	data@i^0,c
   321   00061C                     l732:
   322   00061C  4A02               	infsnz	data@i^0,f,c
   323   00061E  2A03               	incf	(data@i+1)^0,f,c
   324   000620  BE03               	btfsc	(data@i+1)^0,7,c
   325   000622  EF1C  F003         	goto	u11
   326   000626  5003               	movf	(data@i+1)^0,w,c
   327   000628  E109               	bnz	u10
   328   00062A  0E65               	movlw	101
   329   00062C  5C02               	subwf	data@i^0,w,c
   330   00062E  A0D8               	btfss	status,0,c
   331   000630  EF1C  F003         	goto	u11
   332   000634  EF1E  F003         	goto	u10
   333   000638                     u11:
   334   000638  EF0E  F003         	goto	l732
   335   00063C                     u10:
   336   00063C                     
   337                           ;LCDDISPLAY.c: 43:     RC2=0;
   338   00063C  9482               	bcf	3970,2,c	;volatile
   339   00063E                     
   340                           ;LCDDISPLAY.c: 44:     for(int i=0;i<=5000;i++);
   341   00063E  0E00               	movlw	0
   342   000640  6E05               	movwf	(data@i_53+1)^0,c
   343   000642  0E00               	movlw	0
   344   000644  6E04               	movwf	data@i_53^0,c
   345   000646                     l742:
   346   000646  4A04               	infsnz	data@i_53^0,f,c
   347   000648  2A05               	incf	(data@i_53+1)^0,f,c
   348   00064A  BE05               	btfsc	(data@i_53+1)^0,7,c
   349   00064C  EF31  F003         	goto	u21
   350   000650  0E89               	movlw	137
   351   000652  5C04               	subwf	data@i_53^0,w,c
   352   000654  0E13               	movlw	19
   353   000656  5805               	subwfb	(data@i_53+1)^0,w,c
   354   000658  A0D8               	btfss	status,0,c
   355   00065A  EF31  F003         	goto	u21
   356   00065E  EF33  F003         	goto	u20
   357   000662                     u21:
   358   000662  EF23  F003         	goto	l742
   359   000666                     u20:
   360   000666  0012               	return		;funcret
   361   000668                     __end_of_data:
   362                           	callstack 0
   363                           
   364 ;; *************** function _cmd *****************
   365 ;; Defined at:
   366 ;;		line 26 in file "LCDDISPLAY.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  a               1    wreg     unsigned char 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  a               1    0[COMRAM] unsigned char 
   371 ;;  i               2    3[COMRAM] int 
   372 ;;  i               2    1[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         5       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0
   385 ;;      Totals:         5       0       0       0       0       0       0
   386 ;;Total ram usage:        5 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text3
   396   000668                     __ptext3:
   397                           	callstack 0
   398   000668                     _cmd:
   399                           	callstack 30
   400                           
   401                           ;incstack = 0
   402                           ;cmd@a stored from wreg
   403   000668  6E01               	movwf	cmd@a^0,c
   404   00066A                     
   405                           ;LCDDISPLAY.c: 26: void cmd(unsigned char a );LCDDISPLAY.c: 27: {;LCDDISPLAY.c: 28:     
      +                          RC0=0;
   406   00066A  9082               	bcf	3970,0,c	;volatile
   407                           
   408                           ;LCDDISPLAY.c: 29:     RC1=0;
   409   00066C  9282               	bcf	3970,1,c	;volatile
   410   00066E                     
   411                           ;LCDDISPLAY.c: 30:     PORTD=a;
   412   00066E  C001  FF83         	movff	cmd@a,3971	;volatile
   413   000672                     
   414                           ;LCDDISPLAY.c: 31:     RC2=1;
   415   000672  8482               	bsf	3970,2,c	;volatile
   416   000674                     
   417                           ;LCDDISPLAY.c: 32:     for(int i=0;i<=100;i++);
   418   000674  0E00               	movlw	0
   419   000676  6E03               	movwf	(cmd@i+1)^0,c
   420   000678  0E00               	movlw	0
   421   00067A  6E02               	movwf	cmd@i^0,c
   422   00067C                     l758:
   423   00067C  4A02               	infsnz	cmd@i^0,f,c
   424   00067E  2A03               	incf	(cmd@i+1)^0,f,c
   425   000680  BE03               	btfsc	(cmd@i+1)^0,7,c
   426   000682  EF4C  F003         	goto	u31
   427   000686  5003               	movf	(cmd@i+1)^0,w,c
   428   000688  E109               	bnz	u30
   429   00068A  0E65               	movlw	101
   430   00068C  5C02               	subwf	cmd@i^0,w,c
   431   00068E  A0D8               	btfss	status,0,c
   432   000690  EF4C  F003         	goto	u31
   433   000694  EF4E  F003         	goto	u30
   434   000698                     u31:
   435   000698  EF3E  F003         	goto	l758
   436   00069C                     u30:
   437   00069C                     
   438                           ;LCDDISPLAY.c: 33:     RC2=0;
   439   00069C  9482               	bcf	3970,2,c	;volatile
   440   00069E                     
   441                           ;LCDDISPLAY.c: 34:     for(int i=0;i<=5000;i++);
   442   00069E  0E00               	movlw	0
   443   0006A0  6E05               	movwf	(cmd@i_49+1)^0,c
   444   0006A2  0E00               	movlw	0
   445   0006A4  6E04               	movwf	cmd@i_49^0,c
   446   0006A6                     l768:
   447   0006A6  4A04               	infsnz	cmd@i_49^0,f,c
   448   0006A8  2A05               	incf	(cmd@i_49+1)^0,f,c
   449   0006AA  BE05               	btfsc	(cmd@i_49+1)^0,7,c
   450   0006AC  EF61  F003         	goto	u41
   451   0006B0  0E89               	movlw	137
   452   0006B2  5C04               	subwf	cmd@i_49^0,w,c
   453   0006B4  0E13               	movlw	19
   454   0006B6  5805               	subwfb	(cmd@i_49+1)^0,w,c
   455   0006B8  A0D8               	btfss	status,0,c
   456   0006BA  EF61  F003         	goto	u41
   457   0006BE  EF63  F003         	goto	u40
   458   0006C2                     u41:
   459   0006C2  EF53  F003         	goto	l768
   460   0006C6                     u40:
   461   0006C6  0012               	return		;funcret
   462   0006C8                     __end_of_cmd:
   463                           	callstack 0
   464                           
   465                           	psect	rparam
   466   000000                     tosu	equ	0xFFF
   467                           tosh	equ	0xFFE
   468                           tosl	equ	0xFFD
   469                           stkptr	equ	0xFFC
   470                           pclatu	equ	0xFFB
   471                           pclath	equ	0xFFA
   472                           pcl	equ	0xFF9
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           prodh	equ	0xFF4
   478                           prodl	equ	0xFF3
   479                           indf0	equ	0xFEF
   480                           postinc0	equ	0xFEE
   481                           postdec0	equ	0xFED
   482                           preinc0	equ	0xFEC
   483                           plusw0	equ	0xFEB
   484                           fsr0h	equ	0xFEA
   485                           fsr0l	equ	0xFE9
   486                           wreg	equ	0xFE8
   487                           indf1	equ	0xFE7
   488                           postinc1	equ	0xFE6
   489                           postdec1	equ	0xFE5
   490                           preinc1	equ	0xFE4
   491                           plusw1	equ	0xFE3
   492                           fsr1h	equ	0xFE2
   493                           fsr1l	equ	0xFE1
   494                           bsr	equ	0xFE0
   495                           indf2	equ	0xFDF
   496                           postinc2	equ	0xFDE
   497                           postdec2	equ	0xFDD
   498                           preinc2	equ	0xFDC
   499                           plusw2	equ	0xFDB
   500                           fsr2h	equ	0xFDA
   501                           fsr2l	equ	0xFD9
   502                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     271
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     196
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 03 19:44:46 2024

                     l21 0710                       l22 0710                       l31 06C6  
                     l35 063C                       l28 069C                       l44 06F2  
                     l38 0666                       u10 063C                       u11 0638  
                     u20 0666                       u21 0662                       u30 069C  
                     u31 0698                       u40 06C6                       u41 06C2  
                     u60 06F2                       u61 06EE                      l720 060A  
                    l800 0702                      l722 060E                      l802 0708  
                    l732 061C                      l724 0612                      l750 0672  
                    l742 0646                      l734 0620                      l726 0614  
                    l760 0680                      l752 0674                      l744 064A  
                    l736 063E                      l770 06AA                      l762 069E  
                    l746 066A                      l748 066E                      l758 067C  
                    l790 06CC                      l768 06A6                      l792 06D8  
                    l794 06DA                      l788 06C8                      l796 06F4  
                    l798 06FC                      _RC0 7C10                      _RC1 7C11  
                    _RC2 7C12                      _cmd 0668                     ?_cmd 0001  
                   STR_1 0601                     _data 0608                     cmd@a 0001  
                   cmd@i 0002                     _main 06F4                     start 0000  
           ___param_bank 0000                    ??_cmd 0001                    ?_data 0001  
                  ?_main 0001                    _PORTD 0F83                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 06F4                    data@a 0001  
                  data@i 0002                    tablat 0FF5                    status 0FD8  
        __initialization 0718             __end_of_data 0668             __end_of_main 0718  
                 ??_data 0001                   ??_main 0007            __activetblptr 0001  
                 isa$std 0001                ??_display 0007             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 0718            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0718                  __ramtop 0600  
                __ptext0 06F4                  __ptext1 06C8                  __ptext2 0608  
                __ptext3 0668                  cmd@i_49 0004                  _display 06C8  
   end_of_initialization 0718      start_initialization 0718              __end_of_cmd 06C8  
               ?_display 0006              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600                 data@i_53 0004  
               isa$xinst 0000                 display@p 0006  
