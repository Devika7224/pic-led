

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 06 19:41:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4580 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _RC2	set	31762
    50   000000                     _RC1	set	31761
    51   000000                     _RC0	set	31760
    52   000000                     _RB3	set	31755
    53   000000                     _RB2	set	31754
    54   000000                     _RC5	set	31765
    55   000000                     _RB1	set	31753
    56   000000                     _TRISB	set	3987
    57   000000                     _TRISC	set	3988
    58   000000                     _RB0	set	31752
    59   000000                     _RC4	set	31764
    60   000000                     _TRISD	set	3989
    61   000000                     _PORTD	set	3971
    62                           
    63                           	psect	smallconst
    64   000600                     __psmallconst:
    65                           	callstack 0
    66   000600  00                 	db	0
    67   000601                     STR_3:
    68   000601  4D                 	db	77	;'M'
    69   000602  4F                 	db	79	;'O'
    70   000603  54                 	db	84	;'T'
    71   000604  4F                 	db	79	;'O'
    72   000605  52                 	db	82	;'R'
    73   000606  32                 	db	50	;'2'
    74   000607  53                 	db	83	;'S'
    75   000608  54                 	db	84	;'T'
    76   000609  4F                 	db	79	;'O'
    77   00060A  50                 	db	80	;'P'
    78   00060B  20                 	db	32
    79   00060C  20                 	db	32
    80   00060D  20                 	db	32
    81   00060E  20                 	db	32
    82   00060F  20                 	db	32
    83   000610  20                 	db	32
    84   000611  00                 	db	0
    85   000612                     STR_1:
    86   000612  4D                 	db	77	;'M'
    87   000613  4F                 	db	79	;'O'
    88   000614  54                 	db	84	;'T'
    89   000615  4F                 	db	79	;'O'
    90   000616  52                 	db	82	;'R'
    91   000617  32                 	db	50	;'2'
    92   000618  43                 	db	67	;'C'
    93   000619  4C                 	db	76	;'L'
    94   00061A  4F                 	db	79	;'O'
    95   00061B  43                 	db	67	;'C'
    96   00061C  4B                 	db	75	;'K'
    97   00061D  57                 	db	87	;'W'
    98   00061E  49                 	db	73	;'I'
    99   00061F  53                 	db	83	;'S'
   100   000620  45                 	db	69	;'E'
   101   000621  20                 	db	32
   102   000622  00                 	db	0
   103   000623                     STR_2:
   104   000623  4D                 	db	77	;'M'
   105   000624  4F                 	db	79	;'O'
   106   000625  54                 	db	84	;'T'
   107   000626  4F                 	db	79	;'O'
   108   000627  52                 	db	82	;'R'
   109   000628  32                 	db	50	;'2'
   110   000629  41                 	db	65	;'A'
   111   00062A  4E                 	db	78	;'N'
   112   00062B  54                 	db	84	;'T'
   113   00062C  49                 	db	73	;'I'
   114   00062D  43                 	db	67	;'C'
   115   00062E  4C                 	db	76	;'L'
   116   00062F  4F                 	db	79	;'O'
   117   000630  43                 	db	67	;'C'
   118   000631  4B                 	db	75	;'K'
   119   000632  00                 	db	0
   120   000633  00                 	db	0	; dummy byte at the end
   121   000000                     
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   00089C                     __pcinit:
   126                           	callstack 0
   127   00089C                     start_initialization:
   128                           	callstack 0
   129   00089C                     __initialization:
   130                           	callstack 0
   131   00089C                     end_of_initialization:
   132                           	callstack 0
   133   00089C                     __end_of__initialization:
   134                           	callstack 0
   135   00089C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   136   00089E  6EF8               	movwf	tblptru,c
   137   0008A0  0E06               	movlw	high __Lsmallconst
   138   0008A2  6EF7               	movwf	tblptrh,c
   139   0008A4  0100               	movlb	0
   140   0008A6  EF1A  F003         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	cstackCOMRAM
   143   000001                     __pcstackCOMRAM:
   144                           	callstack 0
   145   000001                     cmd@a:
   146                           	callstack 0
   147   000001                     data@b:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x0
   151   000001                     	ds	1
   152   000002                     cmd@i:
   153                           	callstack 0
   154   000002                     data@i:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x1
   158   000002                     	ds	2
   159   000004                     cmd@i_63:
   160                           	callstack 0
   161   000004                     data@i_67:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x3
   165   000004                     	ds	2
   166   000006                     display@p:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x5
   170   000006                     	ds	1
   171   000007                     main@c2:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x6
   175   000007                     	ds	2
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 14 in file "lcdwithoutclear.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;  c2              2    6[COMRAM] int 
   187 ;;  c1              2    0        int 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   197 ;;      Params:         0       0       0       0       0       0       0
   198 ;;      Locals:         2       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels required when called: 2
   203 ;; This function calls:
   204 ;;		_cmd
   205 ;;		_display
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   000634                     __ptext0:
   213                           	callstack 0
   214   000634                     _main:
   215                           	callstack 29
   216   000634                     
   217                           ;lcdwithoutclear.c: 15:        TRISC=0X30;
   218   000634  0E30               	movlw	48
   219   000636  6E94               	movwf	148,c	;volatile
   220                           
   221                           ;lcdwithoutclear.c: 16:      TRISD=0X00;
   222   000638  0E00               	movlw	0
   223   00063A  6E95               	movwf	149,c	;volatile
   224                           
   225                           ;lcdwithoutclear.c: 17:      TRISB=0X00;
   226   00063C  0E00               	movlw	0
   227   00063E  6E93               	movwf	147,c	;volatile
   228   000640                     
   229                           ;lcdwithoutclear.c: 18:       cmd(0x01);
   230   000640  0E01               	movlw	1
   231   000642  EC08  F004         	call	_cmd
   232   000646                     
   233                           ;lcdwithoutclear.c: 19:     cmd(0x0f);
   234   000646  0E0F               	movlw	15
   235   000648  EC08  F004         	call	_cmd
   236   00064C                     
   237                           ;lcdwithoutclear.c: 20:     cmd(0x38);
   238   00064C  0E38               	movlw	56
   239   00064E  EC08  F004         	call	_cmd
   240   000652  6807               	setf	main@c2^0,c
   241   000654  6808               	setf	(main@c2+1)^0,c
   242   000656                     l904:
   243                           
   244                           ;lcdwithoutclear.c: 24:         cmd(0x0C);
   245   000656  0E0C               	movlw	12
   246   000658  EC08  F004         	call	_cmd
   247   00065C                     
   248                           ;lcdwithoutclear.c: 25:         if(RC4==1)
   249   00065C  A882               	btfss	3970,4,c	;volatile
   250   00065E  EF33  F003         	goto	u191
   251   000662  EF35  F003         	goto	u190
   252   000666                     u191:
   253   000666  EF81  F003         	goto	l934
   254   00066A                     u190:
   255   00066A                     
   256                           ;lcdwithoutclear.c: 26:         {;lcdwithoutclear.c: 27:             if(c2==2)
   257   00066A  0E02               	movlw	2
   258   00066C  1807               	xorwf	main@c2^0,w,c
   259   00066E  1008               	iorwf	(main@c2+1)^0,w,c
   260   000670  A4D8               	btfss	status,2,c
   261   000672  EF3D  F003         	goto	u201
   262   000676  EF3F  F003         	goto	u200
   263   00067A                     u201:
   264   00067A  EF41  F003         	goto	l912
   265   00067E                     u200:
   266   00067E                     
   267                           ;lcdwithoutclear.c: 28:             {;lcdwithoutclear.c: 29:                 c2=-1;
   268   00067E  6807               	setf	main@c2^0,c
   269   000680  6808               	setf	(main@c2+1)^0,c
   270   000682                     l912:
   271                           
   272                           ;lcdwithoutclear.c: 31:             c2++;
   273   000682  4A07               	infsnz	main@c2^0,f,c
   274   000684  2A08               	incf	(main@c2+1)^0,f,c
   275   000686                     l38:
   276   000686  B882               	btfsc	3970,4,c	;volatile
   277   000688  EF48  F003         	goto	u211
   278   00068C  EF4A  F003         	goto	u210
   279   000690                     u211:
   280   000690  EF43  F003         	goto	l38
   281   000694                     u210:
   282   000694                     
   283                           ;lcdwithoutclear.c: 33:            cmd(0xC0);
   284   000694  0EC0               	movlw	192
   285   000696  EC08  F004         	call	_cmd
   286   00069A                     
   287                           ;lcdwithoutclear.c: 34:          if(c2==0)
   288   00069A  5007               	movf	main@c2^0,w,c
   289   00069C  1008               	iorwf	(main@c2+1)^0,w,c
   290   00069E  A4D8               	btfss	status,2,c
   291   0006A0  EF54  F003         	goto	u221
   292   0006A4  EF56  F003         	goto	u220
   293   0006A8                     u221:
   294   0006A8  EF5E  F003         	goto	l922
   295   0006AC                     u220:
   296   0006AC                     
   297                           ;lcdwithoutclear.c: 35:             {;lcdwithoutclear.c: 36:             RB0=1; RB1=0;
   298   0006AC  8081               	bsf	3969,0,c	;volatile
   299   0006AE  9281               	bcf	3969,1,c	;volatile
   300   0006B0                     
   301                           ;lcdwithoutclear.c: 37:              display("MOTOR2CLOCKWISE ");
   302   0006B0  0E12               	movlw	low STR_1
   303   0006B2  6E06               	movwf	display@p^0,c
   304   0006B4  EC38  F004         	call	_display	;wreg free
   305                           
   306                           ;lcdwithoutclear.c: 38:             }
   307   0006B8  EF81  F003         	goto	l934
   308   0006BC                     l922:
   309   0006BC  0407               	decf	main@c2^0,w,c
   310   0006BE  1008               	iorwf	(main@c2+1)^0,w,c
   311   0006C0  A4D8               	btfss	status,2,c
   312   0006C2  EF65  F003         	goto	u231
   313   0006C6  EF67  F003         	goto	u230
   314   0006CA                     u231:
   315   0006CA  EF6F  F003         	goto	l928
   316   0006CE                     u230:
   317   0006CE                     
   318                           ;lcdwithoutclear.c: 40:             {;lcdwithoutclear.c: 41:             RB0=0; RB1=1;
   319   0006CE  9081               	bcf	3969,0,c	;volatile
   320   0006D0  8281               	bsf	3969,1,c	;volatile
   321   0006D2                     
   322                           ;lcdwithoutclear.c: 42:              display("MOTOR2ANTICLOCK");
   323   0006D2  0E23               	movlw	low STR_2
   324   0006D4  6E06               	movwf	display@p^0,c
   325   0006D6  EC38  F004         	call	_display	;wreg free
   326                           
   327                           ;lcdwithoutclear.c: 43:             }
   328   0006DA  EF81  F003         	goto	l934
   329   0006DE                     l928:
   330   0006DE  0E02               	movlw	2
   331   0006E0  1807               	xorwf	main@c2^0,w,c
   332   0006E2  1008               	iorwf	(main@c2+1)^0,w,c
   333   0006E4  A4D8               	btfss	status,2,c
   334   0006E6  EF77  F003         	goto	u241
   335   0006EA  EF79  F003         	goto	u240
   336   0006EE                     u241:
   337   0006EE  EF81  F003         	goto	l42
   338   0006F2                     u240:
   339   0006F2                     
   340                           ;lcdwithoutclear.c: 45:             {;lcdwithoutclear.c: 46:                 RB0=0; RB1=
      +                          0;
   341   0006F2  9081               	bcf	3969,0,c	;volatile
   342   0006F4  9281               	bcf	3969,1,c	;volatile
   343   0006F6                     
   344                           ;lcdwithoutclear.c: 47:                  display("MOTOR2STOP      ");
   345   0006F6  0E01               	movlw	low STR_3
   346   0006F8  6E06               	movwf	display@p^0,c
   347   0006FA  EC38  F004         	call	_display	;wreg free
   348   0006FE  EF81  F003         	goto	l934
   349   000702                     l42:
   350   000702                     l934:
   351                           
   352                           ;lcdwithoutclear.c: 50:         if(RC5==1)
   353   000702  AA82               	btfss	3970,5,c	;volatile
   354   000704  EF86  F003         	goto	u251
   355   000708  EF88  F003         	goto	u250
   356   00070C                     u251:
   357   00070C  EF2B  F003         	goto	l904
   358   000710                     u250:
   359   000710                     
   360                           ;lcdwithoutclear.c: 51:         {;lcdwithoutclear.c: 52:             if(c2==2)
   361   000710  0E02               	movlw	2
   362   000712  1807               	xorwf	main@c2^0,w,c
   363   000714  1008               	iorwf	(main@c2+1)^0,w,c
   364   000716  A4D8               	btfss	status,2,c
   365   000718  EF90  F003         	goto	u261
   366   00071C  EF92  F003         	goto	u260
   367   000720                     u261:
   368   000720  EF94  F003         	goto	l940
   369   000724                     u260:
   370   000724                     
   371                           ;lcdwithoutclear.c: 53:             {;lcdwithoutclear.c: 54:                 c2=-1;
   372   000724  6807               	setf	main@c2^0,c
   373   000726  6808               	setf	(main@c2+1)^0,c
   374   000728                     l940:
   375                           
   376                           ;lcdwithoutclear.c: 56:             c2++;
   377   000728  4A07               	infsnz	main@c2^0,f,c
   378   00072A  2A08               	incf	(main@c2+1)^0,f,c
   379   00072C                     l48:
   380   00072C  BA82               	btfsc	3970,5,c	;volatile
   381   00072E  EF9B  F003         	goto	u271
   382   000732  EF9D  F003         	goto	u270
   383   000736                     u271:
   384   000736  EF96  F003         	goto	l48
   385   00073A                     u270:
   386   00073A                     
   387                           ;lcdwithoutclear.c: 58:            cmd(0xC0);
   388   00073A  0EC0               	movlw	192
   389   00073C  EC08  F004         	call	_cmd
   390   000740                     
   391                           ;lcdwithoutclear.c: 59:          if(c2==0)
   392   000740  5007               	movf	main@c2^0,w,c
   393   000742  1008               	iorwf	(main@c2+1)^0,w,c
   394   000744  A4D8               	btfss	status,2,c
   395   000746  EFA7  F003         	goto	u281
   396   00074A  EFA9  F003         	goto	u280
   397   00074E                     u281:
   398   00074E  EFB1  F003         	goto	l950
   399   000752                     u280:
   400   000752                     
   401                           ;lcdwithoutclear.c: 60:             {;lcdwithoutclear.c: 61:             RB2=1; RB3=0;
   402   000752  8481               	bsf	3969,2,c	;volatile
   403   000754  9681               	bcf	3969,3,c	;volatile
   404   000756                     
   405                           ;lcdwithoutclear.c: 62:              display("MOTOR2CLOCKWISE ");
   406   000756  0E12               	movlw	low STR_1
   407   000758  6E06               	movwf	display@p^0,c
   408   00075A  EC38  F004         	call	_display	;wreg free
   409                           
   410                           ;lcdwithoutclear.c: 63:             }
   411   00075E  EF2B  F003         	goto	l904
   412   000762                     l950:
   413   000762  0407               	decf	main@c2^0,w,c
   414   000764  1008               	iorwf	(main@c2+1)^0,w,c
   415   000766  A4D8               	btfss	status,2,c
   416   000768  EFB8  F003         	goto	u291
   417   00076C  EFBA  F003         	goto	u290
   418   000770                     u291:
   419   000770  EFC2  F003         	goto	l956
   420   000774                     u290:
   421   000774                     
   422                           ;lcdwithoutclear.c: 65:             {;lcdwithoutclear.c: 66:             RB2=0; RB3=1;
   423   000774  9481               	bcf	3969,2,c	;volatile
   424   000776  8681               	bsf	3969,3,c	;volatile
   425   000778                     
   426                           ;lcdwithoutclear.c: 67:              display("MOTOR2ANTICLOCK");
   427   000778  0E23               	movlw	low STR_2
   428   00077A  6E06               	movwf	display@p^0,c
   429   00077C  EC38  F004         	call	_display	;wreg free
   430                           
   431                           ;lcdwithoutclear.c: 68:             }
   432   000780  EF2B  F003         	goto	l904
   433   000784                     l956:
   434   000784  0E02               	movlw	2
   435   000786  1807               	xorwf	main@c2^0,w,c
   436   000788  1008               	iorwf	(main@c2+1)^0,w,c
   437   00078A  A4D8               	btfss	status,2,c
   438   00078C  EFCA  F003         	goto	u301
   439   000790  EFCC  F003         	goto	u300
   440   000794                     u301:
   441   000794  EFD4  F003         	goto	l46
   442   000798                     u300:
   443   000798                     
   444                           ;lcdwithoutclear.c: 70:             {;lcdwithoutclear.c: 71:                 RB2=0; RB3=
      +                          0;
   445   000798  9481               	bcf	3969,2,c	;volatile
   446   00079A  9681               	bcf	3969,3,c	;volatile
   447   00079C                     
   448                           ;lcdwithoutclear.c: 72:                  display("MOTOR2STOP      ");
   449   00079C  0E01               	movlw	low STR_3
   450   00079E  6E06               	movwf	display@p^0,c
   451   0007A0  EC38  F004         	call	_display	;wreg free
   452   0007A4  EF2B  F003         	goto	l904
   453   0007A8                     l46:
   454   0007A8  EF2B  F003         	goto	l904
   455   0007AC  EF00  F000         	goto	start
   456   0007B0                     __end_of_main:
   457                           	callstack 0
   458                           
   459 ;; *************** function _display *****************
   460 ;; Defined at:
   461 ;;		line 98 in file "lcdwithoutclear.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  p               1    5[COMRAM] PTR const unsigned char 
   464 ;;		 -> STR_6(17), STR_5(16), STR_4(17), STR_3(17), 
   465 ;;		 -> STR_2(16), STR_1(17), 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         1       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         1       0       0       0       0       0       0
   481 ;;Total ram usage:        1 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 1
   484 ;; This function calls:
   485 ;;		_data
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492   000870                     __ptext1:
   493                           	callstack 0
   494   000870                     _display:
   495                           	callstack 29
   496   000870                     
   497                           ;lcdwithoutclear.c: 98: void display(const char *p);lcdwithoutclear.c: 99: {;lcdwithoutc
      +                          lear.c: 100:     while(*p)
   498   000870  EF41  F004         	goto	l890
   499   000874                     l886:
   500                           
   501                           ;lcdwithoutclear.c: 101:     {;lcdwithoutclear.c: 102:         data(*p);
   502   000874  C006  FFF6         	movff	display@p,tblptrl
   503   000878                     	if	0	;There is only one active tblptr byte
   504   000878                     	endif
   505   000878                     	if	0	;tblptru may be non-zero
   506   000878                     	endif
   507   000878                     	if	0	;tblptru may be non-zero
   508   000878                     	endif
   509   000878  0008               	tblrd		*
   510   00087A  50F5               	movf	tablat,w,c
   511   00087C  ECD8  F003         	call	_data
   512   000880                     
   513                           ;lcdwithoutclear.c: 103:         p++;
   514   000880  2A06               	incf	display@p^0,f,c
   515   000882                     l890:
   516                           
   517                           ;lcdwithoutclear.c: 100:     while(*p)
   518   000882  C006  FFF6         	movff	display@p,tblptrl
   519   000886                     	if	0	;There is only one active tblptr byte
   520   000886                     	endif
   521   000886                     	if	0	;tblptru may be non-zero
   522   000886                     	endif
   523   000886                     	if	0	;tblptru may be non-zero
   524   000886                     	endif
   525   000886  0008               	tblrd		*
   526   000888  50F5               	movf	tablat,w,c
   527   00088A  0900               	iorlw	0
   528   00088C  A4D8               	btfss	status,2,c
   529   00088E  EF4B  F004         	goto	u181
   530   000892  EF4D  F004         	goto	u180
   531   000896                     u181:
   532   000896  EF3A  F004         	goto	l886
   533   00089A                     u180:
   534   00089A  0012               	return		;funcret
   535   00089C                     __end_of_display:
   536                           	callstack 0
   537                           
   538 ;; *************** function _data *****************
   539 ;; Defined at:
   540 ;;		line 87 in file "lcdwithoutclear.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  b               1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  b               1    0[COMRAM] unsigned char 
   545 ;;  i               2    3[COMRAM] int 
   546 ;;  i               2    1[COMRAM] int 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   556 ;;      Params:         0       0       0       0       0       0       0
   557 ;;      Locals:         5       0       0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0
   559 ;;      Totals:         5       0       0       0       0       0       0
   560 ;;Total ram usage:        5 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_display
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text2
   570   0007B0                     __ptext2:
   571                           	callstack 0
   572   0007B0                     _data:
   573                           	callstack 29
   574                           
   575                           ;incstack = 0
   576                           ;data@b stored from wreg
   577   0007B0  6E01               	movwf	data@b^0,c
   578   0007B2                     
   579                           ;lcdwithoutclear.c: 87: void data(unsigned char b );lcdwithoutclear.c: 88: {;lcdwithoutc
      +                          lear.c: 89:     RC0=1;
   580   0007B2  8082               	bsf	3970,0,c	;volatile
   581                           
   582                           ;lcdwithoutclear.c: 90:     RC1=0;
   583   0007B4  9282               	bcf	3970,1,c	;volatile
   584   0007B6                     
   585                           ;lcdwithoutclear.c: 91:     PORTD=b;
   586   0007B6  C001  FF83         	movff	data@b,3971	;volatile
   587   0007BA                     
   588                           ;lcdwithoutclear.c: 92:     RC2=1;
   589   0007BA  8482               	bsf	3970,2,c	;volatile
   590   0007BC                     
   591                           ;lcdwithoutclear.c: 93:     for(int i=0;i<=100;i++);
   592   0007BC  0E00               	movlw	0
   593   0007BE  6E03               	movwf	(data@i+1)^0,c
   594   0007C0  0E00               	movlw	0
   595   0007C2  6E02               	movwf	data@i^0,c
   596   0007C4                     l766:
   597   0007C4  4A02               	infsnz	data@i^0,f,c
   598   0007C6  2A03               	incf	(data@i+1)^0,f,c
   599   0007C8  BE03               	btfsc	(data@i+1)^0,7,c
   600   0007CA  EFF0  F003         	goto	u11
   601   0007CE  5003               	movf	(data@i+1)^0,w,c
   602   0007D0  E109               	bnz	u10
   603   0007D2  0E65               	movlw	101
   604   0007D4  5C02               	subwf	data@i^0,w,c
   605   0007D6  A0D8               	btfss	status,0,c
   606   0007D8  EFF0  F003         	goto	u11
   607   0007DC  EFF2  F003         	goto	u10
   608   0007E0                     u11:
   609   0007E0  EFE2  F003         	goto	l766
   610   0007E4                     u10:
   611   0007E4                     
   612                           ;lcdwithoutclear.c: 94:     RC2=0;
   613   0007E4  9482               	bcf	3970,2,c	;volatile
   614   0007E6                     
   615                           ;lcdwithoutclear.c: 95:     for(int i=0;i<=5000;i++);
   616   0007E6  0E00               	movlw	0
   617   0007E8  6E05               	movwf	(data@i_67+1)^0,c
   618   0007EA  0E00               	movlw	0
   619   0007EC  6E04               	movwf	data@i_67^0,c
   620   0007EE                     l776:
   621   0007EE  4A04               	infsnz	data@i_67^0,f,c
   622   0007F0  2A05               	incf	(data@i_67+1)^0,f,c
   623   0007F2  BE05               	btfsc	(data@i_67+1)^0,7,c
   624   0007F4  EF05  F004         	goto	u21
   625   0007F8  0E89               	movlw	137
   626   0007FA  5C04               	subwf	data@i_67^0,w,c
   627   0007FC  0E13               	movlw	19
   628   0007FE  5805               	subwfb	(data@i_67+1)^0,w,c
   629   000800  A0D8               	btfss	status,0,c
   630   000802  EF05  F004         	goto	u21
   631   000806  EF07  F004         	goto	u20
   632   00080A                     u21:
   633   00080A  EFF7  F003         	goto	l776
   634   00080E                     u20:
   635   00080E  0012               	return		;funcret
   636   000810                     __end_of_data:
   637                           	callstack 0
   638                           
   639 ;; *************** function _cmd *****************
   640 ;; Defined at:
   641 ;;		line 77 in file "lcdwithoutclear.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  a               1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  a               1    0[COMRAM] unsigned char 
   646 ;;  i               2    3[COMRAM] int 
   647 ;;  i               2    1[COMRAM] int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   657 ;;      Params:         0       0       0       0       0       0       0
   658 ;;      Locals:         5       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0
   660 ;;      Totals:         5       0       0       0       0       0       0
   661 ;;Total ram usage:        5 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text3
   671   000810                     __ptext3:
   672                           	callstack 0
   673   000810                     _cmd:
   674                           	callstack 30
   675                           
   676                           ;incstack = 0
   677                           ;cmd@a stored from wreg
   678   000810  6E01               	movwf	cmd@a^0,c
   679   000812                     
   680                           ;lcdwithoutclear.c: 77:   void cmd(unsigned char a );lcdwithoutclear.c: 78: {;lcdwithout
      +                          clear.c: 79:     RC0=0;
   681   000812  9082               	bcf	3970,0,c	;volatile
   682                           
   683                           ;lcdwithoutclear.c: 80:     RC1=0;
   684   000814  9282               	bcf	3970,1,c	;volatile
   685   000816                     
   686                           ;lcdwithoutclear.c: 81:     PORTD=a;
   687   000816  C001  FF83         	movff	cmd@a,3971	;volatile
   688   00081A                     
   689                           ;lcdwithoutclear.c: 82:     RC2=1;
   690   00081A  8482               	bsf	3970,2,c	;volatile
   691   00081C                     
   692                           ;lcdwithoutclear.c: 83:     for(int i=0;i<=100;i++);
   693   00081C  0E00               	movlw	0
   694   00081E  6E03               	movwf	(cmd@i+1)^0,c
   695   000820  0E00               	movlw	0
   696   000822  6E02               	movwf	cmd@i^0,c
   697   000824                     l792:
   698   000824  4A02               	infsnz	cmd@i^0,f,c
   699   000826  2A03               	incf	(cmd@i+1)^0,f,c
   700   000828  BE03               	btfsc	(cmd@i+1)^0,7,c
   701   00082A  EF20  F004         	goto	u31
   702   00082E  5003               	movf	(cmd@i+1)^0,w,c
   703   000830  E109               	bnz	u30
   704   000832  0E65               	movlw	101
   705   000834  5C02               	subwf	cmd@i^0,w,c
   706   000836  A0D8               	btfss	status,0,c
   707   000838  EF20  F004         	goto	u31
   708   00083C  EF22  F004         	goto	u30
   709   000840                     u31:
   710   000840  EF12  F004         	goto	l792
   711   000844                     u30:
   712   000844                     
   713                           ;lcdwithoutclear.c: 84:     RC2=0;
   714   000844  9482               	bcf	3970,2,c	;volatile
   715   000846                     
   716                           ;lcdwithoutclear.c: 85:     for(int i=0;i<=5000;i++);
   717   000846  0E00               	movlw	0
   718   000848  6E05               	movwf	(cmd@i_63+1)^0,c
   719   00084A  0E00               	movlw	0
   720   00084C  6E04               	movwf	cmd@i_63^0,c
   721   00084E                     l802:
   722   00084E  4A04               	infsnz	cmd@i_63^0,f,c
   723   000850  2A05               	incf	(cmd@i_63+1)^0,f,c
   724   000852  BE05               	btfsc	(cmd@i_63+1)^0,7,c
   725   000854  EF35  F004         	goto	u41
   726   000858  0E89               	movlw	137
   727   00085A  5C04               	subwf	cmd@i_63^0,w,c
   728   00085C  0E13               	movlw	19
   729   00085E  5805               	subwfb	(cmd@i_63+1)^0,w,c
   730   000860  A0D8               	btfss	status,0,c
   731   000862  EF35  F004         	goto	u41
   732   000866  EF37  F004         	goto	u40
   733   00086A                     u41:
   734   00086A  EF27  F004         	goto	l802
   735   00086E                     u40:
   736   00086E  0012               	return		;funcret
   737   000870                     __end_of_cmd:
   738                           	callstack 0
   739                           
   740                           	psect	rparam
   741   000000                     tosu	equ	0xFFF
   742                           tosh	equ	0xFFE
   743                           tosl	equ	0xFFD
   744                           stkptr	equ	0xFFC
   745                           pclatu	equ	0xFFB
   746                           pclath	equ	0xFFA
   747                           pcl	equ	0xFF9
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           prodh	equ	0xFF4
   753                           prodl	equ	0xFF3
   754                           indf0	equ	0xFEF
   755                           postinc0	equ	0xFEE
   756                           postdec0	equ	0xFED
   757                           preinc0	equ	0xFEC
   758                           plusw0	equ	0xFEB
   759                           fsr0h	equ	0xFEA
   760                           fsr0l	equ	0xFE9
   761                           wreg	equ	0xFE8
   762                           indf1	equ	0xFE7
   763                           postinc1	equ	0xFE6
   764                           postdec1	equ	0xFE5
   765                           preinc1	equ	0xFE4
   766                           plusw1	equ	0xFE3
   767                           fsr1h	equ	0xFE2
   768                           fsr1l	equ	0xFE1
   769                           bsr	equ	0xFE0
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           preinc2	equ	0xFDC
   774                           plusw2	equ	0xFDB
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[16]), STR_6(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     833
                                              6 COMRAM     2     2      0
                                _cmd
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     576
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh          F      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 06 19:41:44 2024

                     l42 0702                       l62 0844                       l46 07A8  
                     l38 0686                       l72 080E                       l48 072C  
                     l65 086E                       l69 07E4                       l78 089A  
                     u10 07E4                       u11 07E0                       u20 080E  
                     u21 080A                       u30 0844                       u31 0840  
                     u40 086E                       u41 086A                      l802 084E  
                    l804 0852                      l900 0652                      l910 067E  
                    l902 0652                      l760 07BC                      l920 06B0  
                    l912 0682                      l904 0656                      l770 07E6  
                    l754 07B2                      l930 06F2                      l922 06BC  
                    l914 0694                      l906 065C                      l780 0812  
                    l756 07B6                      l940 0728                      l932 06F6  
                    l924 06CE                      l916 069A                      l908 066A  
                    l782 0816                      l766 07C4                      l758 07BA  
                    l950 0762                      l942 073A                      l926 06D2  
                    l918 06AC                      l934 0702                      l792 0824  
                    l784 081A                      l776 07EE                      l768 07C8  
                    l960 079C                      l952 0774                      l944 0740  
                    l936 0710                      l928 06DE                      l794 0828  
                    l786 081C                      l778 07F2                      l890 0882  
                    l954 0778                      l946 0752                      l938 0724  
                    l796 0846                      l884 0870                      l956 0784  
                    l948 0756                      l892 0634                      l886 0874  
                    l958 0798                      l894 0640                      l888 0880  
                    l896 0646                      l898 064C                      _RB0 7C08  
                    _RB1 7C09                      _RB2 7C0A                      _RC0 7C10  
                    _RB3 7C0B                      _RC1 7C11                      _RC2 7C12  
                    _RC4 7C14                      _RC5 7C15                      u200 067E  
                    u201 067A                      u210 0694                      u211 0690  
                    u300 0798                      u220 06AC                      u301 0794  
                    u221 06A8                      u230 06CE                      u231 06CA  
                    u240 06F2                      u241 06EE                      u250 0710  
                    u251 070C                      u180 089A                      u260 0724  
                    u181 0896                      u261 0720                      u270 073A  
                    u190 066A                      u271 0736                      u191 0666  
                    u280 0752                      u281 074E                      u290 0774  
                    u291 0770                      _cmd 0810                     ?_cmd 0001  
                   STR_1 0612                     STR_2 0623                     STR_3 0601  
                   STR_4 0612                     STR_5 0623                     STR_6 0601  
                   _data 07B0                     cmd@a 0001                     cmd@i 0002  
                   _main 0634                     start 0000             ___param_bank 0000  
                  ??_cmd 0001                    ?_data 0001                    ?_main 0001  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95          __end_of_display 089C                    data@b 0001  
                  data@i 0002                    tablat 0FF5                    status 0FD8  
        __initialization 089C             __end_of_data 0810             __end_of_main 07B0  
                 ??_data 0001                   ??_main 0007            __activetblptr 0001  
                 isa$std 0001                   main@c2 0007                ??_display 0007  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 089C  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 089C  
                __ramtop 0600                  __ptext0 0634                  __ptext1 0870  
                __ptext2 07B0                  __ptext3 0810                  cmd@i_63 0004  
                _display 0870     end_of_initialization 089C      start_initialization 089C  
            __end_of_cmd 0870                 ?_display 0006              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               data@i_67 0004                 isa$xinst 0000                 display@p 0006  
